Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1277, -0.8760, -0.3223, -0.7115]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1718, -0.8625, -0.3658, -0.7556]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2188, -0.8622, -0.4128, -0.8025]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2590, -0.8715, -0.4526, -0.8428]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2990, -0.8837, -0.4911, -0.8828]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3358, -0.8944, -0.5289, -0.9196]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3630, -0.9045, -0.5597, -0.9468]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3822, -0.9133, -0.5866, -0.9660]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3961, -0.9193, -0.6151, -0.9798]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4015, -0.9221, -0.6328, -0.9852]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4064, -0.9205, -0.6521, -0.9901]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4092, -0.9203, -0.6646, -0.9929]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4125, -0.9305, -0.6809, -0.9962]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4143, -0.9401, -0.6957, -0.9980]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4172, -0.9427, -0.7104, -1.0009]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4188, -0.9456, -0.7260, -1.0025]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4199, -0.9499, -0.7417, -1.0036]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4290, -0.9705, -0.7715, -1.0128]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4358, -0.9905, -0.7948, -1.0195]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.430000. Loss: 2.888225. Time: 1.415378
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.520000, Val Loss: 2.822899 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4494, -1.0037, -0.8467, -1.0332]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4512, -1.0057, -0.8743, -1.0350]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4500, -0.9963, -0.8947, -1.0337]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4446, -0.9908, -0.9114, -1.0284]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4402, -0.9894, -0.9235, -1.0239]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4426, -0.9867, -0.9419, -1.0263]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4434, -0.9871, -0.9641, -1.0272]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4406, -0.9877, -0.9775, -1.0244]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4398, -0.9883, -0.9900, -1.0235]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4384, -0.9956, -1.0032, -1.0221]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4377, -1.0080, -1.0132, -1.0215]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4419, -1.0174, -1.0230, -1.0257]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4501, -1.0258, -1.0454, -1.0339]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4614, -1.0286, -1.0729, -1.0451]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4654, -1.0298, -1.0956, -1.0491]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4775, -1.0428, -1.1373, -1.0613]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4837, -1.0505, -1.1667, -1.0675]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4890, -1.0548, -1.1937, -1.0728]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5013, -1.0687, -1.2324, -1.0851]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.655000. Loss: 1.528513. Time: 1.413956
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.650000, Val Loss: 1.384481 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4912, -1.0967, -1.2702, -1.0750]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4702, -1.1031, -1.2672, -1.0540]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4325, -1.1077, -1.2512, -1.0163]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4014, -1.1122, -1.2380, -0.9852]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4015, -1.1090, -1.2481, -0.9853]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4013, -1.1123, -1.2650, -0.9851]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4020, -1.1031, -1.2800, -0.9857]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4154, -1.0910, -1.2961, -0.9992]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4434, -1.0864, -1.3115, -1.0271]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4616, -1.0886, -1.3297, -1.0454]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -1.0880, -1.3371, -1.0506]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4805, -1.0839, -1.3403, -1.0642]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4975, -1.0865, -1.3382, -1.0813]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5090, -1.0855, -1.3302, -1.0927]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5095, -1.0856, -1.3217, -1.0932]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4938, -1.0861, -1.3116, -1.0776]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4770, -1.0817, -1.3045, -1.0607]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4612, -1.0767, -1.3033, -1.0450]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4595, -1.0794, -1.3268, -1.0432]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.725000. Loss: 1.244374. Time: 1.418173
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.650000, Val Loss: 2.633250 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4635, -1.0893, -1.3557, -1.0472]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4576, -1.0997, -1.3629, -1.0414]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4449, -1.1026, -1.3749, -1.0286]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4495, -1.1087, -1.3762, -1.0332]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4465, -1.1173, -1.3704, -1.0302]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4358, -1.1289, -1.3730, -1.0195]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4306, -1.1361, -1.3776, -1.0144]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4334, -1.1542, -1.3831, -1.0171]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4353, -1.1628, -1.3839, -1.0191]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4312, -1.1689, -1.3806, -1.0150]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4362, -1.1813, -1.3724, -1.0200]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4612, -1.1857, -1.3573, -1.0449]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4916, -1.1873, -1.3552, -1.0754]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5129, -1.1865, -1.3626, -1.0967]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5272, -1.1801, -1.3668, -1.1109]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5316, -1.1608, -1.3722, -1.1153]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5265, -1.1579, -1.3686, -1.1103]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5104, -1.1541, -1.3578, -1.0941]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4906, -1.1508, -1.3547, -1.0743]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.670000. Loss: 1.564480. Time: 1.441086
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.590000, Val Loss: 3.427177 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4542, -1.1430, -1.3842, -1.0379]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4424, -1.1435, -1.4085, -1.0262]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4270, -1.1519, -1.4244, -1.0107]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4081, -1.1530, -1.4285, -0.9919]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3712, -1.1569, -1.4316, -0.9549]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3568, -1.1601, -1.4254, -0.9406]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3640, -1.1652, -1.4206, -0.9477]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4082, -1.1856, -1.4212, -0.9919]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4334, -1.2005, -1.4324, -1.0171]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4570, -1.2075, -1.4367, -1.0407]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4906, -1.2068, -1.4334, -1.0744]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5565, -1.2119, -1.4291, -1.1403]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5974, -1.2201, -1.4232, -1.1811]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5748, -1.2097, -1.4281, -1.1586]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5488, -1.2033, -1.4271, -1.1326]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5278, -1.1959, -1.4295, -1.1115]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5108, -1.1870, -1.4183, -1.0945]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5200, -1.1846, -1.4123, -1.1037]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5105, -1.1820, -1.4083, -1.0943]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.700000. Loss: 1.581339. Time: 1.433523
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.730000, Val Loss: 1.449027 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4876, -1.1713, -1.4263, -1.0713]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4622, -1.1798, -1.4499, -1.0459]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4545, -1.1857, -1.4832, -1.0383]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4629, -1.1841, -1.5033, -1.0467]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4745, -1.1764, -1.4976, -1.0583]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4788, -1.1685, -1.4849, -1.0626]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4687, -1.1616, -1.4723, -1.0525]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4562, -1.1525, -1.4714, -1.0399]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4523, -1.1459, -1.4813, -1.0360]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4559, -1.1421, -1.4887, -1.0397]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4595, -1.1416, -1.4920, -1.0432]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -1.1417, -1.4900, -1.0507]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4695, -1.1439, -1.4835, -1.0533]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4728, -1.1430, -1.4827, -1.0565]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4767, -1.1470, -1.4941, -1.0605]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4597, -1.1487, -1.4983, -1.0434]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4541, -1.1584, -1.4983, -1.0378]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4527, -1.1602, -1.4945, -1.0364]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4465, -1.1661, -1.4857, -1.0302]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.680000. Loss: 1.381159. Time: 1.421970
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.740000, Val Loss: 1.587212 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4555, -1.1695, -1.4779, -1.0392]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4898, -1.1651, -1.4772, -1.0735]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5125, -1.1706, -1.4670, -1.0963]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5169, -1.1816, -1.4518, -1.1007]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5095, -1.1969, -1.4378, -1.0933]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5025, -1.1923, -1.4253, -1.0862]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4923, -1.1935, -1.4226, -1.0761]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4872, -1.1931, -1.4288, -1.0709]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4779, -1.1905, -1.4400, -1.0617]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4678, -1.2049, -1.4573, -1.0515]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4710, -1.2117, -1.4852, -1.0548]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4718, -1.2168, -1.4999, -1.0555]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4790, -1.2223, -1.5115, -1.0627]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4833, -1.2229, -1.5180, -1.0671]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4935, -1.2132, -1.5179, -1.0773]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5048, -1.2012, -1.5192, -1.0885]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5006, -1.1964, -1.5244, -1.0844]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4944, -1.1873, -1.5277, -1.0781]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4895, -1.1798, -1.5242, -1.0733]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.685000. Loss: 1.540121. Time: 1.421011
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.760000, Val Loss: 1.316710 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4737, -1.1918, -1.5049, -1.0575]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4804, -1.2060, -1.5164, -1.0642]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4891, -1.2171, -1.5285, -1.0729]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5029, -1.2368, -1.5511, -1.0867]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5050, -1.2512, -1.5632, -1.0888]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5004, -1.2596, -1.5844, -1.0841]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4975, -1.2671, -1.5894, -1.0813]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4852, -1.2662, -1.5875, -1.0690]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4715, -1.2654, -1.5819, -1.0552]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4649, -1.2711, -1.5749, -1.0487]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4712, -1.2812, -1.5560, -1.0549]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4727, -1.2953, -1.5254, -1.0565]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4791, -1.3159, -1.4996, -1.0629]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4915, -1.3350, -1.4615, -1.0753]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5095, -1.3492, -1.4320, -1.0932]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5200, -1.3545, -1.4243, -1.1037]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5228, -1.3547, -1.4151, -1.1065]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5243, -1.3423, -1.4085, -1.1081]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5202, -1.3370, -1.3995, -1.1040]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.705000. Loss: 1.614112. Time: 1.417004
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.770000, Val Loss: 1.113728 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4650, -1.3156, -1.3984, -1.0488]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4430, -1.3074, -1.4047, -1.0268]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4332, -1.2991, -1.4121, -1.0169]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4271, -1.2945, -1.4162, -1.0108]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4227, -1.2977, -1.4207, -1.0064]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4245, -1.3068, -1.4357, -1.0082]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4264, -1.3147, -1.4438, -1.0102]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4429, -1.3110, -1.4520, -1.0267]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4503, -1.3073, -1.4699, -1.0341]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4663, -1.3059, -1.4826, -1.0500]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4712, -1.3055, -1.5013, -1.0550]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4757, -1.3006, -1.5262, -1.0594]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4834, -1.2999, -1.5524, -1.0672]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5061, -1.3192, -1.5639, -1.0898]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5234, -1.3325, -1.5617, -1.1072]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5236, -1.3407, -1.5566, -1.1074]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5205, -1.3437, -1.5530, -1.1042]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5271, -1.3475, -1.5401, -1.1108]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5359, -1.3456, -1.5438, -1.1196]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.740000. Loss: 1.338220. Time: 1.417105
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.770000, Val Loss: 1.432490 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5095, -1.3483, -1.5300, -1.0933]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4956, -1.3520, -1.5306, -1.0794]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4900, -1.3486, -1.5410, -1.0738]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4830, -1.3370, -1.5410, -1.0668]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4888, -1.3212, -1.5489, -1.0725]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4893, -1.3134, -1.5488, -1.0731]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -1.3089, -1.5400, -1.0694]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4762, -1.3137, -1.5323, -1.0599]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4646, -1.3198, -1.5028, -1.0483]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4550, -1.3200, -1.4874, -1.0388]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4369, -1.3199, -1.4752, -1.0207]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4278, -1.3180, -1.4693, -1.0115]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4249, -1.3091, -1.4677, -1.0086]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4483, -1.3038, -1.4729, -1.0320]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4691, -1.3038, -1.4734, -1.0529]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4865, -1.2953, -1.4650, -1.0703]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5046, -1.2774, -1.4498, -1.0883]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5179, -1.2793, -1.4556, -1.1017]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5306, -1.2823, -1.4585, -1.1143]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.730000. Loss: 1.300554. Time: 1.418042
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.630000, Val Loss: 3.482998 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5466, -1.2957, -1.4496, -1.1304]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5217, -1.3087, -1.4563, -1.1054]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4946, -1.3148, -1.4696, -1.0783]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4634, -1.3285, -1.4959, -1.0471]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4363, -1.3377, -1.5068, -1.0200]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4261, -1.3540, -1.5105, -1.0099]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4128, -1.3635, -1.5157, -0.9965]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3743, -1.3634, -1.5229, -0.9580]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3508, -1.3574, -1.5264, -0.9346]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3756, -1.3521, -1.5257, -0.9594]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4438, -1.3514, -1.5268, -1.0276]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4971, -1.3468, -1.5264, -1.0809]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5236, -1.3397, -1.5187, -1.1073]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5339, -1.3353, -1.5097, -1.1177]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5546, -1.3399, -1.5023, -1.1383]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5470, -1.3532, -1.5000, -1.1307]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5371, -1.3687, -1.4944, -1.1208]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5176, -1.3792, -1.4803, -1.1013]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4998, -1.3744, -1.4702, -1.0835]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.665000. Loss: 2.236625. Time: 1.420115
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.640000, Val Loss: 1.861013 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5230, -1.3816, -1.5179, -1.1068]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5066, -1.3824, -1.5626, -1.0904]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4633, -1.3838, -1.5926, -1.0470]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4300, -1.3777, -1.6120, -1.0138]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4003, -1.3721, -1.6350, -0.9840]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3792, -1.3704, -1.6486, -0.9630]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4069, -1.3521, -1.6318, -0.9906]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4332, -1.3388, -1.6317, -1.0170]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4614, -1.3433, -1.6128, -1.0451]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4968, -1.3471, -1.5877, -1.0805]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5224, -1.3501, -1.5635, -1.1061]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5467, -1.3493, -1.5398, -1.1305]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5698, -1.3490, -1.5289, -1.1535]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5689, -1.3493, -1.5197, -1.1527]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5710, -1.3537, -1.5117, -1.1547]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5673, -1.3608, -1.5109, -1.1510]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5650, -1.3652, -1.5102, -1.1488]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5793, -1.3654, -1.5068, -1.1631]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5778, -1.3626, -1.4903, -1.1616]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.760000. Loss: 1.766050. Time: 1.422515
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.770000, Val Loss: 1.629749 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4878, -1.3447, -1.5076, -1.0716]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4470, -1.3430, -1.5194, -1.0308]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4360, -1.3526, -1.5264, -1.0197]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4309, -1.3684, -1.5280, -1.0147]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4646, -1.3763, -1.5268, -1.0484]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4953, -1.3754, -1.5350, -1.0790]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5054, -1.3733, -1.5436, -1.0892]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5089, -1.3691, -1.5482, -1.0927]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5094, -1.3644, -1.5569, -1.0932]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5047, -1.3616, -1.5661, -1.0885]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4992, -1.3643, -1.5672, -1.0830]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4976, -1.3592, -1.5669, -1.0814]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4968, -1.3553, -1.5743, -1.0805]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4939, -1.3549, -1.5908, -1.0777]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4947, -1.3531, -1.5992, -1.0784]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5023, -1.3583, -1.5975, -1.0860]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5229, -1.3835, -1.5742, -1.1067]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5284, -1.4027, -1.5668, -1.1122]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5253, -1.4160, -1.5528, -1.1091]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.770000. Loss: 1.324313. Time: 1.418471
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.690000, Val Loss: 2.163120 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5078, -1.4102, -1.5300, -1.0915]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4898, -1.4023, -1.5276, -1.0736]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4790, -1.3979, -1.5274, -1.0628]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4601, -1.3962, -1.5164, -1.0438]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4487, -1.4047, -1.5198, -1.0324]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4394, -1.4094, -1.5198, -1.0232]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4363, -1.4125, -1.5220, -1.0201]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4377, -1.4147, -1.5226, -1.0214]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4418, -1.4155, -1.5175, -1.0255]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4564, -1.4169, -1.5031, -1.0402]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4685, -1.4247, -1.4877, -1.0523]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4719, -1.4455, -1.4831, -1.0556]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4771, -1.4694, -1.4698, -1.0608]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4789, -1.4763, -1.4531, -1.0626]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5057, -1.4741, -1.4261, -1.0895]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5193, -1.4780, -1.4298, -1.1030]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5307, -1.4827, -1.4431, -1.1144]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5258, -1.4765, -1.4675, -1.1096]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5262, -1.4695, -1.4724, -1.1100]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.745000. Loss: 1.109919. Time: 1.421051
Validate after epoch 14 with seed 964979
Val Accuracy: 0.750000, Val Loss: 1.613672 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5343, -1.4614, -1.4861, -1.1180]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5324, -1.4526, -1.4963, -1.1162]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5139, -1.4522, -1.5058, -1.0976]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5023, -1.4435, -1.5214, -1.0860]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5001, -1.4318, -1.5297, -1.0839]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4956, -1.4211, -1.5303, -1.0793]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4746, -1.4315, -1.5467, -1.0584]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4595, -1.4398, -1.5283, -1.0433]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4443, -1.4424, -1.5106, -1.0281]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4280, -1.4433, -1.4871, -1.0117]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4147, -1.4461, -1.4696, -0.9985]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4104, -1.4493, -1.4578, -0.9942]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4217, -1.4388, -1.4416, -1.0054]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4344, -1.4109, -1.4412, -1.0182]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4443, -1.3932, -1.4370, -1.0280]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4575, -1.3819, -1.4364, -1.0412]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4720, -1.3766, -1.4396, -1.0557]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4793, -1.3848, -1.4502, -1.0630]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4923, -1.3832, -1.4584, -1.0761]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.790000. Loss: 1.092189. Time: 1.415820
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.800000, Val Loss: 1.403366 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5020, -1.4062, -1.4701, -1.0857]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5131, -1.4092, -1.4678, -1.0969]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5120, -1.4123, -1.4660, -1.0957]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4943, -1.4175, -1.4789, -1.0781]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4760, -1.4285, -1.5008, -1.0597]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4700, -1.4334, -1.5377, -1.0537]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4567, -1.4391, -1.5562, -1.0404]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4550, -1.4425, -1.5712, -1.0387]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4643, -1.4495, -1.5829, -1.0480]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4851, -1.4479, -1.5993, -1.0688]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5024, -1.4325, -1.5902, -1.0862]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5086, -1.4322, -1.5600, -1.0923]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5110, -1.4296, -1.5288, -1.0948]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5126, -1.4279, -1.5058, -1.0964]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5270, -1.4210, -1.4679, -1.1108]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5336, -1.4169, -1.4453, -1.1174]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5486, -1.4209, -1.4575, -1.1323]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5342, -1.4113, -1.4675, -1.1179]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5191, -1.4129, -1.4667, -1.1028]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.745000. Loss: 1.435756. Time: 1.415690
Validate after epoch 16 with seed 840036
Val Accuracy: 0.730000, Val Loss: 1.374694 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4636, -1.4134, -1.4591, -1.0474]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4357, -1.4047, -1.4585, -1.0194]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4124, -1.3943, -1.4533, -0.9962]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4052, -1.3820, -1.4483, -0.9889]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4409, -1.3957, -1.4475, -1.0247]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4600, -1.4048, -1.4498, -1.0438]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4751, -1.4203, -1.4539, -1.0588]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4846, -1.4327, -1.4739, -1.0684]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -1.4399, -1.5148, -1.0694]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4881, -1.4414, -1.5380, -1.0719]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4857, -1.4432, -1.5496, -1.0694]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4873, -1.4467, -1.5663, -1.0711]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4883, -1.4324, -1.5816, -1.0721]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4844, -1.4145, -1.5863, -1.0681]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4759, -1.3962, -1.5863, -1.0597]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4749, -1.3904, -1.5947, -1.0587]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4804, -1.3927, -1.5987, -1.0641]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4900, -1.3909, -1.6004, -1.0738]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4998, -1.3895, -1.5885, -1.0836]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.745000. Loss: 1.401938. Time: 1.418237
Validate after epoch 17 with seed 180463
Val Accuracy: 0.800000, Val Loss: 1.487866 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4981, -1.3999, -1.5577, -1.0818]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4967, -1.4043, -1.5395, -1.0805]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4912, -1.4055, -1.5287, -1.0750]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4931, -1.4107, -1.5256, -1.0769]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4932, -1.4179, -1.5209, -1.0769]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4909, -1.4174, -1.5238, -1.0746]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4837, -1.4130, -1.5252, -1.0674]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4747, -1.4108, -1.5329, -1.0585]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4655, -1.4095, -1.5418, -1.0492]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4728, -1.4151, -1.5558, -1.0566]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4876, -1.4297, -1.5657, -1.0713]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4986, -1.4392, -1.5712, -1.0823]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5059, -1.4350, -1.5746, -1.0896]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5087, -1.4328, -1.5678, -1.0924]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5090, -1.4363, -1.5627, -1.0927]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5058, -1.4428, -1.5472, -1.0895]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5038, -1.4475, -1.5356, -1.0876]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5061, -1.4535, -1.5296, -1.0899]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5112, -1.4533, -1.5262, -1.0950]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.830000. Loss: 1.307811. Time: 1.414786
Validate after epoch 18 with seed 575883
Val Accuracy: 0.720000, Val Loss: 1.705965 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5030, -1.4423, -1.5175, -1.0868]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.4324, -1.5183, -1.0801]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4955, -1.4273, -1.5230, -1.0792]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4970, -1.4166, -1.5365, -1.0808]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4967, -1.4069, -1.5539, -1.0805]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4900, -1.4077, -1.5423, -1.0737]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4848, -1.4077, -1.5335, -1.0686]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4771, -1.4211, -1.5286, -1.0608]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4644, -1.4219, -1.5374, -1.0481]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4570, -1.4177, -1.5425, -1.0407]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4456, -1.4265, -1.5549, -1.0293]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4534, -1.4366, -1.5639, -1.0371]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4646, -1.4361, -1.5580, -1.0483]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4739, -1.4367, -1.5611, -1.0576]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4809, -1.4503, -1.5749, -1.0647]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4889, -1.4659, -1.6038, -1.0726]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4938, -1.4763, -1.6156, -1.0775]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4989, -1.4873, -1.6048, -1.0827]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5065, -1.4911, -1.5999, -1.0902]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.790000. Loss: 1.445410. Time: 1.420559
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.750000, Val Loss: 1.695612 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5195, -1.4896, -1.5776, -1.1033]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5212, -1.4925, -1.5452, -1.1050]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5149, -1.4999, -1.5307, -1.0986]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5127, -1.5142, -1.5170, -1.0964]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5181, -1.5303, -1.5072, -1.1019]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5155, -1.5405, -1.4990, -1.0992]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4977, -1.5528, -1.4895, -1.0815]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4895, -1.5670, -1.4819, -1.0733]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4753, -1.5560, -1.4972, -1.0590]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4630, -1.5467, -1.5074, -1.0467]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4513, -1.5398, -1.5120, -1.0350]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4434, -1.5404, -1.5123, -1.0271]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4346, -1.5292, -1.5107, -1.0183]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4304, -1.5216, -1.5126, -1.0142]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4257, -1.5147, -1.5209, -1.0094]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4192, -1.5114, -1.5281, -1.0029]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4080, -1.5085, -1.5283, -0.9918]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4269, -1.5045, -1.5221, -1.0107]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4736, -1.5101, -1.5268, -1.0574]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.770000. Loss: 1.228410. Time: 1.419213
Validate after epoch 20 with seed 822616
Val Accuracy: 0.720000, Val Loss: 2.074971 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5429, -1.5163, -1.5311, -1.1267]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5543, -1.5228, -1.5293, -1.1381]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5703, -1.5277, -1.5292, -1.1540]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5822, -1.5177, -1.5093, -1.1660]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5805, -1.5032, -1.4865, -1.1642]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5647, -1.5076, -1.4735, -1.1485]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5554, -1.5094, -1.4708, -1.1391]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5473, -1.5118, -1.4781, -1.1310]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5126, -1.5124, -1.4982, -1.0963]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4719, -1.5190, -1.5177, -1.0557]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4494, -1.5241, -1.5288, -1.0332]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4435, -1.5207, -1.5388, -1.0273]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4434, -1.5155, -1.5482, -1.0272]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4483, -1.5118, -1.5508, -1.0321]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4627, -1.5093, -1.5564, -1.0465]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4864, -1.5045, -1.5703, -1.0701]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5154, -1.4987, -1.5723, -1.0992]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5285, -1.4992, -1.5631, -1.1123]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5337, -1.5001, -1.5594, -1.1174]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.790000. Loss: 1.287021. Time: 1.418031
Validate after epoch 21 with seed 519531
Val Accuracy: 0.780000, Val Loss: 1.955409 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5262, -1.5076, -1.5535, -1.1099]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5132, -1.4981, -1.5493, -1.0969]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5026, -1.4852, -1.5456, -1.0864]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5092, -1.4751, -1.5411, -1.0929]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5172, -1.4757, -1.5263, -1.1010]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5269, -1.4879, -1.5124, -1.1106]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5306, -1.4924, -1.5017, -1.1143]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5218, -1.4964, -1.4970, -1.1056]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4980, -1.4987, -1.5070, -1.0817]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4655, -1.4972, -1.5224, -1.0492]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4411, -1.5026, -1.5423, -1.0249]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4249, -1.4910, -1.5494, -1.0087]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4143, -1.4728, -1.5566, -0.9981]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4159, -1.4541, -1.5642, -0.9997]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4252, -1.4438, -1.5694, -1.0090]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4380, -1.4467, -1.5721, -1.0218]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4568, -1.4495, -1.5666, -1.0406]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4781, -1.4668, -1.5643, -1.0618]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4903, -1.4848, -1.5608, -1.0740]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.780000. Loss: 1.369652. Time: 1.419611
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.770000, Val Loss: 1.557150 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4987, -1.4741, -1.5707, -1.0825]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4993, -1.4641, -1.5818, -1.0831]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5168, -1.4466, -1.5851, -1.1006]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5203, -1.4305, -1.5822, -1.1040]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5109, -1.4203, -1.5691, -1.0946]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5042, -1.4135, -1.5593, -1.0880]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5011, -1.4077, -1.5572, -1.0849]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5022, -1.3995, -1.5721, -1.0860]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5018, -1.4080, -1.5595, -1.0856]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5036, -1.4163, -1.5471, -1.0873]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5279, -1.4107, -1.5414, -1.1116]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5447, -1.4064, -1.5333, -1.1285]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5593, -1.4006, -1.5299, -1.1431]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5452, -1.3956, -1.5258, -1.1290]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5159, -1.4037, -1.5192, -1.0997]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4909, -1.4131, -1.5151, -1.0747]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4632, -1.4117, -1.5183, -1.0470]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4470, -1.4227, -1.5197, -1.0307]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4307, -1.4259, -1.5290, -1.0144]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.775000. Loss: 1.365019. Time: 1.437234
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.790000, Val Loss: 1.251976 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4200, -1.4190, -1.5356, -1.0037]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4427, -1.4381, -1.5499, -1.0265]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4612, -1.4472, -1.5596, -1.0449]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4735, -1.4500, -1.5655, -1.0572]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4826, -1.4532, -1.5650, -1.0664]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4910, -1.4570, -1.5594, -1.0748]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4943, -1.4647, -1.5655, -1.0781]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4939, -1.4732, -1.5721, -1.0776]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4834, -1.4826, -1.5834, -1.0672]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4845, -1.4882, -1.5993, -1.0683]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4820, -1.4807, -1.6198, -1.0658]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4857, -1.4695, -1.6306, -1.0695]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4903, -1.4647, -1.6251, -1.0741]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4915, -1.4718, -1.6125, -1.0753]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4926, -1.4770, -1.5977, -1.0763]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4990, -1.4764, -1.5862, -1.0828]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5065, -1.4734, -1.5839, -1.0902]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5102, -1.4767, -1.5795, -1.0939]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5170, -1.4890, -1.5599, -1.1007]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.815000. Loss: 1.009433. Time: 1.423503
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.770000, Val Loss: 1.477565 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5069, -1.5089, -1.5264, -1.0907]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5032, -1.5187, -1.5077, -1.0870]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5079, -1.5174, -1.4885, -1.0917]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5195, -1.5049, -1.4786, -1.1033]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5269, -1.4999, -1.4689, -1.1106]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5192, -1.4932, -1.4668, -1.1030]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5084, -1.4787, -1.4822, -1.0921]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5038, -1.4606, -1.5320, -1.0876]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4941, -1.4495, -1.5729, -1.0779]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4866, -1.4319, -1.5995, -1.0704]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4773, -1.4240, -1.6132, -1.0611]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4693, -1.4250, -1.6254, -1.0531]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4701, -1.4233, -1.6372, -1.0538]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4722, -1.4215, -1.6408, -1.0559]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4667, -1.4171, -1.6378, -1.0504]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4626, -1.4147, -1.6264, -1.0463]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4853, -1.4173, -1.6084, -1.0690]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5163, -1.4209, -1.5747, -1.1001]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5363, -1.4254, -1.5441, -1.1200]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.795000. Loss: 1.448780. Time: 1.417537
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.760000, Val Loss: 1.640479 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5400, -1.4231, -1.4912, -1.1238]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5226, -1.4172, -1.4871, -1.1063]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4929, -1.4084, -1.4937, -1.0767]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4684, -1.3936, -1.5129, -1.0522]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4566, -1.3842, -1.5315, -1.0403]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4536, -1.3774, -1.5427, -1.0373]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4521, -1.3672, -1.5584, -1.0359]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4520, -1.3638, -1.5618, -1.0357]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4519, -1.3490, -1.5501, -1.0357]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4580, -1.3381, -1.5372, -1.0418]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4719, -1.3399, -1.5294, -1.0557]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4849, -1.3351, -1.5326, -1.0686]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4933, -1.3349, -1.5421, -1.0770]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5011, -1.3375, -1.5449, -1.0849]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.3401, -1.5320, -1.0801]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4860, -1.3361, -1.5142, -1.0698]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4735, -1.3313, -1.4951, -1.0573]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -1.3245, -1.4874, -1.0507]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4696, -1.3062, -1.4906, -1.0534]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.775000. Loss: 1.210821. Time: 1.419752
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.780000, Val Loss: 1.571054 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4828, -1.3062, -1.5067, -1.0666]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4744, -1.2959, -1.5126, -1.0581]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4872, -1.2886, -1.5126, -1.0709]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5064, -1.2808, -1.5274, -1.0901]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5267, -1.2729, -1.5505, -1.1105]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5379, -1.2739, -1.5653, -1.1217]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5474, -1.2845, -1.5848, -1.1312]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5413, -1.2911, -1.5924, -1.1251]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5254, -1.2975, -1.5959, -1.1092]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5139, -1.2894, -1.5903, -1.0977]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4930, -1.2790, -1.5750, -1.0767]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4762, -1.2767, -1.5575, -1.0599]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4664, -1.2675, -1.5518, -1.0501]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4568, -1.2593, -1.5476, -1.0406]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4531, -1.2570, -1.5431, -1.0369]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4524, -1.2588, -1.5381, -1.0361]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4665, -1.2589, -1.5403, -1.0502]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4837, -1.2667, -1.5412, -1.0674]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4974, -1.2594, -1.5338, -1.0812]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.810000. Loss: 1.308553. Time: 1.418262
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.720000, Val Loss: 2.149708 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5059, -1.2451, -1.5333, -1.0896]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5047, -1.2476, -1.5554, -1.0885]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5039, -1.2542, -1.5633, -1.0877]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -1.2652, -1.5729, -1.0854]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4944, -1.2726, -1.5726, -1.0781]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4885, -1.2787, -1.5809, -1.0723]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4781, -1.2759, -1.5835, -1.0619]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4734, -1.2778, -1.5799, -1.0572]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4661, -1.2841, -1.5917, -1.0499]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4714, -1.2946, -1.5922, -1.0551]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4753, -1.3038, -1.5896, -1.0590]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4837, -1.3266, -1.5770, -1.0675]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4964, -1.3471, -1.5629, -1.0802]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4997, -1.3595, -1.5662, -1.0834]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4984, -1.3608, -1.5761, -1.0821]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5107, -1.3578, -1.5377, -1.0945]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5063, -1.3419, -1.5210, -1.0900]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.3291, -1.5082, -1.0801]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4836, -1.3181, -1.5101, -1.0674]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.735000. Loss: 2.067008. Time: 1.415769
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.730000, Val Loss: 1.755786 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4517, -1.2935, -1.5565, -1.0354]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4312, -1.2885, -1.5752, -1.0149]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4341, -1.2865, -1.5915, -1.0179]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4488, -1.3015, -1.5943, -1.0325]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4664, -1.3207, -1.5927, -1.0501]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5161, -1.3397, -1.5788, -1.0998]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5758, -1.3609, -1.5666, -1.1595]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6043, -1.3677, -1.5495, -1.1880]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6255, -1.3738, -1.5385, -1.2093]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6366, -1.3750, -1.5359, -1.2203]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6144, -1.3747, -1.5355, -1.1982]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5792, -1.3811, -1.5376, -1.1630]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5476, -1.3797, -1.5289, -1.1313]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5076, -1.3799, -1.5188, -1.0913]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4765, -1.3798, -1.5185, -1.0603]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4684, -1.3694, -1.5282, -1.0521]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4607, -1.3550, -1.5319, -1.0444]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4527, -1.3538, -1.5274, -1.0364]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4646, -1.3442, -1.5578, -1.0484]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.750000. Loss: 1.990871. Time: 1.418309
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.800000, Val Loss: 1.663316 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4901, -1.3356, -1.5983, -1.0739]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5089, -1.3317, -1.5974, -1.0926]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4957, -1.3193, -1.5978, -1.0794]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4803, -1.3093, -1.5964, -1.0640]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4680, -1.3035, -1.5886, -1.0517]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4638, -1.2970, -1.5777, -1.0476]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4892, -1.2869, -1.5884, -1.0730]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4939, -1.2756, -1.5992, -1.0776]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4815, -1.2774, -1.5999, -1.0652]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4867, -1.2798, -1.5870, -1.0704]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4931, -1.2910, -1.5947, -1.0769]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4865, -1.3015, -1.6150, -1.0702]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5069, -1.3172, -1.6165, -1.0907]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5155, -1.3137, -1.6124, -1.0993]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5170, -1.3129, -1.6020, -1.1008]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5059, -1.3087, -1.5705, -1.0897]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5009, -1.2963, -1.5572, -1.0846]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5073, -1.2859, -1.5501, -1.0910]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5137, -1.2796, -1.5493, -1.0974]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.780000. Loss: 1.665830. Time: 1.416602
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.780000, Val Loss: 1.845928 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5111, -1.2699, -1.5550, -1.0949]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5285, -1.2672, -1.5590, -1.1122]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5383, -1.2653, -1.5568, -1.1221]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5423, -1.2634, -1.5541, -1.1261]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5317, -1.2743, -1.5491, -1.1154]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5189, -1.2818, -1.5477, -1.1026]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5026, -1.2861, -1.5467, -1.0864]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4925, -1.2922, -1.5366, -1.0762]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -1.2997, -1.5344, -1.0853]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5212, -1.2984, -1.5301, -1.1050]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5098, -1.2842, -1.5418, -1.0935]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4898, -1.2776, -1.5530, -1.0735]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4680, -1.2812, -1.5743, -1.0518]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4480, -1.2833, -1.5863, -1.0318]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4237, -1.2845, -1.5890, -1.0074]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4135, -1.2900, -1.5816, -0.9973]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4245, -1.2883, -1.5677, -1.0083]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4335, -1.2872, -1.5552, -1.0173]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4431, -1.2783, -1.5440, -1.0269]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.810000. Loss: 1.257805. Time: 1.413620
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.810000, Val Loss: 1.631056 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4538, -1.2614, -1.5278, -1.0375]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4685, -1.2553, -1.5306, -1.0522]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4940, -1.2504, -1.5307, -1.0778]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5152, -1.2442, -1.5345, -1.0989]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5252, -1.2417, -1.5369, -1.1090]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5221, -1.2418, -1.5389, -1.1058]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5021, -1.2450, -1.5382, -1.0858]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4831, -1.2379, -1.5404, -1.0668]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4727, -1.2333, -1.5397, -1.0565]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4786, -1.2360, -1.5587, -1.0623]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4863, -1.2408, -1.5683, -1.0701]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4975, -1.2671, -1.5701, -1.0813]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5026, -1.2832, -1.5660, -1.0863]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4757, -1.2826, -1.5555, -1.0595]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4454, -1.2745, -1.5303, -1.0292]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4223, -1.2690, -1.5118, -1.0060]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4058, -1.2692, -1.4932, -0.9896]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4041, -1.2786, -1.4931, -0.9879]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4176, -1.2829, -1.5089, -1.0013]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.770000. Loss: 1.844684. Time: 1.413966
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.870000, Val Loss: 0.903995 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4434, -1.2523, -1.5493, -1.0271]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4541, -1.2464, -1.5684, -1.0378]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4577, -1.2431, -1.5806, -1.0415]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4585, -1.2380, -1.5896, -1.0422]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4628, -1.2253, -1.5936, -1.0466]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4593, -1.2001, -1.5977, -1.0431]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4488, -1.1826, -1.6000, -1.0326]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4513, -1.1761, -1.6160, -1.0350]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4573, -1.1786, -1.6275, -1.0410]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4701, -1.1749, -1.6523, -1.0539]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5007, -1.1843, -1.6597, -1.0844]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5242, -1.2144, -1.6481, -1.1079]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5201, -1.2387, -1.6467, -1.1039]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5141, -1.2564, -1.6334, -1.0979]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4971, -1.2643, -1.6168, -1.0809]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4822, -1.2627, -1.5884, -1.0659]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4876, -1.2569, -1.4896, -1.0714]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4893, -1.2568, -1.4151, -1.0730]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4725, -1.2747, -1.3523, -1.0563]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.790000. Loss: 1.286087. Time: 1.417180
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.750000, Val Loss: 2.101839 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4603, -1.2868, -1.3051, -1.0440]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4719, -1.3186, -1.3391, -1.0556]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4864, -1.3495, -1.4405, -1.0701]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4922, -1.3780, -1.5045, -1.0760]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4939, -1.3938, -1.5240, -1.0776]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4893, -1.4164, -1.5266, -1.0730]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4844, -1.4366, -1.5376, -1.0682]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4818, -1.4566, -1.5496, -1.0656]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4781, -1.4641, -1.5541, -1.0619]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4791, -1.4575, -1.5735, -1.0628]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4790, -1.4422, -1.5916, -1.0628]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4793, -1.4317, -1.6025, -1.0631]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4796, -1.4216, -1.6086, -1.0634]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4783, -1.4185, -1.6054, -1.0621]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4755, -1.4127, -1.5962, -1.0593]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4763, -1.4200, -1.5778, -1.0600]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4690, -1.4265, -1.5763, -1.0527]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4597, -1.4332, -1.5629, -1.0434]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4539, -1.4391, -1.5520, -1.0376]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.785000. Loss: 1.330411. Time: 1.421898
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.800000, Val Loss: 2.186617 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4783, -1.4663, -1.5667, -1.0621]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4939, -1.4812, -1.5751, -1.0777]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5093, -1.4894, -1.5829, -1.0930]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5213, -1.4943, -1.5889, -1.1050]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5316, -1.5009, -1.5752, -1.1154]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5438, -1.5095, -1.5439, -1.1276]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5500, -1.5111, -1.5222, -1.1338]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5521, -1.5123, -1.5112, -1.1359]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5511, -1.5137, -1.5060, -1.1349]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5446, -1.5257, -1.5049, -1.1284]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5261, -1.5178, -1.4993, -1.1099]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5010, -1.5192, -1.4880, -1.0848]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4753, -1.5306, -1.4933, -1.0591]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4524, -1.5581, -1.5023, -1.0361]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4091, -1.5831, -1.5417, -0.9928]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3915, -1.5908, -1.5853, -0.9752]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3933, -1.6140, -1.5801, -0.9770]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4027, -1.6347, -1.5513, -0.9865]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4446, -1.6525, -1.5192, -1.0283]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.800000. Loss: 1.800610. Time: 1.424741
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.860000, Val Loss: 1.375259 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5427, -1.6903, -1.4935, -1.1265]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5684, -1.7025, -1.4869, -1.1521]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5651, -1.7013, -1.5019, -1.1489]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5563, -1.7016, -1.5165, -1.1401]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5572, -1.6989, -1.5333, -1.1410]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5664, -1.7026, -1.5475, -1.1501]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5642, -1.7047, -1.5514, -1.1480]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5432, -1.6994, -1.5474, -1.1270]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5282, -1.6895, -1.5570, -1.1120]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5020, -1.6857, -1.5629, -1.0857]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4807, -1.6842, -1.5608, -1.0645]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4697, -1.6708, -1.5545, -1.0535]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4618, -1.6584, -1.5470, -1.0456]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4582, -1.6534, -1.5410, -1.0420]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4767, -1.6448, -1.5386, -1.0605]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4912, -1.6397, -1.5389, -1.0750]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5025, -1.6314, -1.5488, -1.0862]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5148, -1.6155, -1.5669, -1.0986]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5333, -1.5974, -1.5867, -1.1171]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.820000. Loss: 1.254361. Time: 1.422630
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.750000, Val Loss: 1.870268 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5421, -1.5911, -1.6170, -1.1258]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5339, -1.5815, -1.6245, -1.1177]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5231, -1.5798, -1.6142, -1.1069]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5047, -1.5761, -1.5999, -1.0884]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4778, -1.5607, -1.5712, -1.0616]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4628, -1.5453, -1.5529, -1.0466]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4467, -1.5263, -1.5425, -1.0304]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4398, -1.5043, -1.5270, -1.0236]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4416, -1.4856, -1.5107, -1.0253]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4508, -1.4858, -1.5069, -1.0345]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4740, -1.4965, -1.5168, -1.0577]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5088, -1.5037, -1.5341, -1.0926]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5318, -1.5172, -1.5442, -1.1156]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5426, -1.5300, -1.5463, -1.1264]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5471, -1.5434, -1.5325, -1.1309]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5506, -1.5449, -1.5361, -1.1344]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5454, -1.5283, -1.5621, -1.1291]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5426, -1.5139, -1.5812, -1.1264]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5269, -1.4993, -1.5880, -1.1107]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.775000. Loss: 1.819506. Time: 1.420522
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.740000, Val Loss: 1.816946 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4845, -1.4979, -1.6062, -1.0683]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4799, -1.5078, -1.6211, -1.0637]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4746, -1.5127, -1.6231, -1.0583]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4787, -1.5089, -1.6233, -1.0625]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4784, -1.5086, -1.6203, -1.0622]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4803, -1.5087, -1.6157, -1.0641]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4839, -1.5200, -1.6282, -1.0676]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5140, -1.5146, -1.6258, -1.0977]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5358, -1.5140, -1.6230, -1.1195]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5455, -1.5084, -1.6098, -1.1292]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5369, -1.5041, -1.5903, -1.1207]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5220, -1.5016, -1.5503, -1.1058]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5104, -1.5028, -1.5250, -1.0942]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4971, -1.5022, -1.5073, -1.0808]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4789, -1.4958, -1.4959, -1.0627]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4740, -1.4877, -1.4958, -1.0577]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -1.4782, -1.4989, -1.0693]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4915, -1.4684, -1.4963, -1.0752]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4985, -1.4371, -1.5021, -1.0822]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.815000. Loss: 1.137025. Time: 1.423464
Validate after epoch 38 with seed 297566
Val Accuracy: 0.880000, Val Loss: 1.129856 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4975, -1.4110, -1.5082, -1.0812]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4971, -1.4054, -1.5106, -1.0808]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5047, -1.4020, -1.5092, -1.0884]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5199, -1.3888, -1.5035, -1.1037]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5296, -1.3927, -1.5000, -1.1133]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5323, -1.3980, -1.5159, -1.1161]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5211, -1.3814, -1.5377, -1.1048]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5033, -1.3731, -1.5482, -1.0871]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4720, -1.3564, -1.5817, -1.0558]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4533, -1.3505, -1.6089, -1.0370]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4402, -1.3504, -1.6210, -1.0239]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4320, -1.3489, -1.6323, -1.0158]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4260, -1.3636, -1.6344, -1.0098]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4373, -1.3662, -1.6213, -1.0210]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4532, -1.3673, -1.5983, -1.0369]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4596, -1.3574, -1.5900, -1.0433]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4690, -1.3500, -1.5979, -1.0528]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4761, -1.3469, -1.6025, -1.0598]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4923, -1.3430, -1.5989, -1.0761]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.735000. Loss: 2.026219. Time: 1.420076
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.800000, Val Loss: 1.566179 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5215, -1.3441, -1.5459, -1.1052]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5187, -1.3426, -1.5383, -1.1025]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5051, -1.3392, -1.5330, -1.0888]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5022, -1.3451, -1.5167, -1.0860]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4828, -1.3501, -1.5067, -1.0665]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4672, -1.3537, -1.5026, -1.0509]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4622, -1.3614, -1.4984, -1.0460]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4578, -1.3625, -1.4934, -1.0416]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4519, -1.3615, -1.5099, -1.0356]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4465, -1.3620, -1.5215, -1.0302]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4606, -1.3615, -1.5161, -1.0443]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4902, -1.3478, -1.5181, -1.0740]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5131, -1.3467, -1.5292, -1.0969]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5286, -1.3496, -1.5433, -1.1124]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5424, -1.3581, -1.5533, -1.1261]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5548, -1.3601, -1.5665, -1.1385]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5533, -1.3532, -1.5878, -1.1370]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5447, -1.3492, -1.6055, -1.1285]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5381, -1.3416, -1.6333, -1.1219]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.780000. Loss: 1.588619. Time: 1.426530
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.790000, Val Loss: 2.386926 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5296, -1.3455, -1.6771, -1.1133]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5208, -1.3522, -1.6759, -1.1045]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5133, -1.3490, -1.6623, -1.0970]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5160, -1.3469, -1.6217, -1.0997]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5250, -1.3443, -1.5952, -1.1088]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4874, -1.3431, -1.5716, -1.0712]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4608, -1.3462, -1.5694, -1.0446]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4537, -1.3454, -1.5948, -1.0375]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4470, -1.3416, -1.6192, -1.0307]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4701, -1.3475, -1.6574, -1.0538]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4760, -1.3559, -1.6864, -1.0597]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4916, -1.3625, -1.7002, -1.0753]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4926, -1.3474, -1.6804, -1.0764]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4723, -1.3213, -1.6407, -1.0560]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4699, -1.2989, -1.6238, -1.0536]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4705, -1.2863, -1.6173, -1.0542]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4733, -1.2721, -1.6281, -1.0571]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4651, -1.2552, -1.6233, -1.0489]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4583, -1.2445, -1.6056, -1.0421]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.765000. Loss: 2.050374. Time: 1.420145
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.730000, Val Loss: 1.832982 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4785, -1.2515, -1.5697, -1.0622]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4712, -1.2657, -1.5502, -1.0549]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4692, -1.2766, -1.5361, -1.0529]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4834, -1.2833, -1.5282, -1.0672]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4900, -1.2859, -1.5199, -1.0738]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4981, -1.2852, -1.5235, -1.0819]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5112, -1.2849, -1.5364, -1.0950]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5184, -1.2933, -1.5415, -1.1021]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5147, -1.3002, -1.5375, -1.0985]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5157, -1.3069, -1.5511, -1.0995]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4993, -1.2920, -1.5401, -1.0830]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4768, -1.2682, -1.5473, -1.0605]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4691, -1.2470, -1.5670, -1.0529]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4637, -1.2384, -1.5745, -1.0474]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4559, -1.2368, -1.5677, -1.0396]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4448, -1.2364, -1.5584, -1.0285]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4402, -1.2336, -1.5486, -1.0240]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4709, -1.2121, -1.5620, -1.0547]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -1.1852, -1.5751, -1.0854]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.775000. Loss: 1.409745. Time: 1.423102
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.760000, Val Loss: 1.469490 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5202, -1.1325, -1.5886, -1.1039]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5175, -1.1201, -1.5780, -1.1012]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5163, -1.1054, -1.5753, -1.1001]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5166, -1.0822, -1.5863, -1.1003]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5166, -1.0700, -1.6042, -1.1004]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5231, -1.0575, -1.6275, -1.1068]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5353, -1.0478, -1.6453, -1.1191]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5414, -1.0413, -1.6546, -1.1252]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5444, -1.0407, -1.6555, -1.1281]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5399, -1.0380, -1.6446, -1.1236]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5341, -1.0344, -1.6340, -1.1179]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5164, -1.0295, -1.6167, -1.1002]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5089, -1.0273, -1.6133, -1.0926]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5125, -1.0265, -1.6197, -1.0962]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5043, -1.0317, -1.6048, -1.0881]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5011, -1.0351, -1.5868, -1.0848]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5022, -1.0352, -1.5870, -1.0859]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5002, -1.0359, -1.5939, -1.0840]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5068, -1.0371, -1.6070, -1.0905]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.825000. Loss: 1.135538. Time: 1.417944
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.850000, Val Loss: 1.333639 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4940, -1.0439, -1.5726, -1.0777]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4887, -1.0460, -1.5601, -1.0725]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4863, -1.0416, -1.5358, -1.0700]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4721, -1.0404, -1.4987, -1.0558]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4754, -1.0334, -1.4902, -1.0591]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4802, -1.0199, -1.4961, -1.0639]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4821, -1.0131, -1.5086, -1.0658]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4816, -1.0166, -1.5229, -1.0654]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4883, -1.0389, -1.5328, -1.0721]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5054, -1.0491, -1.5613, -1.0891]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5330, -1.0595, -1.5871, -1.1167]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5524, -1.0713, -1.6034, -1.1362]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5584, -1.0974, -1.6135, -1.1422]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5510, -1.1162, -1.6188, -1.1347]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5341, -1.1315, -1.6200, -1.1178]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5227, -1.1391, -1.6210, -1.1064]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5029, -1.1435, -1.6195, -1.0866]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4886, -1.1572, -1.6219, -1.0724]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4768, -1.1632, -1.6123, -1.0606]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.765000. Loss: 1.641768. Time: 1.416717
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.880000, Val Loss: 1.092180 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4595, -1.1638, -1.5903, -1.0432]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4627, -1.1666, -1.5869, -1.0465]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4646, -1.1631, -1.5844, -1.0483]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4662, -1.1662, -1.5787, -1.0500]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4712, -1.1705, -1.5699, -1.0550]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4655, -1.1718, -1.5502, -1.0493]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4603, -1.1734, -1.5331, -1.0440]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4634, -1.1773, -1.5204, -1.0472]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4744, -1.1821, -1.5206, -1.0581]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5006, -1.1876, -1.5309, -1.0844]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5220, -1.1892, -1.5371, -1.1057]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5171, -1.1732, -1.5333, -1.1008]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4991, -1.1654, -1.5340, -1.0829]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4768, -1.1616, -1.5365, -1.0605]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4589, -1.1691, -1.5285, -1.0427]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4459, -1.1775, -1.5055, -1.0297]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4482, -1.1767, -1.5067, -1.0320]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4687, -1.1870, -1.5228, -1.0525]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4779, -1.1921, -1.5377, -1.0617]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.785000. Loss: 1.492928. Time: 1.421663
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.750000, Val Loss: 1.914032 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4954, -1.1811, -1.5686, -1.0792]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4996, -1.1752, -1.5756, -1.0833]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5026, -1.1917, -1.5657, -1.0863]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5066, -1.2027, -1.5602, -1.0904]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5153, -1.2017, -1.5721, -1.0990]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5204, -1.2025, -1.5797, -1.1041]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5262, -1.2038, -1.5817, -1.1100]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5298, -1.2046, -1.5829, -1.1135]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5340, -1.2016, -1.5924, -1.1177]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5361, -1.2011, -1.5927, -1.1198]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5333, -1.1996, -1.5952, -1.1171]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5336, -1.2039, -1.6028, -1.1173]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5336, -1.2073, -1.6082, -1.1173]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5317, -1.2030, -1.6019, -1.1155]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5226, -1.2069, -1.5869, -1.1063]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5122, -1.2172, -1.5762, -1.0960]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4947, -1.2301, -1.5707, -1.0784]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4858, -1.2351, -1.5716, -1.0695]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4818, -1.2372, -1.5721, -1.0655]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.825000. Loss: 1.478596. Time: 1.427726
Validate after epoch 46 with seed 91566
Val Accuracy: 0.800000, Val Loss: 1.791356 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4651, -1.2373, -1.5452, -1.0488]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -1.2519, -1.5399, -1.0506]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4682, -1.2697, -1.5483, -1.0520]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4698, -1.2659, -1.5488, -1.0536]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4771, -1.2620, -1.5421, -1.0609]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4954, -1.2507, -1.5433, -1.0791]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5080, -1.2445, -1.5445, -1.0917]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5063, -1.2434, -1.5440, -1.0900]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5063, -1.2466, -1.5514, -1.0901]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4864, -1.2501, -1.5591, -1.0701]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4645, -1.2608, -1.5703, -1.0483]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4588, -1.2684, -1.5812, -1.0426]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4596, -1.2710, -1.5941, -1.0433]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4695, -1.2613, -1.5897, -1.0532]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4823, -1.2356, -1.5772, -1.0661]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4903, -1.2142, -1.5367, -1.0741]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4909, -1.2019, -1.4997, -1.0747]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4903, -1.1939, -1.4690, -1.0741]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4930, -1.1887, -1.4519, -1.0767]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.785000. Loss: 1.804661. Time: 1.428498
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.820000, Val Loss: 2.094960 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5124, -1.1818, -1.4424, -1.0961]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5098, -1.1819, -1.4461, -1.0936]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5097, -1.1816, -1.4617, -1.0935]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5155, -1.1920, -1.4944, -1.0992]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5125, -1.2044, -1.5291, -1.0963]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5156, -1.2226, -1.5513, -1.0994]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5169, -1.2295, -1.5503, -1.1007]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5132, -1.2225, -1.5486, -1.0969]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5165, -1.2182, -1.5353, -1.1003]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5145, -1.2084, -1.5255, -1.0983]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5058, -1.1896, -1.5404, -1.0896]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4969, -1.1677, -1.5727, -1.0807]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4895, -1.1474, -1.5806, -1.0733]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4808, -1.1324, -1.5762, -1.0646]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4750, -1.1223, -1.5728, -1.0587]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4661, -1.1157, -1.5668, -1.0498]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4527, -1.1105, -1.5701, -1.0364]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4296, -1.1049, -1.5920, -1.0134]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4058, -1.1094, -1.6115, -0.9896]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.780000. Loss: 2.039441. Time: 1.420255
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.700000, Val Loss: 2.883930 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4417, -1.1018, -1.5795, -1.0255]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4558, -1.1030, -1.5575, -1.0395]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4666, -1.0989, -1.5641, -1.0503]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4859, -1.0902, -1.5929, -1.0696]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5082, -1.0874, -1.6101, -1.0919]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5262, -1.0800, -1.6114, -1.1100]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5224, -1.0798, -1.6099, -1.1061]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5150, -1.0906, -1.6098, -1.0988]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5144, -1.0978, -1.6052, -1.0981]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5044, -1.0848, -1.5870, -1.0882]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4907, -1.0624, -1.5664, -1.0744]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4900, -1.0456, -1.5455, -1.0737]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.0365, -1.5298, -1.0800]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5108, -1.0320, -1.5184, -1.0945]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5228, -1.0282, -1.5163, -1.1066]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5232, -1.0166, -1.5232, -1.1069]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5205, -1.0033, -1.5201, -1.1042]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5173, -0.9922, -1.5146, -1.1011]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5259, -0.9808, -1.5048, -1.1096]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.815000. Loss: 1.176209. Time: 1.416420
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.810000, Val Loss: 1.763219 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5411, -0.9626, -1.5021, -1.1249]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5408, -0.9565, -1.5043, -1.1246]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5232, -0.9578, -1.5051, -1.1069]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4978, -0.9563, -1.5034, -1.0815]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4726, -0.9564, -1.5023, -1.0564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4573, -0.9565, -1.5009, -1.0410]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4432, -0.9546, -1.5093, -1.0269]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4331, -0.9524, -1.5173, -1.0169]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4408, -0.9583, -1.5118, -1.0245]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4724, -0.9625, -1.5308, -1.0562]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4930, -0.9653, -1.5398, -1.0768]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5169, -0.9758, -1.5355, -1.1006]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5105, -0.9868, -1.5436, -1.0943]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4978, -1.0018, -1.5516, -1.0816]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4886, -1.0188, -1.5597, -1.0724]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4773, -1.0346, -1.5639, -1.0610]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4887, -1.0394, -1.5777, -1.0725]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5046, -1.0450, -1.5875, -1.0883]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5177, -1.0424, -1.5963, -1.1015]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.835000. Loss: 1.623224. Time: 1.413162
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.710000, Val Loss: 2.807891 
Training Execution time: 02:40:52.00
Conducting Test
Test Accuracy: 0.808000, Test Loss: 1.515009 

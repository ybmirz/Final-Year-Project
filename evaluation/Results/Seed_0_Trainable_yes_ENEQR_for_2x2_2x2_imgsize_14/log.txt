Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'ENEQR_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_ENEQR_for_2x2_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'ENEQR_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_ENEQR_for_2x2_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0411, -0.8921, -0.2152, -0.6248]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0018, -0.8974, -0.1719, -0.5820]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0483, -0.8823, -0.1259, -0.5355]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0888, -0.8693, -0.0851, -0.4949]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1305, -0.8622, -0.0430, -0.4533]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1649, -0.8561, -0.0075, -0.4188]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1877, -0.8600,  0.0177, -0.3961]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2080, -0.8587,  0.0378, -0.3758]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2272, -0.8559,  0.0485, -0.3566]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2385, -0.8479,  0.0539, -0.3452]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2391, -0.8462,  0.0521, -0.3447]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2324, -0.8602,  0.0442, -0.3513]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2349, -0.8829,  0.0402, -0.3489]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2482, -0.8942,  0.0411, -0.3356]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2629, -0.9012,  0.0454, -0.3208]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2722, -0.9094,  0.0465, -0.3115]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2670, -0.9212,  0.0445, -0.3168]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2639, -0.9313,  0.0487, -0.3199]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2561, -0.9321,  0.0489, -0.3276]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.510000. Loss: 1.866578. Time: 3.287867
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.650000, Val Loss: 1.049347 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2624, -0.9126,  0.0502, -0.3213]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2757, -0.9027,  0.0535, -0.3080]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2867, -0.8938,  0.0529, -0.2971]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2932, -0.8840,  0.0502, -0.2905]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2959, -0.8741,  0.0558, -0.2879]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2910, -0.8769,  0.0568, -0.2928]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2767, -0.8889,  0.0553, -0.3071]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2661, -0.8912,  0.0547, -0.3177]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2570, -0.8903,  0.0589, -0.3267]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2537, -0.8888,  0.0615, -0.3301]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2584, -0.8829,  0.0571, -0.3253]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2770, -0.8847,  0.0620, -0.3068]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3019, -0.8972,  0.0699, -0.2819]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3157, -0.9123,  0.0742, -0.2681]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3177, -0.9245,  0.0696, -0.2661]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3149, -0.9311,  0.0535, -0.2688]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3095, -0.9357,  0.0416, -0.2743]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3087, -0.9303,  0.0331, -0.2751]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3094, -0.9246,  0.0390, -0.2744]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.750000. Loss: 0.851706. Time: 3.210678
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.740000, Val Loss: 0.783444 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3097, -0.9335,  0.0584, -0.2740]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3082, -0.9434,  0.0604, -0.2756]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3121, -0.9424,  0.0481, -0.2716]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3117, -0.9495,  0.0313, -0.2720]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3130, -0.9563,  0.0243, -0.2707]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3127, -0.9669,  0.0219, -0.2710]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3176, -0.9806,  0.0275, -0.2662]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3203, -0.9930,  0.0287, -0.2635]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3250, -1.0014,  0.0346, -0.2587]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3220, -1.0225,  0.0325, -0.2617]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3191, -1.0402,  0.0277, -0.2647]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3175, -1.0503,  0.0275, -0.2662]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3238, -1.0587,  0.0392, -0.2599]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3342, -1.0697,  0.0437, -0.2496]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3398, -1.0705,  0.0449, -0.2440]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3414, -1.0718,  0.0400, -0.2423]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3399, -1.0782,  0.0394, -0.2438]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3360, -1.0935,  0.0422, -0.2477]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3304, -1.1018,  0.0469, -0.2533]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.805000. Loss: 0.657334. Time: 3.252694
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.770000, Val Loss: 0.846437 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3199, -1.1023,  0.0609, -0.2638]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3200, -1.1019,  0.0595, -0.2638]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3218, -1.1111,  0.0545, -0.2619]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3255, -1.1115,  0.0561, -0.2582]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3330, -1.1109,  0.0508, -0.2508]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3379, -1.1118,  0.0461, -0.2459]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3357, -1.1102,  0.0474, -0.2481]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3291, -1.1024,  0.0478, -0.2547]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3259, -1.1088,  0.0529, -0.2578]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3232, -1.1230,  0.0631, -0.2606]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3192, -1.1321,  0.0549, -0.2646]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3163, -1.1417,  0.0467, -0.2675]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3129, -1.1476,  0.0400, -0.2708]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3128, -1.1491,  0.0360, -0.2709]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3176, -1.1430,  0.0416, -0.2661]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3241, -1.1368,  0.0423, -0.2596]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3309, -1.1410,  0.0284, -0.2529]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3399, -1.1596,  0.0191, -0.2439]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3442, -1.1756,  0.0158, -0.2395]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.780000. Loss: 0.658821. Time: 3.173033
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.740000, Val Loss: 0.963505 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3373, -1.2038,  0.0431, -0.2465]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3298, -1.2321,  0.0475, -0.2540]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3254, -1.2502,  0.0463, -0.2584]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3202, -1.2542,  0.0452, -0.2635]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3038, -1.2520,  0.0363, -0.2800]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2933, -1.2522,  0.0294, -0.2905]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2834, -1.2499,  0.0288, -0.3004]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2661, -1.2637,  0.0210, -0.3176]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2785, -1.2769,  0.0198, -0.3052]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2957, -1.2764,  0.0190, -0.2880]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3072, -1.2749,  0.0201, -0.2765]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3241, -1.2712,  0.0279, -0.2597]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3393, -1.2656,  0.0370, -0.2445]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3481, -1.2543,  0.0438, -0.2356]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3561, -1.2458,  0.0506, -0.2277]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3630, -1.2531,  0.0567, -0.2207]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3685, -1.2602,  0.0625, -0.2152]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3688, -1.2737,  0.0614, -0.2150]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3535, -1.2741,  0.0514, -0.2302]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.775000. Loss: 0.701705. Time: 3.209383
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.830000, Val Loss: 0.714250 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3321, -1.2346,  0.0218, -0.2517]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3254, -1.2078,  0.0128, -0.2584]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3135, -1.1890,  0.0076, -0.2702]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3123, -1.1792,  0.0079, -0.2715]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3216, -1.1651,  0.0111, -0.2622]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3292, -1.1665,  0.0128, -0.2546]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3382, -1.1613,  0.0216, -0.2455]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3385, -1.1522,  0.0340, -0.2453]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3345, -1.1658,  0.0393, -0.2492]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3353, -1.1741,  0.0421, -0.2484]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3276, -1.1796,  0.0295, -0.2562]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3275, -1.1768,  0.0196, -0.2563]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3285, -1.1747,  0.0177, -0.2553]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3349, -1.1630,  0.0301, -0.2489]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3401, -1.1540,  0.0360, -0.2436]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3405, -1.1498,  0.0311, -0.2433]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3373, -1.1400,  0.0254, -0.2465]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3290, -1.1318,  0.0243, -0.2547]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3286, -1.1274,  0.0328, -0.2551]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.790000. Loss: 0.656690. Time: 3.207876
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.810000, Val Loss: 0.657383 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2985, -1.1562,  0.0288, -0.2853]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2951, -1.1689,  0.0264, -0.2887]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2979, -1.1756,  0.0343, -0.2858]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2991, -1.1790,  0.0380, -0.2846]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3036, -1.1850,  0.0339, -0.2801]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3086, -1.1805,  0.0280, -0.2751]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3074, -1.1829,  0.0185, -0.2764]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3070, -1.1781,  0.0143, -0.2768]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2999, -1.1703,  0.0037, -0.2839]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3136, -1.1586,  0.0062, -0.2701]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3365, -1.1493,  0.0163, -0.2473]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3517, -1.1375,  0.0093, -0.2321]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3524, -1.1336,  0.0011, -0.2313]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3485, -1.1324,  0.0025, -0.2352]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3485, -1.1317,  0.0055, -0.2353]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3486, -1.1272,  0.0033, -0.2351]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.4770e-01, -1.1263e+00, -5.5600e-04, -2.3605e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.4556e-01, -1.1273e+00, -8.4977e-04, -2.3819e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.4337e-01, -1.1260e+00, -5.3446e-04, -2.4038e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.830000. Loss: 0.626051. Time: 3.248224
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.840000, Val Loss: 0.481600 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3319, -1.1186,  0.0092, -0.2519]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3355, -1.1260,  0.0203, -0.2482]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3424, -1.1331,  0.0312, -0.2414]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3502, -1.1441,  0.0343, -0.2336]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3429, -1.1628,  0.0286, -0.2408]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3296, -1.1902,  0.0297, -0.2541]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3233, -1.2082,  0.0328, -0.2604]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3191, -1.1919,  0.0456, -0.2646]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3234, -1.1760,  0.0527, -0.2604]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3281, -1.1598,  0.0539, -0.2557]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3247, -1.1430,  0.0602, -0.2591]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3282, -1.1313,  0.0655, -0.2555]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3263, -1.1307,  0.0661, -0.2575]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3293, -1.1307,  0.0652, -0.2544]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3332, -1.1220,  0.0609, -0.2506]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3314, -1.1148,  0.0396, -0.2523]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3369, -1.1059,  0.0210, -0.2468]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3396, -1.0961,  0.0063, -0.2442]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3540, -1.0933,  0.0047, -0.2297]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.805000. Loss: 0.572654. Time: 3.193881
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.830000, Val Loss: 0.532054 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3418, -1.1031,  0.0044, -0.2419]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3374, -1.0983,  0.0077, -0.2464]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3359, -1.0923,  0.0117, -0.2479]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3372, -1.0899,  0.0144, -0.2465]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3419, -1.0951,  0.0165, -0.2418]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3556, -1.1112,  0.0218, -0.2282]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3636, -1.1247,  0.0243, -0.2202]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3578, -1.1329,  0.0224, -0.2259]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3657, -1.1146,  0.0098, -0.2180]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3733, -1.1148, -0.0013, -0.2105]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3434, -1.1148, -0.0170, -0.2403]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2944, -1.1148, -0.0315, -0.2894]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2659, -1.0919, -0.0231, -0.3179]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2639, -1.0696,  0.0019, -0.3199]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2677, -1.0550,  0.0258, -0.3160]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2834, -1.0419,  0.0525, -0.3004]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2990, -1.0336,  0.0763, -0.2848]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3173, -1.0361,  0.1045, -0.2664]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3287, -1.0572,  0.1347, -0.2550]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.795000. Loss: 0.718078. Time: 3.187363
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.830000, Val Loss: 0.568771 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3584, -1.0703,  0.1342, -0.2253]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3583, -1.0744,  0.1275, -0.2254]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3429, -1.0791,  0.1209, -0.2408]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3344, -1.0776,  0.1026, -0.2494]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3402, -1.0874,  0.1030, -0.2435]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3526, -1.1075,  0.0948, -0.2312]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3531, -1.1445,  0.0791, -0.2307]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3420, -1.1707,  0.0366, -0.2417]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.2908e-01, -1.1776e+00,  3.3659e-05, -2.5467e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3035, -1.1828, -0.0560, -0.2803]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2842, -1.1918, -0.0954, -0.2995]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2749, -1.1982, -0.0851, -0.3089]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2728, -1.2043, -0.0835, -0.3109]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2733, -1.2028, -0.0504, -0.3104]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2877, -1.1833, -0.0197, -0.2960]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2974, -1.1666, -0.0077, -0.2863]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3122, -1.1562,  0.0053, -0.2715]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3365, -1.1502,  0.0210, -0.2472]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3515, -1.1384,  0.0439, -0.2323]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.830000. Loss: 0.563087. Time: 3.202298
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.800000, Val Loss: 0.758551 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3722, -1.1501,  0.0567, -0.2115]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3600, -1.1620,  0.0275, -0.2238]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3536, -1.1672,  0.0199, -0.2302]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3634, -1.1718,  0.0236, -0.2204]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3740, -1.1756,  0.0324, -0.2098]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3795, -1.1981,  0.0441, -0.2043]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3870, -1.2402,  0.0594, -0.1967]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3670, -1.2781,  0.0624, -0.2168]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3536, -1.3020,  0.0679, -0.2302]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3254, -1.3117,  0.0603, -0.2584]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2737, -1.3044,  0.0275, -0.3101]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2434, -1.2910,  0.0019, -0.3404]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2301, -1.2815, -0.0151, -0.3537]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2327, -1.2769, -0.0162, -0.3511]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2477, -1.2647, -0.0140, -0.3361]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2615, -1.2637, -0.0205, -0.3223]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2665, -1.2710, -0.0305, -0.3172]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2700, -1.2700, -0.0228, -0.3138]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3049, -1.2811, -0.0064, -0.2788]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.795000. Loss: 0.660303. Time: 3.194252
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.830000, Val Loss: 0.527553 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3741, -1.2979,  0.0209, -0.2097]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3642, -1.3017,  0.0169, -0.2195]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3487, -1.3059,  0.0078, -0.2351]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3382, -1.3048,  0.0086, -0.2455]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3272, -1.3094,  0.0097, -0.2565]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3265, -1.3094,  0.0115, -0.2573]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3134, -1.3131,  0.0132, -0.2703]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2973, -1.3321,  0.0306, -0.2864]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2948, -1.3443,  0.0374, -0.2889]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2935, -1.3429,  0.0352, -0.2902]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2919, -1.3383,  0.0343, -0.2919]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2944, -1.3322,  0.0407, -0.2894]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2975, -1.3256,  0.0510, -0.2862]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3104, -1.3151,  0.0567, -0.2733]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3143, -1.3282,  0.0560, -0.2694]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3163, -1.3407,  0.0551, -0.2674]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3116, -1.3452,  0.0517, -0.2722]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3029, -1.3462,  0.0429, -0.2808]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2920, -1.3505,  0.0334, -0.2918]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.820000. Loss: 0.673434. Time: 3.191473
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.810000, Val Loss: 0.655712 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2894, -1.3762,  0.0320, -0.2943]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2931, -1.3903,  0.0181, -0.2907]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2953, -1.3950,  0.0092, -0.2884]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2875, -1.4028,  0.0026, -0.2962]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.7084e-01, -1.4092e+00,  4.8432e-04, -3.1291e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2679, -1.4047, -0.0023, -0.3159]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2970, -1.3845, -0.0069, -0.2867]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3281, -1.3492, -0.0033, -0.2557]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3472, -1.3272,  0.0055, -0.2366]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3611, -1.3110,  0.0209, -0.2227]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3815, -1.3129,  0.0416, -0.2023]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3934, -1.3131,  0.0563, -0.1904]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3968, -1.3162,  0.0624, -0.1869]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3980, -1.3136,  0.0462, -0.1858]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3786, -1.3136,  0.0375, -0.2052]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3601, -1.3170,  0.0413, -0.2236]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3398, -1.3264,  0.0455, -0.2440]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3133, -1.3395,  0.0328, -0.2705]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3023, -1.3314,  0.0245, -0.2814]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.840000. Loss: 0.505883. Time: 3.207437
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.810000, Val Loss: 0.767951 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3207, -1.3328,  0.0154, -0.2630]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3365, -1.3361,  0.0217, -0.2473]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3542, -1.3311,  0.0209, -0.2295]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3387, -1.3190,  0.0045, -0.2451]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3298, -1.3163,  0.0020, -0.2540]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3225, -1.3081,  0.0060, -0.2612]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3183, -1.3032,  0.0067, -0.2654]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2950, -1.3142,  0.0024, -0.2888]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2807, -1.3281,  0.0045, -0.3031]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2763, -1.3416,  0.0048, -0.3074]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2580, -1.3276,  0.0169, -0.3257]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2520, -1.3168,  0.0266, -0.3318]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2703, -1.3147,  0.0363, -0.3135]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3022, -1.3084,  0.0507, -0.2815]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3252, -1.2959,  0.0653, -0.2585]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3345, -1.2908,  0.0735, -0.2492]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3451, -1.2847,  0.0746, -0.2386]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3492, -1.2857,  0.0727, -0.2346]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3532, -1.2862,  0.0696, -0.2306]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.855000. Loss: 0.559501. Time: 3.203090
Validate after epoch 14 with seed 964979
Val Accuracy: 0.830000, Val Loss: 0.513957 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3734, -1.2730,  0.0597, -0.2103]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3687, -1.2681,  0.0580, -0.2150]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3563, -1.2645,  0.0507, -0.2275]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3394, -1.2676,  0.0484, -0.2444]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3296, -1.2714,  0.0452, -0.2542]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3270, -1.2762,  0.0428, -0.2567]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3262, -1.2845,  0.0252, -0.2576]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3211, -1.2949,  0.0050, -0.2626]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3143, -1.3100, -0.0184, -0.2695]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3083, -1.3144, -0.0306, -0.2754]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3105, -1.3185, -0.0350, -0.2733]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3194, -1.3219, -0.0266, -0.2644]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3257, -1.3300, -0.0117, -0.2581]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3306, -1.3355,  0.0058, -0.2532]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3310, -1.3396,  0.0155, -0.2527]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3258, -1.3341,  0.0420, -0.2580]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3246, -1.3263,  0.0672, -0.2591]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3212, -1.3218,  0.0766, -0.2626]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3149, -1.3154,  0.0754, -0.2689]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.875000. Loss: 0.355998. Time: 3.221102
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.830000, Val Loss: 0.544025 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3101, -1.3211,  0.0414, -0.2737]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3138, -1.3241,  0.0276, -0.2700]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3199, -1.3204,  0.0153, -0.2639]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3204, -1.3061,  0.0016, -0.2633]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3182, -1.2865, -0.0069, -0.2655]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3247, -1.2797, -0.0073, -0.2591]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3235, -1.2755, -0.0128, -0.2603]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3203, -1.2745, -0.0146, -0.2635]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3064, -1.2722, -0.0267, -0.2774]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2903, -1.2590, -0.0349, -0.2934]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2850, -1.2646, -0.0136, -0.2988]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2946, -1.2696,  0.0161, -0.2892]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3065, -1.2608,  0.0357, -0.2772]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3175, -1.2505,  0.0441, -0.2662]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3244, -1.2345,  0.0428, -0.2594]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3320, -1.2139,  0.0476, -0.2518]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3460, -1.2136,  0.0596, -0.2377]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3569, -1.2035,  0.0604, -0.2269]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3623, -1.1847,  0.0501, -0.2215]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.820000. Loss: 0.554780. Time: 3.243133
Validate after epoch 16 with seed 840036
Val Accuracy: 0.830000, Val Loss: 0.530333 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3825, -1.1673,  0.0278, -0.2013]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3721, -1.1587,  0.0210, -0.2117]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3513, -1.1499,  0.0163, -0.2325]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3337, -1.1452,  0.0089, -0.2501]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3282, -1.1465,  0.0135, -0.2556]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3301, -1.1462,  0.0249, -0.2536]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3356, -1.1442,  0.0317, -0.2481]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3374, -1.1427,  0.0311, -0.2464]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3268, -1.1423,  0.0150, -0.2569]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3191, -1.1355,  0.0035, -0.2647]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.0663e-01, -1.1128e+00, -4.1107e-04, -2.7712e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3051, -1.0946,  0.0021, -0.2787]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3128, -1.0770,  0.0066, -0.2710]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3246, -1.0694,  0.0066, -0.2592]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3382, -1.0683,  0.0042, -0.2455]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3481, -1.0767,  0.0069, -0.2356]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3404, -1.0963,  0.0141, -0.2434]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3216, -1.1152,  0.0202, -0.2621]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3045, -1.1248,  0.0197, -0.2793]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.825000. Loss: 0.715170. Time: 3.220376
Validate after epoch 17 with seed 180463
Val Accuracy: 0.870000, Val Loss: 0.514139 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2973, -1.1223,  0.0289, -0.2865]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2956, -1.1204,  0.0342, -0.2881]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2955, -1.1376,  0.0426, -0.2883]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3031, -1.1677,  0.0579, -0.2806]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3092, -1.1894,  0.0711, -0.2745]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3153, -1.1944,  0.0864, -0.2684]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3166, -1.1964,  0.0908, -0.2672]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3043, -1.1811,  0.0787, -0.2794]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2914, -1.1631,  0.0587, -0.2923]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2920, -1.1531,  0.0215, -0.2918]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3125, -1.1465, -0.0205, -0.2713]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3460, -1.1493, -0.0484, -0.2378]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3659, -1.1540, -0.0748, -0.2178]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3754, -1.1568, -0.0763, -0.2083]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3752, -1.1642, -0.0647, -0.2085]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3783, -1.1735, -0.0467, -0.2055]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3869, -1.1806, -0.0368, -0.1968]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3794, -1.1997, -0.0414, -0.2044]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3674, -1.2189, -0.0445, -0.2164]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.845000. Loss: 0.506064. Time: 3.234587
Validate after epoch 18 with seed 575883
Val Accuracy: 0.830000, Val Loss: 0.587732 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3275, -1.2388, -0.0404, -0.2563]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3031, -1.2422, -0.0308, -0.2807]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2742, -1.2455, -0.0202, -0.3096]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2557, -1.2531, -0.0052, -0.3281]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2566, -1.2628,  0.0173, -0.3272]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2658, -1.2686,  0.0278, -0.3179]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2843, -1.2737,  0.0307, -0.2995]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3092, -1.2856,  0.0316, -0.2746]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3411, -1.2945,  0.0451, -0.2427]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3624, -1.2995,  0.0562, -0.2213]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3727, -1.3023,  0.0608, -0.2110]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3561, -1.3024,  0.0454, -0.2276]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3445, -1.2991,  0.0346, -0.2393]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3545, -1.3092,  0.0327, -0.2292]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3527, -1.3154,  0.0120, -0.2311]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.3680e-01, -1.3257e+00, -1.3146e-03, -2.4695e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3304, -1.3254, -0.0125, -0.2534]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3301, -1.3397, -0.0172, -0.2537]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3313, -1.3547, -0.0173, -0.2525]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.845000. Loss: 0.569927. Time: 3.220980
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.870000, Val Loss: 0.624722 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.3525e-01, -1.3760e+00, -2.7589e-04, -2.4850e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3072, -1.3993,  0.0125, -0.2766]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2650, -1.4140,  0.0425, -0.3188]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2495, -1.4180,  0.0673, -0.3343]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2836, -1.4163,  0.0788, -0.3001]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3139, -1.4203,  0.0889, -0.2699]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3205, -1.4437,  0.0779, -0.2632]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3204, -1.4569,  0.0742, -0.2634]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3310, -1.4702,  0.0535, -0.2528]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3520, -1.4736,  0.0294, -0.2318]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3689, -1.4809,  0.0108, -0.2149]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3745, -1.4940, -0.0034, -0.2093]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3798, -1.4938, -0.0202, -0.2039]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3578, -1.4953,  0.0064, -0.2259]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3409, -1.5155,  0.0252, -0.2428]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3304, -1.5352,  0.0395, -0.2534]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3288, -1.5634,  0.0321, -0.2550]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3217, -1.5790,  0.0189, -0.2621]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3092, -1.5918,  0.0170, -0.2745]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.815000. Loss: 0.561218. Time: 3.212907
Validate after epoch 20 with seed 822616
Val Accuracy: 0.820000, Val Loss: 0.647678 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2857, -1.6092,  0.0320, -0.2980]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2736, -1.6005,  0.0437, -0.3101]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2671, -1.5968,  0.0536, -0.3166]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2692, -1.6058,  0.0597, -0.3145]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2787, -1.6187,  0.0586, -0.3051]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2874, -1.6297,  0.0492, -0.2964]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2886, -1.6303,  0.0341, -0.2952]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2960, -1.6366,  0.0282, -0.2877]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3002, -1.6445,  0.0237, -0.2836]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3093, -1.6501,  0.0126, -0.2744]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3159, -1.6544,  0.0047, -0.2679]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3190, -1.6576,  0.0022, -0.2647]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.1868e-01, -1.6541e+00,  1.3437e-03, -2.6507e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3196, -1.6482,  0.0026, -0.2641]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3030, -1.6536, -0.0093, -0.2808]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2870, -1.6593, -0.0251, -0.2967]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2868, -1.6615, -0.0385, -0.2969]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2927, -1.6589, -0.0452, -0.2911]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2972, -1.6533, -0.0432, -0.2866]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.885000. Loss: 0.426784. Time: 3.225390
Validate after epoch 21 with seed 519531
Val Accuracy: 0.870000, Val Loss: 0.613009 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2974, -1.6579, -0.0387, -0.2863]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3136, -1.6595, -0.0300, -0.2701]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3387, -1.6563, -0.0082, -0.2450]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3662, -1.6464,  0.0179, -0.2176]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3888, -1.6385,  0.0348, -0.1949]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3973, -1.6371,  0.0599, -0.1865]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3909, -1.6366,  0.0732, -0.1929]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3748, -1.6300,  0.0695, -0.2090]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3509, -1.6213,  0.0529, -0.2328]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3333, -1.6192,  0.0395, -0.2505]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3297, -1.6136,  0.0349, -0.2540]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3301, -1.6113,  0.0326, -0.2536]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3358, -1.6129,  0.0325, -0.2479]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3398, -1.6184,  0.0364, -0.2439]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3366, -1.6215,  0.0384, -0.2471]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3349, -1.6147,  0.0343, -0.2489]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3430, -1.6023,  0.0314, -0.2408]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3397, -1.6106,  0.0184, -0.2440]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3395, -1.6128,  0.0125, -0.2443]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.865000. Loss: 0.445850. Time: 3.216010
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.870000, Val Loss: 0.593985 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.1871e-01, -1.6558e+00,  1.3219e-03, -2.6504e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3068, -1.6812, -0.0044, -0.2770]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.0514e-01, -1.6964e+00, -4.1672e-04, -2.7861e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3053, -1.7075,  0.0038, -0.2784]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3122, -1.6956,  0.0036, -0.2715]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3113, -1.6708, -0.0083, -0.2724]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3111, -1.6590, -0.0163, -0.2726]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3033, -1.6719, -0.0275, -0.2805]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2982, -1.6861, -0.0234, -0.2856]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2922, -1.6931, -0.0230, -0.2915]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2957, -1.7032, -0.0181, -0.2881]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3000, -1.7128, -0.0146, -0.2838]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3040, -1.7183, -0.0057, -0.2797]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3130, -1.7243,  0.0074, -0.2707]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3246, -1.7271,  0.0144, -0.2591]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3291, -1.7305,  0.0155, -0.2546]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3318, -1.7356,  0.0226, -0.2520]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3298, -1.7316,  0.0267, -0.2540]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3266, -1.7173,  0.0227, -0.2572]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.890000. Loss: 0.316070. Time: 3.240824
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.910000, Val Loss: 0.372486 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3299, -1.7032,  0.0098, -0.2538]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3326, -1.6914,  0.0038, -0.2511]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3369, -1.6845,  0.0028, -0.2469]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3421, -1.6800,  0.0032, -0.2417]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3460, -1.6791,  0.0059, -0.2378]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3547, -1.6842,  0.0102, -0.2290]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3605, -1.6881,  0.0136, -0.2233]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3544, -1.6812,  0.0193, -0.2294]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3371, -1.6764,  0.0098, -0.2466]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.2125e-01, -1.6807e+00,  7.9445e-04, -2.6250e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2990, -1.6884, -0.0079, -0.2848]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2814, -1.6934, -0.0222, -0.3023]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2605, -1.7119, -0.0266, -0.3233]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2420, -1.7439, -0.0265, -0.3417]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2380, -1.7662, -0.0266, -0.3457]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2430, -1.7783, -0.0230, -0.3408]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2723, -1.7774, -0.0027, -0.3115]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2918, -1.7780,  0.0115, -0.2919]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3038, -1.7768,  0.0189, -0.2800]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.885000. Loss: 0.547403. Time: 3.205363
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.870000, Val Loss: 0.654404 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2972, -1.7713,  0.0189, -0.2865]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3030, -1.7685,  0.0215, -0.2807]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3165, -1.7477,  0.0284, -0.2672]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3528, -1.7190,  0.0438, -0.2309]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3917, -1.7183,  0.0661, -0.1920]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3901, -1.7127,  0.0689, -0.1937]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3705, -1.7058,  0.0604, -0.2132]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3393, -1.6976,  0.0467, -0.2444]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2996, -1.6923,  0.0241, -0.2842]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2841, -1.6876,  0.0072, -0.2997]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2931, -1.6855,  0.0080, -0.2907]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3115, -1.6831,  0.0190, -0.2722]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3249, -1.6961,  0.0309, -0.2589]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3233, -1.7154,  0.0234, -0.2604]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3180, -1.7392,  0.0021, -0.2657]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3226, -1.7569, -0.0146, -0.2611]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3312, -1.7631, -0.0192, -0.2525]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3374, -1.7638, -0.0195, -0.2463]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3469, -1.7664, -0.0243, -0.2369]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.795000. Loss: 0.657908. Time: 3.253401
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.770000, Val Loss: 1.025298 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3293, -1.7615, -0.0145, -0.2544]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3289, -1.7614,  0.0059, -0.2548]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3318, -1.7585,  0.0149, -0.2520]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3452, -1.7549,  0.0210, -0.2385]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3511, -1.7439,  0.0212, -0.2326]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3451, -1.7433,  0.0164, -0.2386]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3255, -1.7452,  0.0078, -0.2583]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3093, -1.7381, -0.0076, -0.2745]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3016, -1.7432, -0.0148, -0.2821]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3014, -1.7462, -0.0183, -0.2823]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2969, -1.7273, -0.0212, -0.2868]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2999, -1.7090, -0.0364, -0.2838]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3173, -1.6853, -0.0405, -0.2665]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3353, -1.6605, -0.0386, -0.2484]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3513, -1.6406, -0.0167, -0.2325]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3551, -1.6154,  0.0135, -0.2286]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3539, -1.5860,  0.0473, -0.2298]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3503, -1.5687,  0.0697, -0.2334]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3465, -1.5653,  0.0820, -0.2372]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.825000. Loss: 0.536293. Time: 3.226666
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.830000, Val Loss: 0.756664 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3582, -1.5733,  0.1074, -0.2256]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3434, -1.5598,  0.0928, -0.2404]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3265, -1.5563,  0.0726, -0.2573]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3063, -1.5594,  0.0347, -0.2775]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2954, -1.5594,  0.0099, -0.2884]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2904, -1.5729, -0.0098, -0.2933]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2890, -1.5902, -0.0052, -0.2948]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2827, -1.5998, -0.0094, -0.3011]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2769, -1.6048, -0.0201, -0.3069]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2821, -1.6055, -0.0199, -0.3017]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2893, -1.6087, -0.0182, -0.2944]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3010, -1.6202, -0.0175, -0.2827]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2985, -1.6414, -0.0243, -0.2852]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2952, -1.6603, -0.0314, -0.2885]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2997, -1.6739, -0.0370, -0.2841]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3051, -1.6825, -0.0441, -0.2786]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3071, -1.6926, -0.0620, -0.2766]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3139, -1.6993, -0.0607, -0.2699]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3231, -1.7054, -0.0356, -0.2606]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.865000. Loss: 0.534922. Time: 3.223564
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.850000, Val Loss: 0.699135 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3114, -1.7201, -0.0170, -0.2723]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2903, -1.7496, -0.0522, -0.2934]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2820, -1.7522, -0.0548, -0.3017]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2836, -1.7427, -0.0216, -0.3002]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2934, -1.7203,  0.0104, -0.2904]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2776, -1.7094,  0.0059, -0.3061]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2712, -1.7033,  0.0192, -0.3126]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2639, -1.7194,  0.0287, -0.3199]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2765, -1.7314,  0.0542, -0.3073]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2971, -1.7420,  0.0791, -0.2867]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3222, -1.7462,  0.0894, -0.2615]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3539, -1.7589,  0.0821, -0.2299]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3881, -1.7569,  0.0754, -0.1956]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4226, -1.7466,  0.0840, -0.1612]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4289, -1.7340,  0.0745, -0.1549]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3854, -1.7218,  0.0180, -0.1983]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3442, -1.7149, -0.0136, -0.2395]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3153, -1.7063, -0.0303, -0.2685]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2989, -1.6980, -0.0395, -0.2849]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.790000. Loss: 0.784666. Time: 3.208949
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.790000, Val Loss: 0.810866 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2693, -1.6452, -0.0317, -0.3144]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2736, -1.6301, -0.0262, -0.3101]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2604, -1.6177, -0.0272, -0.3233]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2589, -1.6028, -0.0260, -0.3248]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2350, -1.5913, -0.0218, -0.3488]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2366, -1.5826, -0.0268, -0.3471]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2437, -1.5817, -0.0384, -0.3401]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2771, -1.6045, -0.0107, -0.3066]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3055, -1.6381,  0.0097, -0.2783]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3298, -1.6749,  0.0529, -0.2539]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3589, -1.6964,  0.0801, -0.2248]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3733, -1.7071,  0.0957, -0.2105]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3681, -1.7079,  0.0945, -0.2157]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3561, -1.7055,  0.0911, -0.2277]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3455, -1.7044,  0.0884, -0.2382]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3302, -1.7115,  0.0897, -0.2535]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3103, -1.7098,  0.0847, -0.2735]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3001, -1.6986,  0.0754, -0.2837]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2826, -1.6918,  0.0640, -0.3011]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.840000. Loss: 0.680992. Time: 3.216094
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.850000, Val Loss: 0.546600 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2901, -1.6843,  0.0298, -0.2936]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2928, -1.6822,  0.0241, -0.2909]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2912, -1.6802,  0.0162, -0.2926]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.9343e-01, -1.6722e+00,  1.2058e-03, -2.9032e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3097, -1.6648, -0.0120, -0.2741]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3288, -1.6601, -0.0128, -0.2550]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3481, -1.6527, -0.0095, -0.2357]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3342, -1.6606, -0.0047, -0.2495]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3323, -1.6601,  0.0069, -0.2515]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3490, -1.6551,  0.0085, -0.2347]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3810, -1.6252,  0.0364, -0.2027]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3694, -1.5919,  0.0648, -0.2143]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3503, -1.5786,  0.0818, -0.2334]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3328, -1.5663,  0.0953, -0.2510]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3096, -1.5465,  0.1052, -0.2742]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2642, -1.5021,  0.0983, -0.3195]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2341, -1.4613,  0.0889, -0.3497]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2412, -1.4233,  0.0680, -0.3426]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2667, -1.3900,  0.0502, -0.3171]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.835000. Loss: 0.652715. Time: 3.232415
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.820000, Val Loss: 0.907166 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2610, -1.3605,  0.0154, -0.3227]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2643, -1.3508, -0.0048, -0.3195]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.9000e-01, -1.3361e+00,  1.1584e-03, -2.9375e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3126, -1.3270, -0.0023, -0.2712]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3304, -1.3149,  0.0021, -0.2534]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3454, -1.3027, -0.0027, -0.2384]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3401, -1.2962, -0.0161, -0.2437]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3188, -1.2854, -0.0330, -0.2649]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3033, -1.2817, -0.0429, -0.2805]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2918, -1.2718, -0.0496, -0.2919]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2749, -1.2734, -0.0594, -0.3088]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2660, -1.2706, -0.0650, -0.3177]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2582, -1.2660, -0.0537, -0.3256]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2662, -1.2614, -0.0428, -0.3176]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3020, -1.2656, -0.0278, -0.2818]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.3390e-01, -1.2643e+00, -4.3550e-04, -2.4985e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3485, -1.2821,  0.0041, -0.2352]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3544, -1.2900,  0.0094, -0.2293]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.7103e-01, -1.2987e+00, -2.6082e-04, -2.1272e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.870000. Loss: 0.430314. Time: 3.188250
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.810000, Val Loss: 0.634941 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3665, -1.3291,  0.0186, -0.2173]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3474, -1.3407,  0.0363, -0.2363]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3325, -1.3550,  0.0501, -0.2513]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3285, -1.3752,  0.0527, -0.2553]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3319, -1.3757,  0.0375, -0.2519]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3354, -1.3667,  0.0072, -0.2483]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3318, -1.3659, -0.0159, -0.2519]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3304, -1.3656, -0.0313, -0.2534]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3241, -1.3678, -0.0412, -0.2596]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3073, -1.3653, -0.0426, -0.2765]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3056, -1.3663, -0.0279, -0.2781]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3169, -1.3705,  0.0028, -0.2668]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3274, -1.3774,  0.0282, -0.2563]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3363, -1.3817,  0.0428, -0.2475]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3441, -1.3848,  0.0514, -0.2397]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3540, -1.3886,  0.0546, -0.2298]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3585, -1.3821,  0.0586, -0.2253]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3593, -1.3753,  0.0621, -0.2245]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3698, -1.3634,  0.0630, -0.2139]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.875000. Loss: 0.417941. Time: 3.231169
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.840000, Val Loss: 0.684863 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3760, -1.3782,  0.0651, -0.2078]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3603, -1.3862,  0.0645, -0.2235]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3511, -1.3869,  0.0612, -0.2327]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3445, -1.3830,  0.0576, -0.2393]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3398, -1.3714,  0.0554, -0.2440]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3497, -1.3724,  0.0532, -0.2340]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3576, -1.3857,  0.0426, -0.2262]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3668, -1.3951,  0.0352, -0.2169]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3666, -1.4050,  0.0354, -0.2172]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3601, -1.4210,  0.0329, -0.2236]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3234, -1.4277,  0.0173, -0.2604]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.8403e-01, -1.4175e+00, -2.6490e-04, -2.9972e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2746, -1.4137, -0.0022, -0.3092]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2797, -1.4185,  0.0022, -0.3041]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2816, -1.4216,  0.0045, -0.3021]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2835, -1.4163,  0.0118, -0.3002]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2880, -1.4055,  0.0170, -0.2957]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2919, -1.3988,  0.0213, -0.2918]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2883, -1.3971,  0.0146, -0.2954]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.850000. Loss: 0.532733. Time: 3.228396
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.830000, Val Loss: 0.659566 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2945, -1.3767,  0.0047, -0.2892]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3010, -1.3655,  0.0043, -0.2828]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3040, -1.3606,  0.0028, -0.2797]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3132, -1.3612,  0.0092, -0.2706]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3225, -1.3584,  0.0119, -0.2613]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3407, -1.3652,  0.0112, -0.2430]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3507, -1.3624,  0.0106, -0.2331]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3490, -1.3564,  0.0044, -0.2348]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3472, -1.3535, -0.0041, -0.2366]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3426, -1.3546, -0.0084, -0.2412]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3392, -1.3554, -0.0106, -0.2445]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3381, -1.3572, -0.0106, -0.2457]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3358, -1.3586, -0.0085, -0.2480]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3292, -1.3646, -0.0121, -0.2545]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3229, -1.3726, -0.0081, -0.2609]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.2026e-01, -1.3870e+00, -3.2735e-05, -2.6349e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3156, -1.3995,  0.0047, -0.2682]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3123, -1.4143,  0.0020, -0.2714]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3114, -1.4236,  0.0023, -0.2724]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.905000. Loss: 0.367937. Time: 3.237408
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.900000, Val Loss: 0.551752 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3049, -1.3854,  0.0054, -0.2788]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3104, -1.3637,  0.0089, -0.2733]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3137, -1.3518,  0.0114, -0.2701]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3163, -1.3453,  0.0132, -0.2675]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3212, -1.3479,  0.0176, -0.2625]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3264, -1.3564,  0.0203, -0.2573]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3194, -1.3592,  0.0248, -0.2644]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3145, -1.3625,  0.0280, -0.2693]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3113, -1.3646,  0.0299, -0.2724]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3116, -1.3625,  0.0304, -0.2721]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3174, -1.3729,  0.0270, -0.2664]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3138, -1.3744,  0.0219, -0.2699]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3024, -1.3775,  0.0178, -0.2814]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2984, -1.3787,  0.0140, -0.2854]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3046, -1.3757,  0.0151, -0.2792]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3204, -1.3781,  0.0107, -0.2633]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.2793e-01, -1.3743e+00,  9.7870e-04, -2.5582e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3341, -1.3728, -0.0068, -0.2496]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3465, -1.3707, -0.0108, -0.2373]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.860000. Loss: 0.565430. Time: 3.243876
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.890000, Val Loss: 0.496227 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3353, -1.3830, -0.0046, -0.2485]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3231, -1.3884, -0.0106, -0.2607]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3157, -1.3880, -0.0162, -0.2681]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3081, -1.4022, -0.0192, -0.2756]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3039, -1.4062, -0.0153, -0.2798]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2988, -1.4026, -0.0113, -0.2849]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2998, -1.3968, -0.0020, -0.2839]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3049, -1.3886,  0.0090, -0.2789]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3059, -1.3864,  0.0245, -0.2778]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3058, -1.3839,  0.0401, -0.2779]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3099, -1.3740,  0.0409, -0.2739]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3152, -1.3815,  0.0324, -0.2685]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3196, -1.3899,  0.0246, -0.2641]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3247, -1.3943,  0.0144, -0.2590]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3236, -1.4016,  0.0109, -0.2602]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3127, -1.4018,  0.0048, -0.2711]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2915, -1.3990, -0.0034, -0.2923]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2779, -1.3900, -0.0041, -0.3059]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.8003e-01, -1.3670e+00,  2.2342e-04, -3.0372e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.865000. Loss: 0.547412. Time: 3.191616
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.850000, Val Loss: 0.797062 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3017, -1.3527, -0.0167, -0.2821]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3161, -1.3545, -0.0279, -0.2676]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3281, -1.3500, -0.0371, -0.2557]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3406, -1.3302, -0.0371, -0.2431]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3432, -1.3164, -0.0347, -0.2405]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3380, -1.3044, -0.0334, -0.2457]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3286, -1.2932, -0.0362, -0.2552]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3164, -1.2828, -0.0343, -0.2673]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3028, -1.2887, -0.0295, -0.2809]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2977, -1.2961, -0.0100, -0.2861]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2990, -1.2951,  0.0058, -0.2848]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2938, -1.2917,  0.0293, -0.2900]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2905, -1.2827,  0.0414, -0.2933]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2883, -1.2779,  0.0493, -0.2954]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2857, -1.2773,  0.0564, -0.2981]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2841, -1.2775,  0.0604, -0.2996]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2862, -1.2785,  0.0660, -0.2976]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2911, -1.2805,  0.0666, -0.2926]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2930, -1.2609,  0.0515, -0.2907]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.905000. Loss: 0.534371. Time: 3.201776
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.890000, Val Loss: 0.569380 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3045, -1.2223,  0.0244, -0.2792]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2984, -1.2192,  0.0176, -0.2854]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3024, -1.2269,  0.0035, -0.2813]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3087, -1.2342, -0.0082, -0.2751]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3134, -1.2379, -0.0159, -0.2704]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3165, -1.2375, -0.0193, -0.2673]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3153, -1.2336, -0.0202, -0.2684]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3122, -1.2295, -0.0204, -0.2715]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3059, -1.2368, -0.0104, -0.2779]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.0297e-01, -1.2441e+00, -4.7831e-04, -2.8078e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2987, -1.2590,  0.0259, -0.2851]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3023, -1.2730,  0.0401, -0.2814]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3066, -1.2815,  0.0481, -0.2771]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3109, -1.2824,  0.0550, -0.2729]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3173, -1.2789,  0.0609, -0.2664]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3249, -1.2753,  0.0667, -0.2589]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3297, -1.2730,  0.0705, -0.2541]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3371, -1.2767,  0.0668, -0.2466]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3528, -1.2793,  0.0575, -0.2309]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.900000. Loss: 0.512038. Time: 3.218147
Validate after epoch 38 with seed 297566
Val Accuracy: 0.880000, Val Loss: 0.534499 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3843, -1.2798,  0.0282, -0.1995]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3923, -1.2748,  0.0102, -0.1915]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3721, -1.2816, -0.0045, -0.2117]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3572, -1.2855, -0.0202, -0.2265]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3437, -1.2905, -0.0305, -0.2401]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3058, -1.2726, -0.0508, -0.2780]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2816, -1.2616, -0.0535, -0.3022]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2601, -1.2575, -0.0585, -0.3236]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2338, -1.2532, -0.0553, -0.3499]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2416, -1.2605, -0.0413, -0.3422]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2589, -1.2681, -0.0314, -0.3248]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2838, -1.2956, -0.0115, -0.3000]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3182, -1.3430,  0.0113, -0.2655]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3493, -1.3640,  0.0251, -0.2344]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3706, -1.3766,  0.0301, -0.2131]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3689, -1.3575,  0.0161, -0.2148]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3482, -1.3306,  0.0176, -0.2355]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3365, -1.3173,  0.0194, -0.2472]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3291, -1.3115,  0.0234, -0.2547]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.820000. Loss: 0.884215. Time: 3.214530
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.850000, Val Loss: 0.631657 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3188, -1.3220,  0.0437, -0.2649]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3248, -1.3229,  0.0519, -0.2590]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3207, -1.3478,  0.0505, -0.2630]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3157, -1.3641,  0.0480, -0.2680]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3055, -1.3697,  0.0367, -0.2782]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2927, -1.3710,  0.0196, -0.2911]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2884, -1.3701,  0.0098, -0.2953]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2923, -1.3671,  0.0144, -0.2914]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3029, -1.3775,  0.0287, -0.2809]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2940, -1.4004,  0.0280, -0.2898]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2771, -1.4035,  0.0056, -0.3067]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2852, -1.3912, -0.0249, -0.2985]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2971, -1.3826, -0.0456, -0.2866]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3047, -1.3737, -0.0642, -0.2790]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3198, -1.3710, -0.0669, -0.2639]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3367, -1.3702, -0.0629, -0.2471]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3537, -1.3716, -0.0547, -0.2301]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3617, -1.3763, -0.0473, -0.2220]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3513, -1.3888, -0.0435, -0.2325]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.845000. Loss: 0.558028. Time: 3.180172
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.840000, Val Loss: 0.660131 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3324, -1.3898, -0.0270, -0.2513]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3280, -1.3990, -0.0178, -0.2557]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3249, -1.4052, -0.0107, -0.2588]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.3741e-01, -1.4105e+00,  5.7105e-04, -2.4634e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3294, -1.3969,  0.0185, -0.2544]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3291, -1.3865,  0.0340, -0.2547]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3366, -1.3788,  0.0406, -0.2472]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3374, -1.3744,  0.0445, -0.2463]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3240, -1.3714,  0.0605, -0.2598]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3177, -1.3674,  0.0767, -0.2660]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3158, -1.3668,  0.0990, -0.2680]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2965, -1.3940,  0.0964, -0.2873]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2882, -1.4142,  0.0811, -0.2955]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2810, -1.4342,  0.0321, -0.3027]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2945, -1.4386, -0.0128, -0.2892]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3117, -1.4458, -0.0446, -0.2721]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3223, -1.4491, -0.0651, -0.2615]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3193, -1.4357, -0.0703, -0.2644]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2953, -1.4337, -0.0666, -0.2884]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.855000. Loss: 0.495751. Time: 3.208736
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.840000, Val Loss: 0.704581 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2667, -1.4318, -0.0399, -0.3170]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2662, -1.4179, -0.0098, -0.3175]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2794, -1.4039,  0.0140, -0.3043]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3185, -1.4034,  0.0401, -0.2652]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3427, -1.3983,  0.0549, -0.2410]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3517, -1.3953,  0.0649, -0.2321]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3540, -1.3956,  0.0768, -0.2297]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3694, -1.4093,  0.0861, -0.2144]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3821, -1.4208,  0.0905, -0.2017]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3773, -1.4322,  0.0679, -0.2065]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3712, -1.4404,  0.0466, -0.2125]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3542, -1.4407,  0.0192, -0.2296]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3290, -1.4392, -0.0095, -0.2547]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3168, -1.4352, -0.0263, -0.2670]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3129, -1.4350, -0.0379, -0.2708]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3021, -1.4370, -0.0414, -0.2817]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2881, -1.4324, -0.0275, -0.2957]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.8866e-01, -1.4298e+00,  1.4415e-04, -2.9509e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2965, -1.4262,  0.0276, -0.2872]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.845000. Loss: 0.671536. Time: 3.218114
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.870000, Val Loss: 0.602230 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3065, -1.4292,  0.0621, -0.2772]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3173, -1.4233,  0.0520, -0.2665]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3193, -1.4113,  0.0404, -0.2645]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3128, -1.3918,  0.0192, -0.2709]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3043, -1.3741,  0.0041, -0.2795]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2964, -1.3648, -0.0083, -0.2873]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2909, -1.3724, -0.0156, -0.2928]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2892, -1.3785, -0.0178, -0.2945]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2902, -1.3846, -0.0267, -0.2935]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2895, -1.3906, -0.0414, -0.2942]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2918, -1.3963, -0.0467, -0.2920]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2920, -1.4000, -0.0457, -0.2917]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2784, -1.4008, -0.0281, -0.3053]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2570, -1.3954, -0.0085, -0.3268]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2574, -1.4001, -0.0030, -0.3263]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2648, -1.4093, -0.0025, -0.3189]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2713, -1.4181, -0.0019, -0.3125]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2847, -1.4300,  0.0020, -0.2991]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2960, -1.4418,  0.0058, -0.2878]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.880000. Loss: 0.434315. Time: 3.226303
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.880000, Val Loss: 0.533079 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2924, -1.4621,  0.0232, -0.2913]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2946, -1.4624,  0.0303, -0.2891]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2966, -1.4618,  0.0346, -0.2872]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3074, -1.4581,  0.0543, -0.2764]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3087, -1.4435,  0.0485, -0.2751]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3106, -1.4338,  0.0439, -0.2731]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3181, -1.4280,  0.0410, -0.2656]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3253, -1.4261,  0.0346, -0.2585]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3430, -1.4369,  0.0287, -0.2408]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3584, -1.4358,  0.0252, -0.2253]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3680, -1.4343,  0.0198, -0.2157]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3691, -1.4183,  0.0242, -0.2146]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3589, -1.3985,  0.0108, -0.2248]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3509, -1.3937, -0.0064, -0.2328]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3449, -1.3804, -0.0072, -0.2388]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3352, -1.3700, -0.0039, -0.2485]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3139, -1.3596, -0.0029, -0.2698]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2814, -1.3366, -0.0096, -0.3023]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2647, -1.3283, -0.0186, -0.3191]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.835000. Loss: 0.483662. Time: 3.231318
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.850000, Val Loss: 0.596888 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2857, -1.3576,  0.0268, -0.2980]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2996, -1.3806,  0.0480, -0.2841]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3075, -1.3943,  0.0625, -0.2762]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3166, -1.3972,  0.0713, -0.2672]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3282, -1.3819,  0.0740, -0.2556]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3503, -1.3727,  0.0648, -0.2335]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3630, -1.3614,  0.0628, -0.2208]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3663, -1.3425,  0.0486, -0.2174]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3668, -1.3321,  0.0418, -0.2170]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3606, -1.3316,  0.0307, -0.2231]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3548, -1.3349,  0.0184, -0.2289]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3499, -1.3324,  0.0074, -0.2338]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3394, -1.3337,  0.0115, -0.2444]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3367, -1.3357,  0.0205, -0.2470]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3361, -1.3406,  0.0257, -0.2477]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3222, -1.3349,  0.0279, -0.2616]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3099, -1.3222,  0.0355, -0.2738]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2974, -1.3170,  0.0482, -0.2864]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2975, -1.3145,  0.0576, -0.2862]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.880000. Loss: 0.368575. Time: 3.212004
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.860000, Val Loss: 0.389204 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3099, -1.3183,  0.0583, -0.2738]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3126, -1.3215,  0.0527, -0.2711]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3181, -1.3143,  0.0450, -0.2657]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3204, -1.3030,  0.0415, -0.2634]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3142, -1.2865,  0.0459, -0.2695]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3046, -1.2709,  0.0461, -0.2792]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2981, -1.2613,  0.0430, -0.2856]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3078, -1.2680,  0.0468, -0.2759]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3213, -1.2691,  0.0510, -0.2624]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3334, -1.2690,  0.0530, -0.2503]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3414, -1.2640,  0.0486, -0.2424]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3452, -1.2609,  0.0415, -0.2385]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3467, -1.2576,  0.0336, -0.2371]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3487, -1.2502,  0.0265, -0.2350]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3538, -1.2225,  0.0213, -0.2299]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3547, -1.2091,  0.0269, -0.2290]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3542, -1.2087,  0.0168, -0.2295]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3536, -1.2083,  0.0128, -0.2302]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3537, -1.2086,  0.0101, -0.2301]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.930000. Loss: 0.231836. Time: 3.199546
Validate after epoch 46 with seed 91566
Val Accuracy: 0.860000, Val Loss: 0.830837 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3555, -1.2041,  0.0036, -0.2283]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3425, -1.2032,  0.0122, -0.2413]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3296, -1.2039,  0.0157, -0.2542]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3225, -1.2056,  0.0176, -0.2613]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3169, -1.2003,  0.0147, -0.2668]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3188, -1.1890,  0.0102, -0.2649]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3211, -1.1809,  0.0107, -0.2627]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3332, -1.1645,  0.0188, -0.2505]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3400, -1.1565,  0.0207, -0.2437]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3453, -1.1526,  0.0192, -0.2384]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3501, -1.1497,  0.0158, -0.2337]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3614, -1.1426,  0.0137, -0.2224]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3723, -1.1310,  0.0143, -0.2114]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3753, -1.1292,  0.0126, -0.2084]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3621, -1.1427,  0.0073, -0.2216]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3493, -1.1603, -0.0043, -0.2345]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3350, -1.1748,  0.0029, -0.2488]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3262, -1.1792,  0.0033, -0.2576]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3134, -1.1800,  0.0048, -0.2704]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.890000. Loss: 0.312653. Time: 3.243780
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.890000, Val Loss: 0.359573 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2948, -1.1773,  0.0095, -0.2889]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2913, -1.1766,  0.0110, -0.2925]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2837, -1.1753,  0.0025, -0.3001]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2790, -1.1783, -0.0083, -0.3048]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2782, -1.1841, -0.0104, -0.3055]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2796, -1.1902, -0.0080, -0.3041]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2829, -1.2022, -0.0090, -0.3008]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2806, -1.2150, -0.0048, -0.3031]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.7468e-01, -1.2269e+00,  1.8784e-04, -3.0907e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2665, -1.2289,  0.0014, -0.3173]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.7645e-01, -1.2420e+00, -3.0182e-04, -3.0730e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 2.8572e-01, -1.2518e+00, -5.0278e-04, -2.9803e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3014, -1.2746, -0.0075, -0.2824]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3189, -1.2956, -0.0136, -0.2648]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3324, -1.3077, -0.0156, -0.2513]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3357, -1.3179, -0.0137, -0.2480]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3289, -1.3237, -0.0104, -0.2549]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3351, -1.3249, -0.0062, -0.2486]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3404, -1.3249, -0.0045, -0.2433]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.905000. Loss: 0.348067. Time: 3.229769
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.820000, Val Loss: 0.712460 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3404, -1.3243,  0.0021, -0.2433]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3394, -1.3304,  0.0054, -0.2443]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3326, -1.3312,  0.0089, -0.2511]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3326, -1.3354,  0.0165, -0.2511]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3352, -1.3386,  0.0255, -0.2486]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3254, -1.3273,  0.0353, -0.2584]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3181, -1.3193,  0.0406, -0.2657]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3028, -1.3170,  0.0461, -0.2810]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3038, -1.3153,  0.0479, -0.2799]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3112, -1.3210,  0.0478, -0.2725]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3172, -1.3351,  0.0497, -0.2665]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3210, -1.3551,  0.0553, -0.2628]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3207, -1.3674,  0.0580, -0.2630]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3236, -1.3723,  0.0611, -0.2601]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3258, -1.3750,  0.0636, -0.2580]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3327, -1.3819,  0.0746, -0.2510]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3386, -1.3836,  0.0763, -0.2452]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3404, -1.3799,  0.0756, -0.2434]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3413, -1.3722,  0.0749, -0.2425]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.920000. Loss: 0.225924. Time: 3.242814
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.890000, Val Loss: 0.655100 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3419, -1.3567,  0.0691, -0.2419]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3374, -1.3429,  0.0671, -0.2464]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3324, -1.3313,  0.0705, -0.2514]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3299, -1.3253,  0.0747, -0.2538]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3230, -1.3238,  0.0755, -0.2607]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3189, -1.3231,  0.0758, -0.2648]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3164, -1.3258,  0.0738, -0.2674]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3150, -1.3290,  0.0720, -0.2688]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2981, -1.3210,  0.0593, -0.2856]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2964, -1.3094,  0.0433, -0.2874]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2957, -1.3004,  0.0297, -0.2880]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2897, -1.2924,  0.0125, -0.2940]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2767, -1.2887, -0.0075, -0.3071]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2632, -1.2837, -0.0263, -0.3205]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2637, -1.2598, -0.0368, -0.3200]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2700, -1.2311, -0.0279, -0.3138]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2843, -1.2173, -0.0169, -0.2994]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2986, -1.2040, -0.0072, -0.2852]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3230, -1.2039,  0.0059, -0.2607]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.900000. Loss: 0.343025. Time: 3.223744
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.840000, Val Loss: 0.826753 
Training Execution time: 06:10:20.00
Conducting Test
Test Accuracy: 0.895000, Test Loss: 0.405557 

Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'NEQR', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_NEQR_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'NEQR', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_NEQR_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1040, -0.8597, -0.3221, -0.6877]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1479, -0.8700, -0.3674, -0.7316]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1944, -0.8810, -0.4154, -0.7781]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2353, -0.8920, -0.4602, -0.8191]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2729, -0.8967, -0.5026, -0.8567]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3035, -0.8986, -0.5398, -0.8873]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3246, -0.8980, -0.5680, -0.9083]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3408, -0.8999, -0.5910, -0.9246]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3635, -0.8903, -0.6332, -0.9473]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3903, -0.8800, -0.6737, -0.9740]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4057, -0.8734, -0.7024, -0.9895]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4118, -0.8688, -0.7233, -0.9956]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4094, -0.8664, -0.7443, -0.9932]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4103, -0.8647, -0.7653, -0.9940]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4131, -0.8653, -0.7872, -0.9969]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4180, -0.8684, -0.8040, -1.0017]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4135, -0.8708, -0.8213, -0.9972]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4139, -0.8694, -0.8389, -0.9977]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4110, -0.8635, -0.8536, -0.9947]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.400000. Loss: 5.210271. Time: 2.961752
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.380000, Val Loss: 5.101344 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4239, -0.8461, -0.9017, -1.0077]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4366, -0.8378, -0.9380, -1.0203]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4464, -0.8292, -0.9687, -1.0301]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4530, -0.8220, -1.0000, -1.0367]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4451, -0.8134, -1.0232, -1.0288]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4362, -0.8028, -1.0455, -1.0199]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4288, -0.7841, -1.0784, -1.0126]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4211, -0.7736, -1.1041, -1.0048]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4195, -0.7763, -1.1430, -1.0032]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4247, -0.7794, -1.1772, -1.0084]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4339, -0.7790, -1.1998, -1.0177]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4442, -0.7767, -1.2223, -1.0280]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4529, -0.7748, -1.2343, -1.0366]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4602, -0.7772, -1.2403, -1.0439]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4573, -0.7789, -1.2430, -1.0411]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4699, -0.7842, -1.2652, -1.0537]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4783, -0.7820, -1.2791, -1.0621]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4820, -0.7722, -1.2891, -1.0657]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4814, -0.7643, -1.3117, -1.0652]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.535000. Loss: 3.431804. Time: 2.961912
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.480000, Val Loss: 4.794766 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4694, -0.7627, -1.3415, -1.0531]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4603, -0.7660, -1.3408, -1.0441]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4645, -0.7625, -1.3388, -1.0482]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4600, -0.7664, -1.3354, -1.0438]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -0.7655, -1.3443, -1.0507]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4733, -0.7663, -1.3527, -1.0570]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4707, -0.7689, -1.3599, -1.0544]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4609, -0.7749, -1.3528, -1.0447]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4503, -0.7791, -1.3451, -1.0340]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4383, -0.7745, -1.3465, -1.0220]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4396, -0.7743, -1.3454, -1.0233]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4552, -0.8015, -1.3558, -1.0390]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4700, -0.8249, -1.3676, -1.0538]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4825, -0.8386, -1.3790, -1.0663]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5021, -0.8468, -1.3891, -1.0859]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5096, -0.8503, -1.4000, -1.0933]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4907, -0.8467, -1.4047, -1.0744]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4838, -0.8480, -1.4194, -1.0675]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5048, -0.8464, -1.4340, -1.0886]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.625000. Loss: 3.359492. Time: 2.976739
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.560000, Val Loss: 4.549454 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5452, -0.8283, -1.4682, -1.1289]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5344, -0.8248, -1.4806, -1.1181]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4964, -0.8222, -1.4781, -1.0801]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4413, -0.8186, -1.4711, -1.0250]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4043, -0.8208, -1.4684, -0.9880]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3862, -0.8391, -1.4633, -0.9699]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3712, -0.8548, -1.4365, -0.9550]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3787, -0.8727, -1.4236, -0.9625]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4094, -0.8834, -1.4221, -0.9931]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4491, -0.8909, -1.4095, -1.0328]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4839, -0.8935, -1.3826, -1.0677]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5439, -0.9070, -1.3719, -1.1277]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6185, -0.9123, -1.3685, -1.2023]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6158, -0.9220, -1.3780, -1.1995]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5718, -0.9308, -1.3909, -1.1556]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5225, -0.9312, -1.4276, -1.1062]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4739, -0.9317, -1.4503, -1.0576]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4357, -0.9366, -1.4572, -1.0195]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4200, -0.9457, -1.4623, -1.0037]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.495000. Loss: 4.739037. Time: 2.906433
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.630000, Val Loss: 4.009199 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4055, -0.9434, -1.4742, -0.9893]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4161, -0.9366, -1.4873, -0.9998]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4191, -0.9373, -1.4935, -1.0029]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4126, -0.9451, -1.4917, -0.9964]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3919, -0.9484, -1.4883, -0.9756]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3877, -0.9541, -1.4826, -0.9715]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4007, -0.9610, -1.4735, -0.9844]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4178, -0.9701, -1.4867, -1.0016]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4459, -0.9869, -1.4962, -1.0296]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4615, -0.9924, -1.4869, -1.0452]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4693, -0.9919, -1.4826, -1.0531]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4778, -0.9827, -1.4625, -1.0615]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4807, -0.9772, -1.4507, -1.0645]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4724, -0.9668, -1.4519, -1.0562]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4714, -0.9618, -1.4476, -1.0551]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4647, -0.9534, -1.4475, -1.0485]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4562, -0.9504, -1.4569, -1.0400]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4620, -0.9523, -1.4667, -1.0458]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4860, -0.9642, -1.4697, -1.0698]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.630000. Loss: 3.078242. Time: 2.907998
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.720000, Val Loss: 2.433885 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4789, -0.9893, -1.4883, -1.0626]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4600, -0.9921, -1.5032, -1.0437]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4517, -0.9968, -1.5210, -1.0355]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4525, -1.0062, -1.5372, -1.0363]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4612, -1.0110, -1.5440, -1.0450]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4646, -1.0147, -1.5507, -1.0483]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4655, -1.0161, -1.5548, -1.0493]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4699, -1.0164, -1.5675, -1.0536]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4708, -1.0116, -1.5862, -1.0545]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4698, -1.0114, -1.5914, -1.0535]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4616, -1.0178, -1.5775, -1.0453]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4574, -1.0245, -1.5684, -1.0411]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4571, -1.0307, -1.5596, -1.0408]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4505, -1.0416, -1.5449, -1.0342]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4536, -1.0510, -1.5205, -1.0373]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4561, -1.0549, -1.5060, -1.0399]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4708, -1.0491, -1.4948, -1.0546]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4688, -1.0560, -1.4927, -1.0525]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4633, -1.0600, -1.4974, -1.0470]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.695000. Loss: 2.460088. Time: 2.920706
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.690000, Val Loss: 3.316336 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4723, -1.0282, -1.5111, -1.0560]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4784, -1.0168, -1.5177, -1.0622]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4846, -1.0048, -1.5234, -1.0683]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4831, -0.9986, -1.5248, -1.0668]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4816, -0.9976, -1.5126, -1.0654]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4790, -0.9970, -1.4987, -1.0628]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4752, -1.0075, -1.4884, -1.0589]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4737, -1.0128, -1.4811, -1.0574]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4735, -1.0159, -1.4721, -1.0573]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4723, -1.0223, -1.4567, -1.0561]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4653, -1.0361, -1.4562, -1.0490]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4649, -1.0410, -1.4589, -1.0487]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4698, -1.0361, -1.4650, -1.0535]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4747, -1.0312, -1.4722, -1.0584]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4680, -1.0429, -1.4805, -1.0518]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4661, -1.0452, -1.4874, -1.0499]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4775, -1.0426, -1.4937, -1.0613]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4887, -1.0372, -1.4968, -1.0725]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4896, -1.0330, -1.4989, -1.0733]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.715000. Loss: 2.365441. Time: 2.930820
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.800000, Val Loss: 1.810862 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4790, -1.0390, -1.4985, -1.0628]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4838, -1.0388, -1.4884, -1.0676]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4750, -1.0393, -1.4805, -1.0587]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4636, -1.0343, -1.4852, -1.0474]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4498, -1.0394, -1.5139, -1.0336]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4495, -1.0639, -1.5629, -1.0332]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4515, -1.0783, -1.5962, -1.0352]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4568, -1.0958, -1.6148, -1.0406]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4661, -1.0990, -1.6203, -1.0499]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4817, -1.0986, -1.6068, -1.0654]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4966, -1.1116, -1.5935, -1.0803]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5030, -1.1259, -1.5858, -1.0867]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5178, -1.1334, -1.5773, -1.1015]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5296, -1.1378, -1.5699, -1.1133]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5370, -1.1421, -1.5608, -1.1207]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5357, -1.1373, -1.5447, -1.1195]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5277, -1.1262, -1.5267, -1.1115]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5230, -1.1131, -1.5061, -1.1068]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5102, -1.1166, -1.4906, -1.0940]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.630000. Loss: 2.985731. Time: 2.901729
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.720000, Val Loss: 2.236602 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4589, -1.1129, -1.4518, -1.0427]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4380, -1.0977, -1.4431, -1.0217]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4250, -1.0897, -1.4344, -1.0088]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4156, -1.0847, -1.4301, -0.9994]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4123, -1.0806, -1.4282, -0.9961]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4064, -1.0777, -1.4291, -0.9902]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4006, -1.0770, -1.4304, -0.9844]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4002, -1.0695, -1.4351, -0.9839]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4301, -1.0403, -1.4440, -1.0139]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4591, -1.0057, -1.4721, -1.0429]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5125, -1.0009, -1.5073, -1.0963]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5742, -0.9885, -1.5477, -1.1580]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6106, -0.9914, -1.5711, -1.1943]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6136, -0.9957, -1.5750, -1.1974]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5882, -0.9971, -1.5718, -1.1719]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5693, -0.9939, -1.5705, -1.1530]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5336, -0.9786, -1.5525, -1.1174]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5091, -0.9644, -1.5298, -1.0928]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4792, -0.9431, -1.5242, -1.0629]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.685000. Loss: 3.173826. Time: 2.906836
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.770000, Val Loss: 2.285015 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4260, -0.9243, -1.5029, -1.0097]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4338, -0.9318, -1.5073, -1.0176]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4546, -0.9393, -1.5210, -1.0383]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4612, -0.9461, -1.5286, -1.0450]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4625, -0.9465, -1.5258, -1.0463]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4611, -0.9494, -1.5204, -1.0448]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4633, -0.9423, -1.5148, -1.0471]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4634, -0.9340, -1.5121, -1.0472]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4746, -0.9334, -1.5145, -1.0584]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4872, -0.9421, -1.5179, -1.0709]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -0.9360, -1.5235, -1.0693]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4808, -0.9287, -1.5246, -1.0646]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4762, -0.9339, -1.5135, -1.0599]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4781, -0.9423, -1.5002, -1.0619]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4864, -0.9491, -1.4770, -1.0701]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4716, -0.9504, -1.4666, -1.0554]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4690, -0.9583, -1.4654, -1.0528]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4813, -0.9851, -1.4598, -1.0651]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4959, -1.0065, -1.4550, -1.0797]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.715000. Loss: 2.376589. Time: 2.895742
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.620000, Val Loss: 3.885811 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4946, -1.0205, -1.4646, -1.0783]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4783, -1.0185, -1.4737, -1.0621]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4602, -1.0157, -1.4858, -1.0439]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4720, -0.9930, -1.5107, -1.0557]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4792, -0.9734, -1.5309, -1.0629]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4771, -0.9631, -1.5385, -1.0608]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4818, -0.9549, -1.5442, -1.0655]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4879, -0.9479, -1.5499, -1.0717]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4885, -0.9428, -1.5541, -1.0722]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4953, -0.9448, -1.5614, -1.0791]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5084, -0.9491, -1.5728, -1.0922]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5082, -0.9397, -1.5637, -1.0919]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5023, -0.9334, -1.5562, -1.0860]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4911, -0.9331, -1.5563, -1.0748]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -0.9302, -1.5519, -1.0694]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4787, -0.9245, -1.5503, -1.0624]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4678, -0.9189, -1.5368, -1.0516]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4553, -0.9165, -1.5231, -1.0391]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4556, -0.8796, -1.5139, -1.0394]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.720000. Loss: 2.739576. Time: 2.908294
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.580000, Val Loss: 3.487989 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4607, -0.8292, -1.4951, -1.0445]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4780, -0.8211, -1.4818, -1.0618]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4962, -0.8316, -1.4848, -1.0799]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5217, -0.8488, -1.5011, -1.1054]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5211, -0.8679, -1.5060, -1.1049]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5104, -0.8644, -1.4978, -1.0942]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5034, -0.8670, -1.4959, -1.0872]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4943, -0.8862, -1.5049, -1.0781]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4719, -0.8982, -1.5258, -1.0556]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4600, -0.9115, -1.5435, -1.0438]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4518, -0.9313, -1.5589, -1.0355]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4387, -0.9380, -1.5753, -1.0224]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4332, -0.9449, -1.5952, -1.0170]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4549, -0.9470, -1.5865, -1.0387]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4643, -0.9569, -1.5691, -1.0481]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4729, -0.9725, -1.5413, -1.0566]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4794, -0.9814, -1.5182, -1.0631]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4848, -0.9831, -1.5129, -1.0686]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4919, -0.9881, -1.5029, -1.0757]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.660000. Loss: 3.794062. Time: 2.888799
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.730000, Val Loss: 2.057019 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5052, -1.0219, -1.4801, -1.0890]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5000, -1.0326, -1.4737, -1.0838]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4916, -1.0354, -1.4762, -1.0753]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4768, -1.0232, -1.4918, -1.0605]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4570, -1.0072, -1.5403, -1.0408]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4377, -0.9922, -1.5866, -1.0214]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4369, -0.9879, -1.6127, -1.0207]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4515, -1.0077, -1.6197, -1.0353]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4668, -1.0271, -1.6181, -1.0505]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4815, -1.0378, -1.6028, -1.0653]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4923, -1.0577, -1.6024, -1.0761]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5010, -1.0818, -1.5903, -1.0847]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5089, -1.1062, -1.5643, -1.0926]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5095, -1.1126, -1.5386, -1.0932]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4973, -1.1247, -1.5093, -1.0810]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4775, -1.1370, -1.4939, -1.0613]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4541, -1.1509, -1.4996, -1.0379]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4334, -1.1656, -1.5208, -1.0171]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4303, -1.1668, -1.5348, -1.0141]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.690000. Loss: 3.355454. Time: 2.911088
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.750000, Val Loss: 2.654596 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4419, -1.1773, -1.5446, -1.0257]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4530, -1.1713, -1.5359, -1.0368]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4611, -1.1709, -1.5270, -1.0448]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4749, -1.1696, -1.5382, -1.0586]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5057, -1.1722, -1.5442, -1.0894]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5359, -1.1676, -1.5399, -1.1196]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5590, -1.1786, -1.5399, -1.1428]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5542, -1.1817, -1.5311, -1.1380]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5411, -1.1847, -1.5264, -1.1248]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5459, -1.1970, -1.5191, -1.1297]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5650, -1.2049, -1.4982, -1.1487]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5466, -1.2227, -1.4819, -1.1303]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5269, -1.2289, -1.4726, -1.1107]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5197, -1.2337, -1.4650, -1.1034]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4964, -1.2493, -1.4706, -1.0802]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4671, -1.2531, -1.4910, -1.0508]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4586, -1.2639, -1.5017, -1.0423]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -1.2753, -1.5175, -1.0507]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4807, -1.2835, -1.5261, -1.0645]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.720000. Loss: 2.201317. Time: 2.908690
Validate after epoch 14 with seed 964979
Val Accuracy: 0.690000, Val Loss: 3.494510 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4970, -1.2756, -1.5235, -1.0807]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5069, -1.2679, -1.5139, -1.0906]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5105, -1.2664, -1.5191, -1.0942]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5131, -1.2650, -1.5313, -1.0969]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5099, -1.2672, -1.5361, -1.0936]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4894, -1.2739, -1.5348, -1.0731]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4717, -1.2785, -1.5319, -1.0554]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4735, -1.2843, -1.5248, -1.0572]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4788, -1.2904, -1.5175, -1.0625]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4877, -1.2996, -1.5044, -1.0715]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4867, -1.3016, -1.4867, -1.0704]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4849, -1.3022, -1.4677, -1.0686]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4842, -1.3020, -1.4574, -1.0680]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4825, -1.3080, -1.4597, -1.0663]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4762, -1.3066, -1.4701, -1.0600]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4712, -1.3139, -1.4887, -1.0550]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4613, -1.3361, -1.5162, -1.0450]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4617, -1.3403, -1.5451, -1.0455]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4713, -1.3386, -1.5650, -1.0551]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.760000. Loss: 2.595136. Time: 2.917707
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.750000, Val Loss: 2.755450 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4860, -1.3418, -1.5868, -1.0697]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4841, -1.3298, -1.5960, -1.0678]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4819, -1.3205, -1.6053, -1.0657]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4792, -1.3220, -1.6023, -1.0629]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4776, -1.3325, -1.6002, -1.0613]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4726, -1.3392, -1.6119, -1.0564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4756, -1.3502, -1.5958, -1.0594]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4833, -1.3613, -1.5737, -1.0670]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.3683, -1.5419, -1.0800]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5135, -1.3803, -1.5116, -1.0972]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5339, -1.3930, -1.4881, -1.1177]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5459, -1.4006, -1.4740, -1.1297]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5480, -1.4051, -1.4692, -1.1318]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5415, -1.4115, -1.4721, -1.1253]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5356, -1.4266, -1.4743, -1.1194]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5111, -1.4493, -1.4888, -1.0949]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4907, -1.4700, -1.5041, -1.0744]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4694, -1.4787, -1.5222, -1.0532]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4463, -1.4848, -1.5494, -1.0301]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.760000. Loss: 2.700624. Time: 3.009702
Validate after epoch 16 with seed 840036
Val Accuracy: 0.720000, Val Loss: 2.378911 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4346, -1.4982, -1.5775, -1.0183]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4424, -1.5037, -1.5774, -1.0261]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4509, -1.5098, -1.5740, -1.0347]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4612, -1.5109, -1.5686, -1.0449]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -1.5161, -1.5667, -1.0506]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4702, -1.5254, -1.5496, -1.0540]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4756, -1.5344, -1.5264, -1.0593]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4744, -1.5443, -1.5088, -1.0581]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4796, -1.5487, -1.4940, -1.0633]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4823, -1.5490, -1.4797, -1.0660]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4697, -1.5348, -1.4820, -1.0534]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4586, -1.5210, -1.4852, -1.0423]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4585, -1.5166, -1.4989, -1.0422]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4569, -1.5132, -1.5212, -1.0406]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4600, -1.5039, -1.5426, -1.0437]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4602, -1.4946, -1.5537, -1.0439]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4675, -1.4870, -1.5634, -1.0513]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4815, -1.4899, -1.5829, -1.0652]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4989, -1.4913, -1.6135, -1.0826]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.740000. Loss: 2.719587. Time: 2.986297
Validate after epoch 17 with seed 180463
Val Accuracy: 0.620000, Val Loss: 6.040176 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5346, -1.4780, -1.6114, -1.1183]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5530, -1.4785, -1.5854, -1.1368]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5751, -1.4893, -1.5712, -1.1589]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5738, -1.4868, -1.5552, -1.1576]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5518, -1.4873, -1.5290, -1.1355]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5282, -1.4570, -1.5091, -1.1119]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4851, -1.4228, -1.5048, -1.0688]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4345, -1.4130, -1.5013, -1.0182]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3848, -1.4016, -1.5038, -0.9685]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3613, -1.4174, -1.4982, -0.9451]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3443, -1.4429, -1.5005, -0.9280]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3357, -1.4553, -1.5031, -0.9195]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3239, -1.4685, -1.5060, -0.9077]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3316, -1.4738, -1.5150, -0.9153]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4278, -1.4950, -1.5233, -1.0115]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5194, -1.5181, -1.5220, -1.1031]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5523, -1.5337, -1.5063, -1.1360]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5691, -1.5496, -1.4731, -1.1528]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5834, -1.5589, -1.4391, -1.1671]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.700000. Loss: 3.907459. Time: 2.997765
Validate after epoch 18 with seed 575883
Val Accuracy: 0.600000, Val Loss: 8.672897 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5811, -1.5550, -1.4418, -1.1649]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6119, -1.5701, -1.4543, -1.1957]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5660, -1.5883, -1.4769, -1.1498]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4729, -1.6155, -1.5403, -1.0567]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3679, -1.6317, -1.6240, -0.9516]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3096, -1.6478, -1.6799, -0.8933]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2692, -1.6684, -1.7119, -0.8530]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2761, -1.6758, -1.7177, -0.8598]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2789, -1.6780, -1.7177, -0.8626]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2806, -1.6793, -1.7175, -0.8643]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2896, -1.6748, -1.7122, -0.8734]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3197, -1.6688, -1.6852, -0.9034]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3458, -1.6832, -1.6616, -0.9295]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3515, -1.7224, -1.6422, -0.9353]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3685, -1.7595, -1.6225, -0.9522]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3925, -1.7910, -1.6029, -0.9763]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4395, -1.8229, -1.5770, -1.0232]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4294, -1.8410, -1.5725, -1.0132]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3987, -1.8477, -1.5864, -0.9824]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.710000. Loss: 4.665167. Time: 2.987592
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.700000, Val Loss: 4.425803 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3857, -1.8594, -1.5704, -0.9694]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3915, -1.8517, -1.5708, -0.9753]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4025, -1.8432, -1.5659, -0.9863]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4089, -1.8405, -1.5661, -0.9926]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4112, -1.8321, -1.5716, -0.9950]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4149, -1.8291, -1.5690, -0.9987]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4571, -1.8308, -1.5271, -1.0408]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5096, -1.8420, -1.4833, -1.0934]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5383, -1.8490, -1.4659, -1.1220]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5366, -1.8511, -1.4706, -1.1204]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5217, -1.8509, -1.4873, -1.1055]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5263, -1.8472, -1.5072, -1.1100]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5266, -1.8331, -1.5274, -1.1104]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5356, -1.8243, -1.5422, -1.1194]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5308, -1.8202, -1.5470, -1.1146]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5074, -1.8208, -1.5532, -1.0912]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4921, -1.8182, -1.5578, -1.0758]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4945, -1.8011, -1.5528, -1.0783]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5056, -1.7856, -1.5547, -1.0894]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.805000. Loss: 2.258374. Time: 2.980246
Validate after epoch 20 with seed 822616
Val Accuracy: 0.760000, Val Loss: 4.255606 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5672, -1.7696, -1.5567, -1.1509]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5836, -1.7736, -1.5467, -1.1674]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5851, -1.7806, -1.5519, -1.1688]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5627, -1.7708, -1.5748, -1.1465]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5353, -1.7747, -1.5793, -1.1191]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5201, -1.7764, -1.5891, -1.1039]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5095, -1.7745, -1.5987, -1.0933]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5097, -1.7725, -1.5961, -1.0935]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5143, -1.7679, -1.5870, -1.0981]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5092, -1.7764, -1.5796, -1.0930]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4955, -1.7769, -1.5690, -1.0792]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4905, -1.7889, -1.5750, -1.0743]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4928, -1.7918, -1.5771, -1.0766]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4954, -1.7927, -1.5750, -1.0792]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4933, -1.8006, -1.5582, -1.0770]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4898, -1.8055, -1.5467, -1.0736]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4929, -1.8072, -1.5465, -1.0767]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4998, -1.8068, -1.5539, -1.0836]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5066, -1.8030, -1.5591, -1.0903]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.785000. Loss: 2.404914. Time: 2.988080
Validate after epoch 21 with seed 519531
Val Accuracy: 0.810000, Val Loss: 1.839871 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5176, -1.7908, -1.5528, -1.1014]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5121, -1.7877, -1.5714, -1.0958]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -1.7897, -1.5872, -1.0854]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4927, -1.7862, -1.5921, -1.0764]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4771, -1.8003, -1.5994, -1.0608]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4742, -1.8080, -1.5954, -1.0579]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4820, -1.8170, -1.5799, -1.0657]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4957, -1.8289, -1.5664, -1.0795]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4945, -1.8341, -1.5676, -1.0782]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4857, -1.8586, -1.5760, -1.0694]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4842, -1.8543, -1.5826, -1.0680]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4880, -1.8564, -1.5800, -1.0718]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4992, -1.8577, -1.5651, -1.0829]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5092, -1.8604, -1.5464, -1.0930]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5048, -1.8656, -1.5345, -1.0886]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5136, -1.8598, -1.5218, -1.0974]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5156, -1.8534, -1.5147, -1.0993]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.8638, -1.5165, -1.0800]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4845, -1.8725, -1.5188, -1.0683]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.715000. Loss: 3.112845. Time: 2.993142
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.850000, Val Loss: 2.306704 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4691, -1.8739, -1.5036, -1.0529]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4711, -1.8601, -1.5039, -1.0548]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4787, -1.8595, -1.4961, -1.0624]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4861, -1.8492, -1.4928, -1.0699]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4976, -1.8374, -1.4985, -1.0814]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5135, -1.8276, -1.5082, -1.0972]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5236, -1.8222, -1.5142, -1.1074]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5345, -1.8210, -1.5252, -1.1183]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5313, -1.8193, -1.5352, -1.1151]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5236, -1.8162, -1.5404, -1.1074]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5277, -1.8169, -1.5412, -1.1115]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5230, -1.8119, -1.5350, -1.1067]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5118, -1.8000, -1.5388, -1.0955]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4945, -1.7809, -1.5382, -1.0782]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4735, -1.7718, -1.5328, -1.0572]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4602, -1.7702, -1.5272, -1.0440]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4578, -1.7741, -1.5255, -1.0415]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4544, -1.7880, -1.5171, -1.0381]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4489, -1.7926, -1.5266, -1.0327]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.820000. Loss: 1.959094. Time: 2.989315
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.870000, Val Loss: 1.382141 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4456, -1.8080, -1.5473, -1.0294]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4435, -1.8301, -1.5655, -1.0273]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4537, -1.8599, -1.5757, -1.0374]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4684, -1.8829, -1.5642, -1.0521]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4677, -1.8948, -1.5484, -1.0515]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4686, -1.9020, -1.5392, -1.0523]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4694, -1.9066, -1.5328, -1.0531]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4713, -1.9074, -1.5227, -1.0551]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4714, -1.9011, -1.5115, -1.0551]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4743, -1.8874, -1.5048, -1.0580]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4796, -1.8766, -1.4987, -1.0633]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4901, -1.8769, -1.4937, -1.0738]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5036, -1.8833, -1.5150, -1.0874]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5103, -1.9000, -1.5377, -1.0940]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5109, -1.9139, -1.5422, -1.0947]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5098, -1.9150, -1.5362, -1.0935]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5007, -1.9176, -1.5428, -1.0845]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4867, -1.9212, -1.5596, -1.0705]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4754, -1.9267, -1.5704, -1.0591]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.785000. Loss: 2.542946. Time: 2.986671
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.750000, Val Loss: 3.277690 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4681, -1.9412, -1.5785, -1.0519]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4643, -1.9521, -1.5785, -1.0480]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4731, -1.9506, -1.5728, -1.0569]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4825, -1.9549, -1.5682, -1.0663]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4925, -1.9590, -1.5652, -1.0762]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4852, -1.9598, -1.5735, -1.0690]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4797, -1.9541, -1.5817, -1.0635]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4721, -1.9424, -1.5987, -1.0558]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4674, -1.9302, -1.6103, -1.0512]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4619, -1.9115, -1.6201, -1.0456]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4569, -1.8893, -1.6145, -1.0407]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4515, -1.8853, -1.6119, -1.0352]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4541, -1.9043, -1.5854, -1.0379]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4557, -1.9148, -1.5550, -1.0395]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4548, -1.9274, -1.5216, -1.0385]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4581, -1.9363, -1.4935, -1.0419]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4665, -1.9506, -1.4610, -1.0503]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4764, -1.9494, -1.4420, -1.0602]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4839, -1.9397, -1.4350, -1.0676]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.745000. Loss: 3.046674. Time: 2.989034
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.590000, Val Loss: 4.851591 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4911, -1.9395, -1.4383, -1.0749]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5008, -1.9488, -1.4497, -1.0845]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5092, -1.9502, -1.4553, -1.0929]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5069, -1.9538, -1.4842, -1.0907]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5036, -1.9514, -1.5172, -1.0873]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4987, -1.9388, -1.5461, -1.0824]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4982, -1.9301, -1.5554, -1.0820]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4971, -1.9170, -1.5510, -1.0809]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4946, -1.9101, -1.5600, -1.0783]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4988, -1.9094, -1.5698, -1.0825]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -1.9108, -1.5708, -1.0854]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5023, -1.9097, -1.5745, -1.0861]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5054, -1.9047, -1.5784, -1.0892]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5079, -1.9031, -1.5734, -1.0916]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5037, -1.8967, -1.5698, -1.0874]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5041, -1.8888, -1.5724, -1.0878]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5125, -1.8899, -1.5632, -1.0962]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5216, -1.8953, -1.5515, -1.1054]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5254, -1.8999, -1.5403, -1.1092]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.715000. Loss: 2.621049. Time: 2.987936
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.780000, Val Loss: 3.010078 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4903, -1.9078, -1.5786, -1.0741]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4713, -1.9169, -1.5846, -1.0550]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4592, -1.9220, -1.5769, -1.0429]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4575, -1.9425, -1.5629, -1.0413]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4573, -1.9692, -1.5501, -1.0411]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4633, -1.9868, -1.5391, -1.0470]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4686, -1.9960, -1.5223, -1.0523]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4753, -2.0024, -1.5216, -1.0590]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4810, -2.0035, -1.5374, -1.0648]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4849, -2.0014, -1.5525, -1.0686]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -1.9737, -1.5658, -1.0693]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4895, -1.9599, -1.5683, -1.0732]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4950, -1.9525, -1.5692, -1.0787]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4931, -1.9460, -1.5780, -1.0768]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4902, -1.9371, -1.5831, -1.0739]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4940, -1.9299, -1.5786, -1.0778]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5172, -1.9225, -1.5497, -1.1009]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5282, -1.9103, -1.5153, -1.1119]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5239, -1.8986, -1.4795, -1.1076]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.790000. Loss: 2.645864. Time: 2.928587
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.760000, Val Loss: 3.788365 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5104, -1.8858, -1.4646, -1.0942]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5080, -1.8822, -1.4867, -1.0917]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5046, -1.8764, -1.5156, -1.0883]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5036, -1.8747, -1.5514, -1.0873]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4994, -1.8643, -1.5824, -1.0831]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4946, -1.8448, -1.6137, -1.0784]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4793, -1.8207, -1.6160, -1.0631]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4569, -1.8053, -1.5908, -1.0407]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4461, -1.8009, -1.5616, -1.0298]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4434, -1.7811, -1.5361, -1.0271]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4496, -1.7728, -1.5048, -1.0334]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4553, -1.7601, -1.4635, -1.0390]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4552, -1.7448, -1.4411, -1.0390]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4587, -1.7329, -1.4400, -1.0424]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -1.7252, -1.4423, -1.0507]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4807, -1.7081, -1.4552, -1.0645]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4862, -1.6883, -1.5040, -1.0699]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4972, -1.6795, -1.5646, -1.0809]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4976, -1.6754, -1.6092, -1.0813]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.695000. Loss: 4.818680. Time: 2.924284
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.670000, Val Loss: 5.365772 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4920, -1.6942, -1.6795, -1.0757]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4880, -1.6916, -1.6949, -1.0717]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4838, -1.6902, -1.6968, -1.0675]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4819, -1.6909, -1.7123, -1.0656]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4710, -1.7041, -1.7029, -1.0548]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4618, -1.7060, -1.6754, -1.0455]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4580, -1.7202, -1.5925, -1.0418]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4577, -1.7341, -1.4923, -1.0415]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4647, -1.7633, -1.4270, -1.0484]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4771, -1.7691, -1.3947, -1.0608]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4805, -1.7705, -1.3874, -1.0643]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4882, -1.7747, -1.3948, -1.0720]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5087, -1.7757, -1.4121, -1.0924]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5254, -1.7803, -1.4163, -1.1092]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5290, -1.7855, -1.4231, -1.1128]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5162, -1.7826, -1.4461, -1.0999]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5044, -1.7737, -1.4811, -1.0882]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4954, -1.7708, -1.5162, -1.0791]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5072, -1.7538, -1.5268, -1.0909]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.735000. Loss: 3.660985. Time: 2.944473
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.780000, Val Loss: 3.177406 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5295, -1.7019, -1.5016, -1.1132]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5343, -1.6995, -1.4833, -1.1181]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5276, -1.7091, -1.4938, -1.1114]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5136, -1.7215, -1.5076, -1.0973]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4921, -1.7520, -1.4859, -1.0759]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4683, -1.7617, -1.4718, -1.0521]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4423, -1.7663, -1.4791, -1.0260]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4255, -1.7805, -1.5271, -1.0092]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4139, -1.7831, -1.5599, -0.9976]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4118, -1.7833, -1.5923, -0.9955]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4134, -1.8007, -1.6300, -0.9971]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4510, -1.8284, -1.6241, -1.0347]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5004, -1.8387, -1.5893, -1.0842]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5343, -1.8439, -1.5593, -1.1181]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5648, -1.8459, -1.5286, -1.1486]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5958, -1.8459, -1.5006, -1.1796]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6103, -1.8268, -1.4870, -1.1940]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6029, -1.8021, -1.4903, -1.1866]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5821, -1.7734, -1.4879, -1.1659]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.660000. Loss: 4.253445. Time: 2.938001
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.860000, Val Loss: 1.884142 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5771, -1.7665, -1.4885, -1.1609]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5527, -1.7587, -1.4977, -1.1364]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5158, -1.7649, -1.5164, -1.0996]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4992, -1.7736, -1.5197, -1.0830]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4851, -1.7882, -1.5256, -1.0689]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4807, -1.8017, -1.5275, -1.0644]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4888, -1.8015, -1.5196, -1.0725]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4947, -1.8035, -1.5167, -1.0784]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4797, -1.7880, -1.5399, -1.0634]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4700, -1.7697, -1.5627, -1.0537]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4779, -1.7570, -1.5652, -1.0617]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -1.7485, -1.5569, -1.0694]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4928, -1.7462, -1.5461, -1.0766]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4985, -1.7457, -1.5386, -1.0823]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5084, -1.7557, -1.5358, -1.0922]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5184, -1.7619, -1.5347, -1.1021]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5403, -1.7574, -1.5219, -1.1240]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5445, -1.7547, -1.5161, -1.1282]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5277, -1.7554, -1.5230, -1.1115]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.790000. Loss: 2.674870. Time: 2.907096
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.750000, Val Loss: 2.065216 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4965, -1.7324, -1.5480, -1.0803]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4772, -1.7251, -1.5671, -1.0609]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4624, -1.7208, -1.6008, -1.0461]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4548, -1.7177, -1.6227, -1.0386]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4486, -1.7131, -1.6327, -1.0323]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4436, -1.7041, -1.6327, -1.0274]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4445, -1.7003, -1.6211, -1.0282]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4472, -1.6973, -1.6153, -1.0310]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4622, -1.6939, -1.5975, -1.0460]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4748, -1.6971, -1.5852, -1.0585]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4823, -1.6956, -1.5890, -1.0660]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4884, -1.7118, -1.5924, -1.0722]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4988, -1.7281, -1.5703, -1.0826]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5161, -1.7530, -1.5465, -1.0999]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5260, -1.7705, -1.5368, -1.1098]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5278, -1.7804, -1.5363, -1.1115]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5184, -1.7877, -1.5200, -1.1022]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4996, -1.7894, -1.4998, -1.0834]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4811, -1.7965, -1.4856, -1.0649]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.755000. Loss: 2.876410. Time: 2.960191
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.770000, Val Loss: 2.909363 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4438, -1.7965, -1.4773, -1.0275]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4355, -1.7976, -1.4865, -1.0193]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4441, -1.7976, -1.4788, -1.0278]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4486, -1.7924, -1.4835, -1.0323]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4489, -1.7921, -1.4932, -1.0326]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4438, -1.7978, -1.5106, -1.0276]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4538, -1.8162, -1.5278, -1.0375]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4655, -1.8227, -1.5449, -1.0493]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4861, -1.8404, -1.5489, -1.0699]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4913, -1.8474, -1.5595, -1.0750]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4880, -1.8480, -1.5671, -1.0718]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4824, -1.8468, -1.5798, -1.0661]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4818, -1.8385, -1.5770, -1.0655]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4955, -1.8483, -1.5560, -1.0793]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4934, -1.8533, -1.5442, -1.0772]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5046, -1.8510, -1.5245, -1.0883]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5112, -1.8483, -1.5044, -1.0949]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5197, -1.8387, -1.4834, -1.1034]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5098, -1.8239, -1.4820, -1.0935]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.745000. Loss: 3.252338. Time: 2.929381
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.800000, Val Loss: 2.270704 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4737, -1.8164, -1.4982, -1.0575]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4618, -1.8101, -1.5034, -1.0456]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4470, -1.8059, -1.5109, -1.0308]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4416, -1.8106, -1.5174, -1.0254]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4531, -1.8164, -1.5129, -1.0368]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4781, -1.8291, -1.4821, -1.0619]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4875, -1.8280, -1.4773, -1.0712]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4876, -1.8178, -1.4870, -1.0713]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4858, -1.8156, -1.4933, -1.0695]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4869, -1.8201, -1.4953, -1.0707]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4888, -1.8257, -1.4960, -1.0725]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4961, -1.8278, -1.4976, -1.0799]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4993, -1.8392, -1.5014, -1.0830]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4910, -1.8497, -1.5207, -1.0748]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4933, -1.8701, -1.5409, -1.0771]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.8817, -1.5497, -1.0800]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5050, -1.8846, -1.5585, -1.0888]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5112, -1.8767, -1.5695, -1.0949]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5229, -1.8618, -1.5778, -1.1066]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.795000. Loss: 2.406179. Time: 2.934503
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.830000, Val Loss: 2.443611 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5210, -1.8784, -1.6080, -1.1048]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5168, -1.8923, -1.6240, -1.1005]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5210, -1.8968, -1.6279, -1.1048]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5180, -1.9082, -1.6330, -1.1017]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5193, -1.9090, -1.6256, -1.1030]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5161, -1.9188, -1.6083, -1.0999]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5151, -1.9264, -1.5805, -1.0988]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5105, -1.9311, -1.5613, -1.0943]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4991, -1.9444, -1.5454, -1.0828]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4860, -1.9406, -1.5323, -1.0698]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4587, -1.9407, -1.5205, -1.0424]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4316, -1.9502, -1.5204, -1.0153]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4303, -1.9633, -1.5265, -1.0140]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4414, -1.9721, -1.5242, -1.0251]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4591, -1.9719, -1.5319, -1.0428]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4708, -1.9672, -1.5429, -1.0546]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4818, -1.9714, -1.5448, -1.0656]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4846, -1.9748, -1.5422, -1.0683]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4829, -1.9716, -1.5372, -1.0667]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.785000. Loss: 3.696892. Time: 2.928452
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.870000, Val Loss: 1.463468 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4852, -1.9806, -1.5452, -1.0689]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -1.9871, -1.5529, -1.0694]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4885, -2.0020, -1.5676, -1.0723]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4930, -2.0134, -1.5707, -1.0768]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5003, -2.0357, -1.5697, -1.0841]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5044, -2.0530, -1.5668, -1.0881]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4853, -2.0691, -1.5698, -1.0691]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4664, -2.0817, -1.5739, -1.0502]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4493, -2.0894, -1.5700, -1.0331]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4359, -2.0911, -1.5633, -1.0196]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4271, -2.0929, -1.5628, -1.0109]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4271, -2.0981, -1.5723, -1.0109]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4297, -2.1035, -1.5816, -1.0134]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4331, -2.1050, -1.5847, -1.0168]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4406, -2.0998, -1.5763, -1.0244]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4473, -2.0945, -1.5719, -1.0310]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4578, -2.0906, -1.5726, -1.0416]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4691, -2.0960, -1.5737, -1.0528]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4750, -2.1079, -1.5741, -1.0587]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.825000. Loss: 2.509218. Time: 2.903164
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.810000, Val Loss: 2.496376 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4844, -2.1234, -1.5853, -1.0682]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4887, -2.1312, -1.5896, -1.0725]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5044, -2.1243, -1.5917, -1.0881]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5161, -2.1205, -1.5876, -1.0998]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5222, -2.1164, -1.5808, -1.1060]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5212, -2.1228, -1.5763, -1.1049]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5158, -2.1418, -1.5719, -1.0996]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5182, -2.1543, -1.5628, -1.1020]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5213, -2.1549, -1.5454, -1.1051]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5170, -2.1361, -1.5167, -1.1008]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5152, -2.1245, -1.4977, -1.0989]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5137, -2.1173, -1.4891, -1.0974]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5162, -2.1131, -1.4900, -1.1000]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5216, -2.1064, -1.4948, -1.1053]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5266, -2.0977, -1.4990, -1.1103]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5233, -2.1022, -1.5082, -1.1070]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5181, -2.1126, -1.5151, -1.1018]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5132, -2.1252, -1.5203, -1.0969]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5063, -2.1397, -1.5274, -1.0901]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.800000. Loss: 2.417912. Time: 2.917754
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.780000, Val Loss: 2.706173 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4848, -2.1491, -1.5344, -1.0686]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4738, -2.1451, -1.5474, -1.0575]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4664, -2.1430, -1.5496, -1.0502]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4609, -2.1427, -1.5706, -1.0447]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4582, -2.1401, -1.5888, -1.0419]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4567, -2.1489, -1.6027, -1.0404]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4539, -2.1543, -1.5983, -1.0376]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4655, -2.1551, -1.5859, -1.0492]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4738, -2.1571, -1.5906, -1.0575]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4780, -2.1586, -1.5911, -1.0617]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4915, -2.1568, -1.5864, -1.0753]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5026, -2.1515, -1.5758, -1.0863]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5099, -2.1512, -1.5674, -1.0937]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5143, -2.1510, -1.5625, -1.0980]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5167, -2.1515, -1.5589, -1.1004]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5181, -2.1519, -1.5567, -1.1018]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5191, -2.1521, -1.5553, -1.1028]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5249, -2.1637, -1.5567, -1.1086]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5300, -2.1671, -1.5464, -1.1138]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.860000. Loss: 2.340010. Time: 2.924341
Validate after epoch 38 with seed 297566
Val Accuracy: 0.780000, Val Loss: 2.357421 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5303, -2.1566, -1.5310, -1.1141]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5086, -2.1381, -1.5449, -1.0924]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4863, -2.1321, -1.5623, -1.0700]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4782, -2.1231, -1.5751, -1.0620]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4757, -2.1184, -1.5813, -1.0595]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4799, -2.1281, -1.5908, -1.0637]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4784, -2.1319, -1.5907, -1.0622]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4767, -2.1263, -1.5818, -1.0605]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4815, -2.1241, -1.5690, -1.0652]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4974, -2.1243, -1.5532, -1.0812]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4979, -2.1239, -1.5465, -1.0817]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5009, -2.1289, -1.5326, -1.0847]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5062, -2.1276, -1.5213, -1.0899]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5163, -2.1171, -1.5091, -1.1001]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5206, -2.1133, -1.4948, -1.1044]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5166, -2.0988, -1.4876, -1.1003]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5107, -2.0870, -1.4947, -1.0945]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5027, -2.0895, -1.5077, -1.0865]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4919, -2.0926, -1.5285, -1.0757]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.745000. Loss: 4.557510. Time: 2.909753
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.770000, Val Loss: 3.688927 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4742, -2.0788, -1.5634, -1.0580]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4582, -2.0703, -1.5813, -1.0420]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4461, -2.0579, -1.5916, -1.0299]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4408, -2.0543, -1.5984, -1.0245]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4422, -2.0535, -1.6067, -1.0259]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4495, -2.0548, -1.6078, -1.0333]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4547, -2.0516, -1.6061, -1.0385]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4553, -2.0383, -1.6030, -1.0391]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4571, -2.0147, -1.5944, -1.0409]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4624, -2.0034, -1.5847, -1.0462]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4634, -2.0057, -1.5910, -1.0472]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4864, -2.0156, -1.5851, -1.0701]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5045, -2.0215, -1.5792, -1.0882]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5127, -2.0252, -1.5786, -1.0964]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5235, -2.0341, -1.5713, -1.1073]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5316, -2.0390, -1.5669, -1.1154]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5307, -2.0472, -1.5628, -1.1145]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5276, -2.0492, -1.5594, -1.1113]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5206, -2.0406, -1.5577, -1.1043]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.805000. Loss: 2.429146. Time: 2.889199
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.720000, Val Loss: 4.844719 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4905, -2.0257, -1.5620, -1.0742]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4772, -2.0209, -1.5563, -1.0610]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4730, -2.0168, -1.5471, -1.0567]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4593, -2.0214, -1.5370, -1.0431]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4470, -2.0209, -1.5375, -1.0307]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4669, -2.0168, -1.5189, -1.0507]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4984, -2.0249, -1.5171, -1.0822]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5315, -2.0549, -1.5283, -1.1153]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5532, -2.0672, -1.5315, -1.1370]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5613, -2.0648, -1.5236, -1.1451]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5713, -2.0484, -1.5102, -1.1551]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5329, -2.0329, -1.5208, -1.1166]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4912, -2.0213, -1.5478, -1.0749]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4627, -2.0132, -1.5686, -1.0465]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4376, -1.9929, -1.5779, -1.0213]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4202, -1.9807, -1.5879, -1.0040]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4126, -1.9719, -1.5914, -0.9964]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4178, -1.9736, -1.5988, -1.0016]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4312, -1.9704, -1.6029, -1.0150]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.725000. Loss: 4.080306. Time: 2.916696
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.790000, Val Loss: 3.116496 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4588, -1.9646, -1.6218, -1.0426]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5014, -1.9732, -1.6182, -1.0851]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5349, -1.9826, -1.6170, -1.1186]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5528, -1.9911, -1.6224, -1.1366]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5549, -2.0017, -1.6254, -1.1386]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5463, -2.0084, -1.6205, -1.1301]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5441, -2.0128, -1.6080, -1.1278]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5346, -2.0065, -1.5840, -1.1183]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5328, -2.0000, -1.5688, -1.1166]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5434, -2.0053, -1.5358, -1.1271]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5439, -2.0112, -1.5155, -1.1276]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5286, -2.0157, -1.5028, -1.1123]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4900, -2.0213, -1.5101, -1.0737]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4535, -2.0242, -1.5180, -1.0373]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4190, -2.0140, -1.5257, -1.0027]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3898, -1.9977, -1.5402, -0.9736]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3720, -1.9856, -1.5481, -0.9557]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3676, -1.9804, -1.5545, -0.9513]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3765, -1.9862, -1.5588, -0.9603]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.720000. Loss: 3.674125. Time: 2.923798
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.690000, Val Loss: 4.539394 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4238, -2.0081, -1.5693, -1.0076]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4654, -2.0204, -1.5708, -1.0492]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5059, -2.0332, -1.5666, -1.0896]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5129, -2.0524, -1.5695, -1.0966]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5124, -2.0832, -1.5448, -1.0961]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5099, -2.1110, -1.5306, -1.0936]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5124, -2.1276, -1.5236, -1.0961]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5035, -2.1323, -1.5271, -1.0872]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4997, -2.1340, -1.5302, -1.0834]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4932, -2.1351, -1.5339, -1.0770]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4886, -2.1343, -1.5368, -1.0724]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4863, -2.1288, -1.5394, -1.0700]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4907, -2.1274, -1.5511, -1.0745]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5001, -2.1329, -1.5368, -1.0839]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5035, -2.1377, -1.5285, -1.0873]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4992, -2.1397, -1.5370, -1.0830]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4921, -2.1392, -1.5438, -1.0759]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4830, -2.1391, -1.5469, -1.0667]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4783, -2.1353, -1.5300, -1.0620]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.805000. Loss: 2.840873. Time: 2.934947
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.810000, Val Loss: 2.571994 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4656, -2.1534, -1.5269, -1.0493]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4529, -2.1549, -1.5517, -1.0366]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4490, -2.1568, -1.5704, -1.0328]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4467, -2.1509, -1.5865, -1.0304]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4573, -2.1251, -1.5878, -1.0410]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4699, -2.0942, -1.5854, -1.0537]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4734, -2.0701, -1.5780, -1.0572]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4707, -2.0584, -1.5668, -1.0544]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4679, -2.0529, -1.5546, -1.0517]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4733, -2.0523, -1.5438, -1.0571]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4823, -2.0418, -1.5494, -1.0660]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4920, -2.0353, -1.5547, -1.0757]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -2.0336, -1.5588, -1.0854]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5204, -2.0173, -1.5494, -1.1042]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5298, -2.0121, -1.5419, -1.1135]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5258, -2.0145, -1.5436, -1.1096]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5332, -2.0164, -1.5267, -1.1170]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5426, -2.0258, -1.5217, -1.1264]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5527, -2.0265, -1.5129, -1.1365]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.735000. Loss: 3.993223. Time: 2.931892
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.680000, Val Loss: 5.540463 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5111, -2.0335, -1.5649, -1.0948]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4925, -2.0482, -1.5856, -1.0763]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4756, -2.0565, -1.6077, -1.0593]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4586, -2.0655, -1.6226, -1.0423]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4423, -2.0734, -1.6421, -1.0260]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4357, -2.0824, -1.6527, -1.0194]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4309, -2.0902, -1.6555, -1.0146]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4281, -2.0898, -1.6558, -1.0118]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4468, -2.0901, -1.6321, -1.0306]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4819, -2.0907, -1.5911, -1.0656]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5130, -2.0951, -1.5563, -1.0967]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5321, -2.0920, -1.5125, -1.1158]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5546, -2.0857, -1.4516, -1.1383]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5618, -2.0651, -1.4047, -1.1455]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5446, -2.0559, -1.3958, -1.1283]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5217, -2.0381, -1.4131, -1.1055]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4863, -2.0116, -1.4689, -1.0700]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4695, -1.9899, -1.5063, -1.0533]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4676, -1.9971, -1.5409, -1.0514]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.745000. Loss: 3.808880. Time: 2.919842
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.760000, Val Loss: 3.391808 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4575, -2.0344, -1.6158, -1.0413]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4508, -2.0313, -1.6307, -1.0346]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4437, -2.0044, -1.6088, -1.0275]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4264, -1.9735, -1.6031, -1.0102]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4227, -1.9622, -1.6107, -1.0064]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4285, -1.9581, -1.6087, -1.0123]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4452, -1.9447, -1.5891, -1.0289]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4729, -1.9206, -1.5580, -1.0566]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4849, -1.8938, -1.5535, -1.0687]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4859, -1.8759, -1.5580, -1.0697]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4870, -1.8602, -1.5482, -1.0708]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4708, -1.8509, -1.5604, -1.0545]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4590, -1.8405, -1.5731, -1.0428]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4483, -1.8395, -1.5892, -1.0321]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4482, -1.8515, -1.5909, -1.0319]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4745, -1.8625, -1.5788, -1.0582]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4867, -1.8741, -1.5821, -1.0705]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5049, -1.8829, -1.5731, -1.0886]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5276, -1.8832, -1.5556, -1.1114]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.805000. Loss: 2.228056. Time: 2.950316
Validate after epoch 46 with seed 91566
Val Accuracy: 0.820000, Val Loss: 2.146307 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5553, -1.9032, -1.5126, -1.1390]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5565, -1.9061, -1.5230, -1.1402]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5631, -1.9065, -1.5266, -1.1468]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5669, -1.9067, -1.5288, -1.1507]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5600, -1.9147, -1.5357, -1.1437]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5611, -1.9386, -1.5311, -1.1448]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5610, -1.9530, -1.5278, -1.1448]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5387, -1.9615, -1.5359, -1.1225]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5231, -1.9827, -1.5438, -1.1068]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5010, -2.0033, -1.5618, -1.0848]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4607, -2.0229, -1.5926, -1.0444]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4254, -2.0293, -1.6330, -1.0091]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4067, -2.0295, -1.6631, -0.9905]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4102, -2.0296, -1.6640, -0.9940]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4207, -2.0342, -1.6343, -1.0045]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4242, -2.0448, -1.6142, -1.0080]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4339, -2.0305, -1.5815, -1.0177]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4555, -2.0029, -1.5380, -1.0392]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4736, -1.9872, -1.5143, -1.0573]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.815000. Loss: 3.147787. Time: 2.936001
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.790000, Val Loss: 3.957165 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5054, -1.9441, -1.4918, -1.0892]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5229, -1.9411, -1.4878, -1.1067]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5370, -1.9439, -1.4769, -1.1208]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5452, -1.9441, -1.4725, -1.1290]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5493, -1.9424, -1.4726, -1.1331]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5409, -1.9592, -1.4885, -1.1246]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5366, -1.9677, -1.5007, -1.1204]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5101, -1.9807, -1.5394, -1.0939]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4778, -1.9936, -1.5749, -1.0616]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4672, -1.9954, -1.5728, -1.0509]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4690, -1.9861, -1.5580, -1.0528]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4685, -1.9616, -1.5509, -1.0522]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4596, -1.9419, -1.5551, -1.0433]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4564, -1.9240, -1.5615, -1.0401]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4572, -1.9137, -1.5631, -1.0409]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4581, -1.9094, -1.5593, -1.0419]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4625, -1.9158, -1.5503, -1.0463]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4673, -1.9245, -1.5377, -1.0511]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4724, -1.9306, -1.5303, -1.0561]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.780000. Loss: 3.443974. Time: 2.960479
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.820000, Val Loss: 2.715301 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4662, -1.9192, -1.5459, -1.0499]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4686, -1.9159, -1.5433, -1.0524]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4811, -1.9182, -1.5412, -1.0649]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4969, -1.9222, -1.5342, -1.0806]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5088, -1.9175, -1.5284, -1.0926]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -1.9065, -1.5477, -1.0800]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4787, -1.9076, -1.5640, -1.0625]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4495, -1.9105, -1.5805, -1.0332]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4414, -1.9123, -1.5877, -1.0252]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4550, -1.9043, -1.5828, -1.0387]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4672, -1.8939, -1.5779, -1.0510]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4729, -1.8970, -1.5785, -1.0566]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4783, -1.8945, -1.5776, -1.0620]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4891, -1.8810, -1.5630, -1.0728]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4985, -1.8812, -1.5553, -1.0822]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5091, -1.8864, -1.5530, -1.0928]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5132, -1.9073, -1.5502, -1.0969]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5213, -1.9273, -1.5459, -1.1050]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5205, -1.9418, -1.5406, -1.1042]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.800000. Loss: 2.445098. Time: 2.933216
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.800000, Val Loss: 3.814771 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4962, -1.9453, -1.5411, -1.0799]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4909, -1.9358, -1.5418, -1.0747]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4802, -1.9280, -1.5568, -1.0639]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4681, -1.9100, -1.5671, -1.0519]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4627, -1.8950, -1.5750, -1.0464]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4597, -1.8850, -1.5793, -1.0434]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4657, -1.8760, -1.5692, -1.0495]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4718, -1.8707, -1.5600, -1.0555]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4949, -1.8644, -1.5476, -1.0787]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5148, -1.8483, -1.5416, -1.0985]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5266, -1.8345, -1.5382, -1.1104]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5363, -1.8177, -1.5302, -1.1201]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5441, -1.8013, -1.5183, -1.1278]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5527, -1.7904, -1.5073, -1.1364]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5626, -1.7889, -1.5008, -1.1463]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5669, -1.7879, -1.5129, -1.1506]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5605, -1.7697, -1.5221, -1.1443]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5376, -1.7513, -1.5409, -1.1213]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5146, -1.7257, -1.5702, -1.0984]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.800000. Loss: 3.694707. Time: 2.916975
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.770000, Val Loss: 3.967392 
Training Execution time: 05:36:44.00
Conducting Test
Test Accuracy: 0.812000, Test Loss: 2.824007 

Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Loading MNIST tensors from ./mnist/preload_tensors_saved_img_size-14
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 0, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_0_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0157, -0.9323, -0.2153, -0.5994]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0292, -0.9729, -0.1742, -0.5546]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0766, -1.0160, -0.1294, -0.5072]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1206, -1.0526, -0.0899, -0.4637]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1630, -1.0823, -0.0541, -0.4215]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1986, -1.1035, -0.0255, -0.3865]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2261, -1.1175, -0.0054, -0.3594]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2389, -1.1262,  0.0043, -0.3449]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2523, -1.1318,  0.0063, -0.3279]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2694, -1.1351,  0.0102, -0.3082]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2805, -1.1371,  0.0136, -0.2953]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2874, -1.1390,  0.0106, -0.2870]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2902, -1.1403,  0.0075, -0.2802]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2933, -1.1409,  0.0090, -0.2753]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2896, -1.1412,  0.0101, -0.2785]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2880, -1.1416,  0.0089, -0.2794]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2951, -1.1419,  0.0075, -0.2720]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3022, -1.1422,  0.0049, -0.2633]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2997, -1.1426, -0.0021, -0.2653]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.360000. Loss: 2.461704. Time: 3.045786
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.540000, Val Loss: 1.678907 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2942, -1.1435, -0.0089, -0.2740]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2984, -1.1444, -0.0022, -0.2694]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3021, -1.1450,  0.0022, -0.2639]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3008, -1.1454,  0.0024, -0.2631]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3016, -1.1456,  0.0052, -0.2606]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3054, -1.1459,  0.0056, -0.2604]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.0345e-01, -1.1464e+00, -7.6345e-04, -2.6199e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3044, -1.1468, -0.0068, -0.2620]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3115, -1.1473, -0.0061, -0.2624]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3170, -1.1477, -0.0045, -0.2616]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3192, -1.1479, -0.0058, -0.2631]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.2438e-01, -1.1483e+00, -4.9290e-04, -2.6444e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3214, -1.1486,  0.0024, -0.2694]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3221, -1.1490,  0.0014, -0.2692]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.2602e-01, -1.1492e+00,  1.1802e-04, -2.6502e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3181, -1.1493, -0.0022, -0.2732]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3089, -1.1493, -0.0046, -0.2830]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3051, -1.1493, -0.0081, -0.2898]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3099, -1.1496, -0.0060, -0.2898]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.585000. Loss: 1.286270. Time: 3.010243
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.680000, Val Loss: 0.913716 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.1953e-01, -1.1501e+00, -1.6449e-05, -2.9263e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.2844e-01, -1.1503e+00, -2.3822e-04, -2.8884e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3423, -1.1503, -0.0024, -0.2800]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3510, -1.1504, -0.0057, -0.2771]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3546, -1.1503, -0.0085, -0.2796]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3545, -1.1507, -0.0046, -0.2847]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3510, -1.1512,  0.0025, -0.2884]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3450, -1.1515,  0.0086, -0.2950]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3414, -1.1514,  0.0144, -0.3020]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3411, -1.1521,  0.0137, -0.3071]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3486, -1.1537,  0.0052, -0.3071]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.5204e-01, -1.1547e+00, -1.4144e-05, -3.1087e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3554, -1.1551, -0.0097, -0.3169]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3574, -1.1551, -0.0195, -0.3227]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3627, -1.1553, -0.0246, -0.3251]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3673, -1.1559, -0.0260, -0.3258]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3746, -1.1570, -0.0237, -0.3226]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3833, -1.1584, -0.0195, -0.3206]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3886, -1.1595, -0.0156, -0.3205]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.665000. Loss: 1.038096. Time: 2.987438
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.700000, Val Loss: 1.134238 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2013e-01, -1.1621e+00, -1.0650e-03, -3.0159e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4053, -1.1629,  0.0057, -0.3155]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3909, -1.1630,  0.0152, -0.3306]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3752, -1.1634,  0.0193, -0.3444]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3692, -1.1640,  0.0207, -0.3458]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3630, -1.1664,  0.0116, -0.3453]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3553, -1.1679,  0.0061, -0.3502]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.4961e-01, -1.1691e+00, -6.4398e-04, -3.5600e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3506, -1.1698, -0.0037, -0.3557]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3599, -1.1703, -0.0047, -0.3510]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3577, -1.1704, -0.0090, -0.3629]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3711, -1.1704, -0.0124, -0.3554]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3831, -1.1704, -0.0144, -0.3423]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3996, -1.1716, -0.0072, -0.3254]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4188, -1.1730,  0.0072, -0.3079]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4287, -1.1739,  0.0194, -0.2950]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4091, -1.1751,  0.0234, -0.3173]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3956, -1.1768,  0.0223, -0.3340]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3992, -1.1795,  0.0144, -0.3333]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.640000. Loss: 1.108916. Time: 3.004251
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.660000, Val Loss: 1.297730 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3703, -1.1829,  0.0023, -0.3513]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3592, -1.1838, -0.0043, -0.3562]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3373, -1.1841, -0.0113, -0.3736]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3249, -1.1845, -0.0145, -0.3849]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3132, -1.1847, -0.0162, -0.3949]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3192, -1.1853, -0.0146, -0.3900]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3351, -1.1861, -0.0112, -0.3750]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3543, -1.1867, -0.0084, -0.3585]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3569, -1.1872, -0.0059, -0.3655]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3676, -1.1876, -0.0024, -0.3614]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3996, -1.1879,  0.0055, -0.3328]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4242, -1.1882,  0.0127, -0.3020]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4260, -1.1885,  0.0153, -0.2931]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3976, -1.1899,  0.0100, -0.3147]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3811, -1.1910,  0.0056, -0.3282]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3676, -1.1916,  0.0017, -0.3399]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3485, -1.1923, -0.0022, -0.3532]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3369, -1.1926, -0.0075, -0.3663]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3339, -1.1926, -0.0121, -0.3723]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.695000. Loss: 1.053878. Time: 3.002197
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.730000, Val Loss: 0.856605 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3461, -1.1935, -0.0174, -0.3649]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3629, -1.1967, -0.0060, -0.3539]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.7223e-01, -1.1986e+00, -7.4025e-04, -3.5392e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3943, -1.1997,  0.0062, -0.3408]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4141, -1.2001,  0.0134, -0.3257]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4191, -1.2006,  0.0164, -0.3216]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4186, -1.2016,  0.0148, -0.3220]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4070, -1.2029,  0.0101, -0.3323]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3925, -1.2040,  0.0049, -0.3468]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3995, -1.2043,  0.0071, -0.3404]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3995, -1.2045,  0.0094, -0.3423]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4066, -1.2053,  0.0050, -0.3370]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4065, -1.2060, -0.0019, -0.3435]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4008, -1.2066, -0.0054, -0.3516]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3915, -1.2068, -0.0085, -0.3617]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3848, -1.2066, -0.0136, -0.3702]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3878, -1.2069, -0.0143, -0.3659]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3799, -1.2080, -0.0094, -0.3655]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3705, -1.2091, -0.0034, -0.3699]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.735000. Loss: 0.911314. Time: 3.013537
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.740000, Val Loss: 0.966654 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3679, -1.2100,  0.0164, -0.3778]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3787, -1.2085,  0.0298, -0.3756]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3847, -1.2038,  0.0478, -0.3666]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3940, -1.2103,  0.0434, -0.3524]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4074, -1.2256,  0.0198, -0.3333]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4115, -1.2386, -0.0096, -0.3309]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3975, -1.2450, -0.0363, -0.3416]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3880, -1.2468, -0.0572, -0.3509]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3815, -1.2491, -0.0689, -0.3578]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3916, -1.2742, -0.0520, -0.3499]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3976, -1.2929, -0.0380, -0.3468]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3943, -1.3106, -0.0191, -0.3518]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3911, -1.3241,  0.0017, -0.3570]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3938, -1.3331,  0.0172, -0.3566]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3960, -1.3388,  0.0256, -0.3511]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3966, -1.3454,  0.0247, -0.3455]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3941, -1.3526,  0.0186, -0.3497]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3927, -1.3559,  0.0174, -0.3525]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3909, -1.3577,  0.0171, -0.3537]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.725000. Loss: 0.799956. Time: 3.018575
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.860000, Val Loss: 0.616919 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3894, -1.3513,  0.0342, -0.3488]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3988, -1.3606,  0.0263, -0.3431]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3999, -1.3710,  0.0138, -0.3453]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3917, -1.3790,  0.0023, -0.3562]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3835, -1.3843, -0.0060, -0.3612]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.8472e-01, -1.3892e+00,  3.4911e-04, -3.5240e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3848, -1.3923,  0.0047, -0.3477]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3844, -1.3940,  0.0080, -0.3503]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3819, -1.3965,  0.0048, -0.3603]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3807, -1.3993, -0.0028, -0.3657]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.8187e-01, -1.4016e+00,  9.1492e-04, -3.6237e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3871, -1.4030,  0.0033, -0.3563]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4064, -1.4039,  0.0034, -0.3470]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4186, -1.4042,  0.0059, -0.3421]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4157, -1.4048,  0.0057, -0.3498]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.0114e-01, -1.4061e+00,  9.4903e-04, -3.6290e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3892, -1.4071, -0.0022, -0.3696]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3778, -1.4081,  0.0030, -0.3688]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.7214e-01, -1.4093e+00,  1.1280e-03, -3.6597e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.695000. Loss: 0.977743. Time: 3.013857
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.810000, Val Loss: 0.473571 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3685, -1.4105,  0.0035, -0.3614]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3685, -1.4108,  0.0040, -0.3601]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3693, -1.4109,  0.0044, -0.3573]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3720, -1.4111,  0.0042, -0.3547]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3737, -1.4112,  0.0048, -0.3533]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3799, -1.4113,  0.0045, -0.3487]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3778, -1.4107,  0.0086, -0.3461]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3631, -1.4127,  0.0036, -0.3553]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.4848e-01, -1.4140e+00,  1.1598e-03, -3.6135e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.5561e-01, -1.4148e+00, -1.0002e-04, -3.7149e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3532, -1.4153,  0.0025, -0.3847]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3437, -1.4159,  0.0018, -0.3853]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3668, -1.4168, -0.0018, -0.3634]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3963, -1.4173, -0.0035, -0.3386]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4189, -1.4176, -0.0046, -0.3234]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4298, -1.4178, -0.0052, -0.3086]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4394, -1.4183, -0.0036, -0.2959]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3845e-01, -1.4191e+00,  1.1335e-03, -2.9439e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3383e-01, -1.4198e+00, -2.2554e-04, -2.9835e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.740000. Loss: 0.789952. Time: 3.005860
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.750000, Val Loss: 0.745365 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3971, -1.4209, -0.0036, -0.3257]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3875, -1.4210, -0.0057, -0.3364]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3872, -1.4211, -0.0071, -0.3424]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3799, -1.4225, -0.0019, -0.3505]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3930, -1.4237,  0.0050, -0.3473]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4028, -1.4248,  0.0076, -0.3458]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4055, -1.4244,  0.0125, -0.3477]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3947, -1.4246,  0.0150, -0.3587]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3777, -1.4257,  0.0146, -0.3753]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3525, -1.4283,  0.0110, -0.3997]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3398, -1.4307,  0.0064, -0.4214]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3503, -1.4336, -0.0023, -0.4235]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3672, -1.4356, -0.0085, -0.4184]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4034, -1.4395, -0.0039, -0.3874]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3556e-01, -1.4425e+00,  4.5678e-04, -3.5685e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4528, -1.4443,  0.0020, -0.3429]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4636, -1.4455,  0.0016, -0.3303]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6764e-01, -1.4464e+00,  5.4061e-04, -3.1898e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6119e-01, -1.4470e+00,  1.8555e-04, -3.1761e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.775000. Loss: 0.766986. Time: 2.995753
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.620000, Val Loss: 1.279962 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4074, -1.4475, -0.0027, -0.3650]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3783, -1.4477, -0.0041, -0.3959]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3530, -1.4481, -0.0032, -0.4224]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.3142e-01, -1.4488e+00,  1.6196e-05, -4.4687e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.4384e-01, -1.4492e+00,  1.1749e-03, -4.4286e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3502, -1.4494,  0.0016, -0.4439]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.6708e-01, -1.4497e+00,  2.2487e-04, -4.3818e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.9534e-01, -1.4499e+00, -2.5395e-04, -4.1504e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2682e-01, -1.4500e+00,  2.5731e-04, -3.8515e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4254e-01, -1.4501e+00,  1.3807e-04, -3.7889e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6182e-01, -1.4502e+00, -9.5035e-04, -3.6177e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7589e-01, -1.4503e+00, -3.8593e-04, -3.4468e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8280e-01, -1.4504e+00, -7.7215e-04, -3.3671e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8227e-01, -1.4504e+00, -2.3182e-04, -3.3483e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4712, -1.4505,  0.0025, -0.3438]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4554, -1.4508,  0.0018, -0.3642]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6142e-01, -1.4511e+00,  2.6903e-04, -3.6264e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4965e-01, -1.4513e+00, -7.4173e-05, -3.7963e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.0831e-01, -1.4514e+00, -2.7961e-04, -4.3159e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.730000. Loss: 0.912586. Time: 3.009135
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.610000, Val Loss: 1.305176 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4187, -1.4524, -0.0040, -0.4238]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4471, -1.4530, -0.0028, -0.4014]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4588, -1.4533, -0.0027, -0.3972]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4838, -1.4531, -0.0055, -0.3821]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4917, -1.4533, -0.0062, -0.3820]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4924, -1.4540, -0.0046, -0.3871]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4872, -1.4547, -0.0021, -0.3901]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7863e-01, -1.4551e+00, -7.7598e-04, -3.9369e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.5876e-01, -1.4554e+00,  5.0070e-04, -4.1036e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4438, -1.4555,  0.0019, -0.4295]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4285, -1.4557,  0.0023, -0.4550]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4122, -1.4558,  0.0019, -0.4774]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.9983e-01, -1.4561e+00, -8.1773e-04, -4.8812e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.1452e-01, -1.4564e+00, -9.7120e-04, -4.7232e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3259e-01, -1.4566e+00,  2.5960e-04, -4.5612e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3320e-01, -1.4568e+00,  1.0059e-03, -4.5336e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3872e-01, -1.4569e+00,  1.1191e-03, -4.4689e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4748e-01, -1.4570e+00,  6.0352e-04, -4.4135e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7389e-01, -1.4571e+00,  5.0600e-04, -4.1845e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.740000. Loss: 1.028487. Time: 3.009183
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.780000, Val Loss: 0.820183 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8536e-01, -1.4572e+00, -1.2878e-03, -4.0795e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4882, -1.4572, -0.0029, -0.4041]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8784e-01, -1.4576e+00, -1.3544e-03, -4.0169e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9697e-01, -1.4580e+00,  2.2229e-04, -3.9066e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4670, -1.4582,  0.0018, -0.4118]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4408, -1.4585,  0.0018, -0.4291]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2177e-01, -1.4587e+00,  1.3578e-03, -4.3014e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.9657e-01, -1.4589e+00,  8.6619e-05, -4.3826e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.7419e-01, -1.4590e+00, -4.2691e-04, -4.5123e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3597, -1.4590, -0.0016, -0.4658]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3547, -1.4592, -0.0016, -0.4743]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.6363e-01, -1.4594e+00,  3.2806e-04, -4.7178e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3976, -1.4595,  0.0019, -0.4422]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4227, -1.4597,  0.0024, -0.4207]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4501, -1.4599,  0.0018, -0.3980]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4442, -1.4600,  0.0018, -0.4072]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3068e-01, -1.4602e+00, -8.7498e-04, -4.3182e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4330, -1.4605, -0.0030, -0.4444]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4482, -1.4607, -0.0040, -0.4413]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.730000. Loss: 0.984166. Time: 3.013191
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.700000, Val Loss: 1.145460 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4989, -1.4609, -0.0049, -0.3945]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5136, -1.4611, -0.0046, -0.3856]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5365, -1.4611, -0.0047, -0.3647]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5187, -1.4611, -0.0048, -0.3885]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4765, -1.4617, -0.0023, -0.4353]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4596e-01, -1.4622e+00, -1.2019e-04, -4.6505e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4417, -1.4624,  0.0020, -0.4646]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4437, -1.4625,  0.0045, -0.4524]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4451, -1.4626,  0.0060, -0.4479]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4404, -1.4624,  0.0077, -0.4499]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4374, -1.4623,  0.0089, -0.4484]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4511, -1.4634,  0.0066, -0.4324]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4677, -1.4647,  0.0036, -0.4205]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4774, -1.4654,  0.0023, -0.4149]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7741e-01, -1.4659e+00,  8.0226e-04, -4.1849e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6778e-01, -1.4663e+00, -5.7025e-05, -4.3208e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6694e-01, -1.4665e+00,  9.7829e-04, -4.2980e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6984e-01, -1.4668e+00,  3.1958e-04, -4.2569e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6516e-01, -1.4669e+00, -1.2600e-03, -4.2428e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.745000. Loss: 0.835546. Time: 3.008205
Validate after epoch 14 with seed 964979
Val Accuracy: 0.790000, Val Loss: 0.803686 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4523, -1.4671, -0.0043, -0.4369]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4520, -1.4674, -0.0041, -0.4416]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4512, -1.4675, -0.0040, -0.4432]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4488, -1.4676, -0.0039, -0.4463]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4478, -1.4677, -0.0036, -0.4459]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4429, -1.4680, -0.0024, -0.4462]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3483e-01, -1.4686e+00,  7.2870e-04, -4.4519e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4440, -1.4689,  0.0016, -0.4309]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4534, -1.4691,  0.0026, -0.4206]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4663, -1.4693,  0.0029, -0.4147]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4749, -1.4695,  0.0024, -0.4140]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7988e-01, -1.4698e+00,  8.5960e-04, -4.1667e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6822e-01, -1.4700e+00, -8.9066e-05, -4.2949e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4804e-01, -1.4701e+00,  1.3714e-03, -4.4617e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4418, -1.4702,  0.0018, -0.4471]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4887e-01, -1.4704e+00,  4.6605e-04, -4.3790e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.5597e-01, -1.4706e+00, -9.3748e-04, -4.2970e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4646, -1.4706, -0.0030, -0.4211]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4639, -1.4707, -0.0037, -0.4197]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.810000. Loss: 0.699413. Time: 3.016307
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.790000, Val Loss: 0.769248 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4444, -1.4713, -0.0019, -0.4376]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3624e-01, -1.4715e+00, -8.6022e-04, -4.4175e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3339e-01, -1.4716e+00, -7.2233e-04, -4.4045e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3029e-01, -1.4717e+00, -2.5549e-04, -4.4151e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2867e-01, -1.4718e+00,  5.0407e-04, -4.4272e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4267, -1.4718,  0.0016, -0.4441]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2811e-01, -1.4719e+00,  5.3807e-04, -4.4542e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2765e-01, -1.4720e+00,  2.7494e-04, -4.4509e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4233, -1.4721,  0.0020, -0.4430]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4220, -1.4721,  0.0039, -0.4399]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4265, -1.4725,  0.0029, -0.4390]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3722e-01, -1.4731e+00,  1.7202e-04, -4.3343e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4578, -1.4735, -0.0019, -0.4231]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4783, -1.4739, -0.0024, -0.4104]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5031, -1.4742, -0.0018, -0.3904]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5240, -1.4743, -0.0022, -0.3732]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5299, -1.4743, -0.0025, -0.3740]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5141, -1.4744, -0.0023, -0.3987]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5000, -1.4745, -0.0019, -0.4164]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.770000. Loss: 0.855421. Time: 3.018809
Validate after epoch 16 with seed 840036
Val Accuracy: 0.750000, Val Loss: 0.935769 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4733, -1.4745, -0.0030, -0.4392]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4568, -1.4744, -0.0039, -0.4531]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4378, -1.4743, -0.0044, -0.4695]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4252, -1.4743, -0.0044, -0.4795]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4342, -1.4742, -0.0050, -0.4685]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4512, -1.4743, -0.0047, -0.4547]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4590, -1.4746, -0.0039, -0.4478]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4583, -1.4749, -0.0025, -0.4456]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4379e-01, -1.4754e+00, -9.6274e-05, -4.5445e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3930e-01, -1.4756e+00,  6.0175e-04, -4.5214e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4130e-01, -1.4758e+00, -2.9751e-04, -4.4899e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4565e-01, -1.4760e+00, -1.4272e-03, -4.4385e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.5247e-01, -1.4761e+00, -5.7737e-04, -4.3647e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4981e-01, -1.4763e+00,  1.9621e-04, -4.3671e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4314e-01, -1.4764e+00,  2.4083e-04, -4.3887e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4117e-01, -1.4764e+00, -4.0870e-04, -4.3766e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4435, -1.4764, -0.0023, -0.4313]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4461, -1.4764, -0.0033, -0.4288]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4334, -1.4764, -0.0041, -0.4366]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.750000. Loss: 1.038977. Time: 3.022687
Validate after epoch 17 with seed 180463
Val Accuracy: 0.660000, Val Loss: 1.668318 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4293, -1.4768, -0.0031, -0.4287]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4292, -1.4771, -0.0016, -0.4227]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3490e-01, -1.4774e+00, -4.6986e-04, -4.1472e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2819e-01, -1.4775e+00,  9.8788e-04, -4.1500e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4330, -1.4776,  0.0025, -0.4084]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4393, -1.4776,  0.0037, -0.3985]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4439, -1.4780,  0.0024, -0.3935]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4448, -1.4782,  0.0019, -0.4004]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4421, -1.4784,  0.0016, -0.4096]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4343, -1.4784,  0.0016, -0.4189]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3196e-01, -1.4785e+00,  1.0348e-03, -4.2166e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3637e-01, -1.4786e+00,  6.3630e-04, -4.1680e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4308e-01, -1.4786e+00,  6.1737e-04, -4.1235e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4850e-01, -1.4787e+00,  4.1239e-04, -4.0792e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.5637e-01, -1.4787e+00, -5.5433e-04, -4.0452e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4645, -1.4787, -0.0020, -0.4002]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4730, -1.4787, -0.0027, -0.3984]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4685, -1.4789, -0.0025, -0.4071]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4624, -1.4789, -0.0024, -0.4203]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.780000. Loss: 0.911004. Time: 3.003014
Validate after epoch 18 with seed 575883
Val Accuracy: 0.770000, Val Loss: 0.953844 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4488, -1.4791, -0.0016, -0.4456]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4371e-01, -1.4791e+00, -1.2850e-03, -4.5282e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4365, -1.4791, -0.0020, -0.4625]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4279, -1.4790, -0.0030, -0.4814]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4304, -1.4790, -0.0036, -0.4854]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4478, -1.4791, -0.0034, -0.4713]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4804, -1.4793, -0.0024, -0.4423]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2496e-01, -1.4796e+00, -8.7290e-04, -4.0450e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5613e-01, -1.4798e+00,  1.1333e-03, -3.7870e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5767, -1.4799,  0.0028, -0.3614]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5867, -1.4799,  0.0038, -0.3503]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5687, -1.4803,  0.0029, -0.3688]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5382, -1.4806,  0.0023, -0.4023]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5078, -1.4807,  0.0019, -0.4337]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4904, -1.4807,  0.0029, -0.4498]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4843, -1.4806,  0.0037, -0.4580]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5044, -1.4805,  0.0045, -0.4469]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5049, -1.4805,  0.0049, -0.4543]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4815, -1.4807,  0.0042, -0.4787]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.750000. Loss: 0.965315. Time: 3.009936
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.800000, Val Loss: 0.990463 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4622, -1.4814,  0.0015, -0.5091]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.5717e-01, -1.4816e+00,  4.7713e-04, -5.1856e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7263e-01, -1.4818e+00,  5.5703e-04, -5.1915e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8690e-01, -1.4819e+00,  1.3097e-04, -5.1652e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9718e-01, -1.4819e+00, -1.1904e-03, -5.1055e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5057, -1.4820, -0.0017, -0.5058]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2821e-01, -1.4821e+00, -1.0503e-03, -4.8655e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4763e-01, -1.4822e+00, -1.0161e-03, -4.6744e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5430, -1.4822, -0.0017, -0.4656]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5344, -1.4822, -0.0020, -0.4705]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5291, -1.4822, -0.0021, -0.4738]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5235, -1.4822, -0.0026, -0.4803]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5223, -1.4822, -0.0029, -0.4842]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5319, -1.4822, -0.0028, -0.4823]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5278, -1.4823, -0.0024, -0.4874]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5138, -1.4823, -0.0021, -0.4971]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5081, -1.4823, -0.0021, -0.4991]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4969, -1.4823, -0.0023, -0.5054]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9213e-01, -1.4825e+00, -6.8719e-04, -5.1103e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.805000. Loss: 0.626663. Time: 3.004932
Validate after epoch 20 with seed 822616
Val Accuracy: 0.780000, Val Loss: 0.765183 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5256, -1.4829,  0.0039, -0.5058]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5519, -1.4831,  0.0047, -0.4823]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5711, -1.4833,  0.0048, -0.4643]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5817, -1.4840,  0.0030, -0.4489]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5898, -1.4844,  0.0018, -0.4370]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8756e-01, -1.4847e+00,  1.1523e-03, -4.4123e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7643e-01, -1.4848e+00,  8.6600e-04, -4.5760e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6857e-01, -1.4849e+00,  8.4259e-04, -4.6718e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4411e-01, -1.4850e+00,  7.3010e-04, -4.9444e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2546e-01, -1.4850e+00,  4.2513e-04, -5.1513e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2140e-01, -1.4850e+00,  2.8937e-04, -5.1888e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2725e-01, -1.4850e+00,  1.4758e-04, -5.0960e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3190e-01, -1.4850e+00,  2.9119e-05, -5.0408e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4002e-01, -1.4851e+00,  4.5671e-05, -4.9431e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2933e-01, -1.4851e+00,  1.1936e-04, -5.0452e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2480e-01, -1.4851e+00, -4.3090e-04, -5.1275e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2157e-01, -1.4851e+00, -9.8731e-04, -5.1691e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0786e-01, -1.4851e+00, -1.0996e-03, -5.2875e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9705e-01, -1.4851e+00, -1.0678e-03, -5.3775e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.805000. Loss: 0.786538. Time: 3.012320
Validate after epoch 21 with seed 519531
Val Accuracy: 0.850000, Val Loss: 0.652942 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7961e-01, -1.4852e+00, -6.7656e-04, -5.3912e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7318e-01, -1.4852e+00,  3.1007e-04, -5.3975e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7050e-01, -1.4852e+00,  1.1439e-03, -5.3800e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8712e-01, -1.4853e+00,  1.0029e-03, -5.2640e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1498e-01, -1.4853e+00,  6.6979e-04, -5.0037e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3559e-01, -1.4854e+00, -1.8011e-04, -4.8170e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4988e-01, -1.4854e+00, -7.7339e-04, -4.7078e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4815e-01, -1.4855e+00, -9.5697e-04, -4.7165e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3897e-01, -1.4855e+00, -7.6690e-04, -4.7638e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4296e-01, -1.4855e+00, -3.2380e-04, -4.6721e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4558e-01, -1.4856e+00,  3.8705e-04, -4.5684e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4355e-01, -1.4856e+00,  9.6146e-04, -4.5772e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3294e-01, -1.4856e+00,  1.2078e-03, -4.6844e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1754e-01, -1.4857e+00,  7.4260e-04, -4.8655e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0281e-01, -1.4857e+00,  2.0158e-04, -5.0286e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0591e-01, -1.4857e+00,  4.1174e-05, -5.0066e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1296e-01, -1.4858e+00,  8.5488e-06, -4.8981e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0743e-01, -1.4858e+00, -2.0029e-04, -4.9242e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9931e-01, -1.4858e+00, -3.6711e-04, -4.9979e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.795000. Loss: 0.798135. Time: 3.010471
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.840000, Val Loss: 0.623171 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7690e-01, -1.4858e+00, -5.3001e-04, -5.2586e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6310e-01, -1.4858e+00, -4.3127e-04, -5.3657e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6333e-01, -1.4858e+00, -3.5752e-04, -5.3239e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7009e-01, -1.4858e+00, -3.4092e-04, -5.2525e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9370e-01, -1.4858e+00, -3.3011e-04, -4.9394e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1502e-01, -1.4858e+00, -3.0678e-04, -4.6544e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2742e-01, -1.4858e+00, -3.9560e-04, -4.5023e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3166e-01, -1.4858e+00, -3.7690e-04, -4.5131e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3476e-01, -1.4858e+00, -5.0140e-04, -4.4929e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3542e-01, -1.4858e+00, -6.1982e-04, -4.4671e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2736e-01, -1.4858e+00, -6.7663e-04, -4.5375e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2176e-01, -1.4858e+00, -7.3951e-04, -4.5883e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1700e-01, -1.4858e+00, -9.1868e-04, -4.6852e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1702e-01, -1.4858e+00, -1.3389e-03, -4.6982e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5188, -1.4857, -0.0018, -0.4656]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5123, -1.4857, -0.0019, -0.4713]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9525e-01, -1.4858e+00, -1.3926e-03, -4.8970e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8165e-01, -1.4859e+00, -9.0047e-04, -5.0539e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7647e-01, -1.4859e+00, -7.7914e-04, -5.1028e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.770000. Loss: 0.848913. Time: 3.011216
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.820000, Val Loss: 0.646394 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6829e-01, -1.4859e+00, -1.6191e-05, -5.2825e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8873e-01, -1.4860e+00,  8.2673e-04, -5.1725e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1454e-01, -1.4860e+00,  1.0444e-03, -4.9868e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5448e-01, -1.4860e+00,  1.1133e-03, -4.6005e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8124e-01, -1.4860e+00,  1.2026e-03, -4.3407e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9956e-01, -1.4860e+00,  1.3067e-03, -4.1614e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.1224e-01, -1.4860e+00,  1.3417e-03, -4.0520e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0073e-01, -1.4861e+00,  7.9257e-04, -4.1886e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8673e-01, -1.4861e+00, -4.0726e-05, -4.4005e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6733e-01, -1.4862e+00, -7.5936e-04, -4.6630e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3570e-01, -1.4862e+00, -1.1719e-03, -4.9891e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8070e-01, -1.4862e+00, -1.2360e-03, -5.4264e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4222e-01, -1.4863e+00, -8.5982e-04, -5.7822e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2351e-01, -1.4863e+00, -4.7995e-04, -5.9373e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.1258e-01, -1.4863e+00, -3.2519e-04, -6.0507e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.1780e-01, -1.4863e+00, -3.2666e-04, -6.0561e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3047e-01, -1.4863e+00, -3.7734e-04, -5.9609e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4727e-01, -1.4863e+00, -6.2741e-04, -5.7442e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6980e-01, -1.4863e+00, -9.4260e-04, -5.5136e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.845000. Loss: 0.805476. Time: 3.006202
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.860000, Val Loss: 0.738634 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0178e-01, -1.4863e+00, -1.2502e-03, -5.1371e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1065e-01, -1.4863e+00, -1.4490e-03, -4.9817e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2106e-01, -1.4863e+00, -1.2757e-03, -4.7816e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2104e-01, -1.4863e+00, -1.2610e-03, -4.6915e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2103e-01, -1.4864e+00, -8.6519e-04, -4.6481e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3068e-01, -1.4864e+00, -3.9355e-04, -4.5609e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4340e-01, -1.4864e+00,  5.0774e-04, -4.4440e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5590, -1.4864,  0.0018, -0.4328]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5331, -1.4864,  0.0025, -0.4556]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4864, -1.4865,  0.0028, -0.4999]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4709, -1.4865,  0.0028, -0.5112]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8444e-01, -1.4868e+00,  1.3260e-03, -4.8861e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8058e-01, -1.4871e+00, -9.6276e-04, -4.8719e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4667, -1.4873, -0.0024, -0.4970]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4770, -1.4874, -0.0034, -0.4912]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4870, -1.4874, -0.0040, -0.4851]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4853, -1.4874, -0.0044, -0.4900]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4900, -1.4874, -0.0046, -0.4874]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4864, -1.4875, -0.0046, -0.4918]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.750000. Loss: 0.878134. Time: 3.011852
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.860000, Val Loss: 0.551299 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4909, -1.4877, -0.0040, -0.4868]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4757, -1.4878, -0.0040, -0.5007]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4684, -1.4880, -0.0031, -0.5078]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4609, -1.4882, -0.0019, -0.5156]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6964e-01, -1.4885e+00, -7.6184e-04, -5.0914e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8782e-01, -1.4886e+00,  3.0668e-04, -4.9395e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9093e-01, -1.4887e+00,  7.8457e-04, -4.9120e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5034, -1.4887,  0.0018, -0.4726]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5191, -1.4888,  0.0023, -0.4546]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5244, -1.4890,  0.0015, -0.4516]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3573e-01, -1.4891e+00,  8.1306e-04, -4.4830e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3536e-01, -1.4892e+00,  7.4703e-04, -4.5054e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0996e-01, -1.4892e+00,  2.6421e-04, -4.6732e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8412e-01, -1.4893e+00, -5.5113e-04, -4.8320e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7469e-01, -1.4893e+00, -6.4720e-04, -4.8757e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8483e-01, -1.4894e+00,  1.7368e-04, -4.7674e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9845e-01, -1.4894e+00,  7.1933e-04, -4.6623e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8982e-01, -1.4895e+00,  6.7652e-04, -4.6786e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8238e-01, -1.4895e+00,  5.7809e-04, -4.6590e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.760000. Loss: 0.728235. Time: 3.010718
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.870000, Val Loss: 0.684982 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7738e-01, -1.4896e+00, -4.8217e-04, -4.5960e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7452e-01, -1.4896e+00, -6.7579e-04, -4.5947e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7347e-01, -1.4896e+00, -9.0912e-04, -4.5494e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6045e-01, -1.4896e+00, -1.3345e-03, -4.6318e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4074e-01, -1.4897e+00, -1.2008e-03, -4.7873e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2919e-01, -1.4897e+00, -8.5997e-04, -4.8500e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.2003e-01, -1.4897e+00, -1.2688e-03, -4.9304e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4684e-01, -1.4897e+00, -1.1809e-03, -4.7131e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7890e-01, -1.4898e+00, -1.0337e-03, -4.5148e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0824e-01, -1.4898e+00, -6.7724e-04, -4.3334e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4149e-01, -1.4898e+00, -6.2038e-05, -4.1310e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4831e-01, -1.4899e+00, -3.0984e-05, -4.1048e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3450e-01, -1.4899e+00, -3.5745e-04, -4.2450e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3887e-01, -1.4899e+00,  3.8834e-04, -4.1974e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4409e-01, -1.4899e+00,  1.2381e-03, -4.1951e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5463, -1.4899,  0.0018, -0.4223]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0744e-01, -1.4901e+00,  1.3214e-03, -4.6970e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7225e-01, -1.4902e+00,  5.5112e-04, -5.0918e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.5085e-01, -1.4902e+00, -4.6956e-04, -5.3077e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.760000. Loss: 1.064214. Time: 3.005045
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.780000, Val Loss: 0.914810 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.3941e-01, -1.4904e+00, -7.9698e-04, -5.5579e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.4610e-01, -1.4904e+00, -9.1570e-04, -5.5239e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6687e-01, -1.4904e+00, -7.8450e-04, -5.2983e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0774e-01, -1.4905e+00,  1.7182e-04, -4.8744e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1276e-01, -1.4905e+00,  1.5474e-04, -4.8415e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2883e-01, -1.4906e+00,  1.0061e-03, -4.7508e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5930e-01, -1.4906e+00,  9.5889e-04, -4.5003e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7570e-01, -1.4907e+00,  2.2704e-04, -4.3892e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8753e-01, -1.4907e+00, -7.5486e-04, -4.3172e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7006e-01, -1.4908e+00, -1.3034e-03, -4.4835e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5430, -1.4908, -0.0016, -0.4742]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5312, -1.4908, -0.0024, -0.4876]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5263, -1.4907, -0.0031, -0.4935]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5310, -1.4909, -0.0024, -0.4956]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5346, -1.4911, -0.0015, -0.4991]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2946e-01, -1.4913e+00, -4.4850e-04, -5.1301e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2629e-01, -1.4914e+00,  9.5472e-04, -5.2332e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5262, -1.4914,  0.0022, -0.5259]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5338, -1.4915,  0.0027, -0.5186]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.740000. Loss: 1.085280. Time: 3.019822
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.760000, Val Loss: 1.191453 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2461e-01, -1.4919e+00,  1.0978e-03, -5.2337e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2073e-01, -1.4922e+00, -1.1902e-04, -5.2652e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2485e-01, -1.4924e+00, -3.5323e-04, -5.2338e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2761e-01, -1.4925e+00, -6.1827e-04, -5.2388e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2892e-01, -1.4925e+00, -9.9330e-04, -5.2743e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3186e-01, -1.4925e+00, -1.4527e-03, -5.2368e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5335, -1.4925, -0.0016, -0.5217]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5337, -1.4925, -0.0022, -0.5230]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5411, -1.4924, -0.0029, -0.5163]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5512, -1.4926, -0.0025, -0.4992]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5545, -1.4926, -0.0025, -0.4911]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5507, -1.4928, -0.0016, -0.4878]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3668e-01, -1.4931e+00,  1.2463e-03, -4.9682e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5258, -1.4932,  0.0036, -0.5062]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5140, -1.4934,  0.0047, -0.5207]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5074, -1.4936,  0.0050, -0.5318]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5014, -1.4940,  0.0045, -0.5393]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4944, -1.4943,  0.0040, -0.5462]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5052, -1.4949,  0.0022, -0.5361]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.765000. Loss: 1.050750. Time: 3.024967
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.720000, Val Loss: 1.041374 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5526, -1.4956, -0.0033, -0.4959]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5750, -1.4957, -0.0058, -0.4786]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5853, -1.4958, -0.0073, -0.4723]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5921, -1.4959, -0.0079, -0.4688]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5983, -1.4962, -0.0080, -0.4665]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5966, -1.4969, -0.0070, -0.4708]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6088, -1.4971, -0.0069, -0.4651]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6097, -1.4977, -0.0059, -0.4723]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6068, -1.4980, -0.0055, -0.4804]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6005, -1.4982, -0.0052, -0.4913]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5600, -1.5005,  0.0020, -0.5316]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5415, -1.5029,  0.0063, -0.5521]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5311, -1.5048,  0.0079, -0.5645]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5136, -1.5048,  0.0105, -0.5908]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4958, -1.5032,  0.0138, -0.6176]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4802, -1.5006,  0.0173, -0.6397]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4662, -1.5000,  0.0192, -0.6578]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4999, -1.5149,  0.0093, -0.6202]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4464e-01, -1.5281e+00, -1.2264e-04, -5.7161e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.730000. Loss: 1.021514. Time: 3.018672
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.870000, Val Loss: 0.528766 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5710, -1.5412, -0.0066, -0.5508]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5773, -1.5437, -0.0082, -0.5467]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5960, -1.5441, -0.0099, -0.5376]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6038, -1.5449, -0.0106, -0.5353]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6153, -1.5452, -0.0111, -0.5257]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6122, -1.5460, -0.0111, -0.5223]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6055, -1.5472, -0.0108, -0.5225]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6061, -1.5469, -0.0110, -0.5151]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6083, -1.5470, -0.0111, -0.5089]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5930, -1.5505, -0.0097, -0.5195]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5636, -1.5535, -0.0085, -0.5457]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5393, -1.5551, -0.0078, -0.5708]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5246, -1.5561, -0.0075, -0.5884]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5297, -1.5565, -0.0073, -0.5843]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5597, -1.5542, -0.0081, -0.5578]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5761, -1.5532, -0.0085, -0.5360]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5752, -1.5541, -0.0081, -0.5349]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5720, -1.5556, -0.0075, -0.5345]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5652, -1.5585, -0.0064, -0.5373]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.810000. Loss: 0.711687. Time: 3.012011
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.840000, Val Loss: 0.829536 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5656, -1.5601, -0.0058, -0.5398]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5671, -1.5593, -0.0060, -0.5351]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5703, -1.5584, -0.0063, -0.5283]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5715, -1.5583, -0.0064, -0.5252]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5677, -1.5591, -0.0060, -0.5270]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5622, -1.5603, -0.0056, -0.5317]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5551, -1.5611, -0.0053, -0.5370]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5509, -1.5612, -0.0052, -0.5402]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5465, -1.5623, -0.0049, -0.5443]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5385, -1.5627, -0.0047, -0.5546]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5309, -1.5626, -0.0047, -0.5614]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5198, -1.5635, -0.0044, -0.5669]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5118, -1.5643, -0.0042, -0.5703]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5115, -1.5643, -0.0041, -0.5592]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5284, -1.5641, -0.0042, -0.5342]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5394, -1.5641, -0.0042, -0.5174]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5595, -1.5638, -0.0043, -0.4941]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5862, -1.5635, -0.0044, -0.4660]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6051, -1.5628, -0.0046, -0.4484]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.780000. Loss: 1.024025. Time: 3.014470
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.880000, Val Loss: 0.503804 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6061, -1.5631, -0.0045, -0.4464]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6049, -1.5634, -0.0044, -0.4480]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5956, -1.5634, -0.0044, -0.4601]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5905, -1.5638, -0.0042, -0.4672]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5869, -1.5643, -0.0041, -0.4686]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5792, -1.5644, -0.0040, -0.4729]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5781, -1.5639, -0.0042, -0.4742]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5631, -1.5631, -0.0044, -0.4888]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5525, -1.5632, -0.0044, -0.5003]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5313, -1.5639, -0.0041, -0.5193]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5238, -1.5648, -0.0039, -0.5315]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5279, -1.5654, -0.0036, -0.5307]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5344, -1.5657, -0.0035, -0.5274]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5380, -1.5660, -0.0035, -0.5258]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5482, -1.5652, -0.0037, -0.5213]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5592, -1.5643, -0.0039, -0.5161]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5713, -1.5639, -0.0040, -0.5076]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5762, -1.5635, -0.0041, -0.5074]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5647, -1.5633, -0.0041, -0.5243]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.800000. Loss: 0.686303. Time: 3.010138
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.850000, Val Loss: 0.658617 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5441, -1.5650, -0.0036, -0.5408]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5390, -1.5656, -0.0034, -0.5435]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5420, -1.5660, -0.0032, -0.5426]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5515, -1.5659, -0.0032, -0.5385]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5613, -1.5648, -0.0036, -0.5343]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5653, -1.5638, -0.0038, -0.5377]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5660, -1.5639, -0.0037, -0.5387]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5694, -1.5648, -0.0034, -0.5328]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5725, -1.5653, -0.0032, -0.5292]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5731, -1.5659, -0.0030, -0.5286]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5701, -1.5664, -0.0028, -0.5308]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5729, -1.5666, -0.0028, -0.5278]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5772, -1.5662, -0.0029, -0.5271]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5737, -1.5660, -0.0029, -0.5310]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5754, -1.5657, -0.0030, -0.5269]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5823, -1.5659, -0.0029, -0.5197]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5832, -1.5663, -0.0028, -0.5194]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5809, -1.5665, -0.0027, -0.5235]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5744, -1.5668, -0.0026, -0.5336]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.810000. Loss: 0.760880. Time: 3.014393
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.850000, Val Loss: 0.642146 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5446, -1.5661, -0.0028, -0.5757]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5308, -1.5655, -0.0030, -0.5935]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5227, -1.5651, -0.0031, -0.6047]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5201, -1.5648, -0.0032, -0.6090]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5297, -1.5648, -0.0032, -0.6002]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5357, -1.5650, -0.0031, -0.5935]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5443, -1.5652, -0.0031, -0.5830]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5567, -1.5654, -0.0030, -0.5711]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5662, -1.5651, -0.0031, -0.5622]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5790, -1.5645, -0.0033, -0.5531]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5934, -1.5652, -0.0031, -0.5363]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6018, -1.5656, -0.0029, -0.5245]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6168, -1.5662, -0.0027, -0.5169]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6096, -1.5666, -0.0025, -0.5322]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5949, -1.5671, -0.0024, -0.5459]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5842, -1.5673, -0.0023, -0.5539]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5653, -1.5669, -0.0024, -0.5698]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5451, -1.5663, -0.0026, -0.5893]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5399, -1.5657, -0.0027, -0.5906]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.810000. Loss: 0.948736. Time: 3.016570
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.890000, Val Loss: 0.507161 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5560, -1.5660, -0.0026, -0.5651]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5658, -1.5661, -0.0026, -0.5545]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5751, -1.5666, -0.0024, -0.5426]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5864, -1.5670, -0.0023, -0.5305]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6034, -1.5672, -0.0022, -0.5149]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6097, -1.5668, -0.0023, -0.5112]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6090, -1.5665, -0.0024, -0.5139]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5887, -1.5664, -0.0024, -0.5302]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5641, -1.5665, -0.0024, -0.5476]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5453, -1.5673, -0.0021, -0.5654]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5326, -1.5678, -0.0019, -0.5770]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5269, -1.5677, -0.0019, -0.5837]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5241, -1.5676, -0.0020, -0.5835]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5208, -1.5675, -0.0020, -0.5824]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5244, -1.5675, -0.0020, -0.5814]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5269, -1.5673, -0.0020, -0.5803]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5339, -1.5677, -0.0019, -0.5722]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5507, -1.5677, -0.0019, -0.5541]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5718, -1.5671, -0.0021, -0.5334]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.795000. Loss: 0.854026. Time: 3.013826
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.820000, Val Loss: 0.993675 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5957, -1.5664, -0.0023, -0.5145]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6033, -1.5669, -0.0020, -0.5089]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6103, -1.5674, -0.0019, -0.5044]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6124, -1.5678, -0.0017, -0.5034]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5993, -1.5676, -0.0018, -0.5257]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5916, -1.5676, -0.0018, -0.5414]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5932, -1.5680, -0.0016, -0.5451]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6000, -1.5679, -0.0016, -0.5467]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6006, -1.5675, -0.0018, -0.5522]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6016, -1.5677, -0.0017, -0.5512]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0523e-01, -1.5681e+00, -1.5485e-03, -5.4811e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.1475e-01, -1.5682e+00, -1.5081e-03, -5.4046e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0255e-01, -1.5682e+00, -1.5118e-03, -5.4340e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8882e-01, -1.5681e+00, -1.5240e-03, -5.4690e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8112e-01, -1.5682e+00, -1.4987e-03, -5.4782e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7277e-01, -1.5683e+00, -1.4753e-03, -5.5022e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7168e-01, -1.5682e+00, -1.4991e-03, -5.5056e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5648, -1.5680, -0.0016, -0.5612]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5585, -1.5675, -0.0017, -0.5739]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.845000. Loss: 0.696990. Time: 3.009042
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.810000, Val Loss: 0.803048 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7045e-01, -1.5679e+00, -1.5619e-03, -5.7252e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8067e-01, -1.5683e+00, -1.4254e-03, -5.6361e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8873e-01, -1.5686e+00, -1.3222e-03, -5.5608e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8597e-01, -1.5688e+00, -1.2636e-03, -5.5152e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8451e-01, -1.5689e+00, -1.2212e-03, -5.4522e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8455e-01, -1.5688e+00, -1.2475e-03, -5.4251e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8181e-01, -1.5686e+00, -1.2935e-03, -5.4429e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8475e-01, -1.5683e+00, -1.3986e-03, -5.5052e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7990e-01, -1.5682e+00, -1.4128e-03, -5.5548e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7704e-01, -1.5682e+00, -1.4143e-03, -5.5841e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7645e-01, -1.5682e+00, -1.4079e-03, -5.6136e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8386e-01, -1.5681e+00, -1.4373e-03, -5.5635e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9046e-01, -1.5680e+00, -1.4870e-03, -5.5051e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9454e-01, -1.5679e+00, -1.5089e-03, -5.4722e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9442e-01, -1.5680e+00, -1.4590e-03, -5.4797e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9371e-01, -1.5682e+00, -1.4121e-03, -5.5008e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9312e-01, -1.5683e+00, -1.3824e-03, -5.5150e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9196e-01, -1.5683e+00, -1.3762e-03, -5.5360e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8933e-01, -1.5681e+00, -1.4235e-03, -5.5843e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.885000. Loss: 0.481341. Time: 3.042036
Validate after epoch 38 with seed 297566
Val Accuracy: 0.860000, Val Loss: 0.690836 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8562e-01, -1.5684e+00, -1.3231e-03, -5.6098e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6908e-01, -1.5685e+00, -1.2620e-03, -5.7300e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3968e-01, -1.5683e+00, -1.3363e-03, -5.9698e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1574e-01, -1.5679e+00, -1.4629e-03, -6.1773e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0953e-01, -1.5679e+00, -1.4472e-03, -6.2123e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1490e-01, -1.5683e+00, -1.3030e-03, -6.0045e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2694e-01, -1.5687e+00, -1.1601e-03, -5.7966e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3692e-01, -1.5689e+00, -1.0791e-03, -5.6237e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4642e-01, -1.5690e+00, -1.0321e-03, -5.4215e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5373e-01, -1.5687e+00, -1.1319e-03, -5.3050e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7303e-01, -1.5684e+00, -1.2163e-03, -5.1096e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8778e-01, -1.5681e+00, -1.3257e-03, -5.0099e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8152e-01, -1.5682e+00, -1.2660e-03, -5.0717e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8060e-01, -1.5683e+00, -1.2377e-03, -5.0454e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7435e-01, -1.5683e+00, -1.2137e-03, -5.0537e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6307e-01, -1.5687e+00, -1.0708e-03, -5.0616e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2755e-01, -1.5691e+00, -9.2459e-04, -5.3063e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9730e-01, -1.5692e+00, -8.7261e-04, -5.5844e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8448e-01, -1.5693e+00, -8.4831e-04, -5.6825e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.745000. Loss: 1.237489. Time: 3.010008
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.820000, Val Loss: 0.813362 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9259e-01, -1.5691e+00, -8.8750e-04, -5.5232e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0049e-01, -1.5693e+00, -8.4315e-04, -5.3510e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0773e-01, -1.5693e+00, -8.3040e-04, -5.2718e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1616e-01, -1.5693e+00, -8.1562e-04, -5.2002e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3300e-01, -1.5693e+00, -8.2633e-04, -5.0660e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4447e-01, -1.5693e+00, -8.0906e-04, -5.0190e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4360e-01, -1.5692e+00, -8.3823e-04, -5.0927e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3214e-01, -1.5690e+00, -9.0992e-04, -5.2608e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1973e-01, -1.5691e+00, -8.7941e-04, -5.3588e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2046e-01, -1.5694e+00, -7.8164e-04, -5.3135e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2609e-01, -1.5693e+00, -7.8948e-04, -5.2542e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3594e-01, -1.5693e+00, -8.0769e-04, -5.1296e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4485e-01, -1.5695e+00, -7.1704e-04, -5.0012e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4913e-01, -1.5697e+00, -6.3687e-04, -4.9235e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5002e-01, -1.5698e+00, -5.9792e-04, -4.9521e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5372e-01, -1.5699e+00, -5.8447e-04, -4.9674e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6467e-01, -1.5698e+00, -6.0199e-04, -4.9511e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7737e-01, -1.5696e+00, -6.5698e-04, -4.9504e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9484e-01, -1.5696e+00, -6.4607e-04, -4.9061e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.825000. Loss: 0.607379. Time: 3.007207
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.750000, Val Loss: 1.104323 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8019e-01, -1.5698e+00, -5.9497e-04, -5.1280e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4877e-01, -1.5697e+00, -6.0857e-04, -5.3872e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3105e-01, -1.5696e+00, -6.3625e-04, -5.5473e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1652e-01, -1.5693e+00, -7.3564e-04, -5.7189e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0965e-01, -1.5692e+00, -7.8512e-04, -5.8283e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2243e-01, -1.5696e+00, -6.3801e-04, -5.6682e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3616e-01, -1.5700e+00, -4.7710e-04, -5.5018e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5089e-01, -1.5701e+00, -4.0445e-04, -5.3494e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6652e-01, -1.5703e+00, -3.4764e-04, -5.1880e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7529e-01, -1.5703e+00, -3.2234e-04, -5.1358e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8634e-01, -1.5704e+00, -2.8581e-04, -5.0998e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8846e-01, -1.5704e+00, -2.8922e-04, -5.1100e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8072e-01, -1.5703e+00, -2.9875e-04, -5.1446e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7397e-01, -1.5703e+00, -3.1849e-04, -5.1383e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6531e-01, -1.5703e+00, -3.1928e-04, -5.1614e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6057e-01, -1.5702e+00, -3.1791e-04, -5.1759e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5480e-01, -1.5702e+00, -3.2558e-04, -5.2155e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4224e-01, -1.5701e+00, -3.5389e-04, -5.3451e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3606e-01, -1.5701e+00, -3.6116e-04, -5.4119e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.750000. Loss: 1.180150. Time: 3.019354
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.820000, Val Loss: 0.710895 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2582e-01, -1.5703e+00, -3.0072e-04, -5.6906e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3811e-01, -1.5703e+00, -2.8829e-04, -5.5957e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4925e-01, -1.5703e+00, -2.8065e-04, -5.4629e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5516e-01, -1.5704e+00, -2.5572e-04, -5.3528e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5649e-01, -1.5704e+00, -2.3924e-04, -5.3010e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6107e-01, -1.5704e+00, -2.3537e-04, -5.2634e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6977e-01, -1.5704e+00, -2.3688e-04, -5.2153e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6905e-01, -1.5704e+00, -2.5231e-04, -5.2736e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6827e-01, -1.5703e+00, -2.6679e-04, -5.3122e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8076e-01, -1.5702e+00, -3.1437e-04, -5.1307e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7309e-01, -1.5702e+00, -3.1932e-04, -5.1083e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5514e-01, -1.5702e+00, -2.8511e-04, -5.2588e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4233e-01, -1.5704e+00, -2.3518e-04, -5.4074e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4047e-01, -1.5704e+00, -2.1298e-04, -5.4336e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2039e-01, -1.5704e+00, -2.1063e-04, -5.6317e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9227e-01, -1.5704e+00, -2.1783e-04, -5.8487e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7706e-01, -1.5703e+00, -2.3651e-04, -5.9773e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8607e-01, -1.5703e+00, -2.6156e-04, -5.8169e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9972e-01, -1.5703e+00, -2.3521e-04, -5.5600e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.770000. Loss: 0.973135. Time: 2.997601
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.780000, Val Loss: 0.884272 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1488e-01, -1.5705e+00, -1.7496e-04, -5.1676e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5746e-01, -1.5705e+00, -1.7814e-04, -4.7718e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8550e-01, -1.5705e+00, -1.8138e-04, -4.5601e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9125e-01, -1.5704e+00, -1.9488e-04, -4.6053e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6893e-01, -1.5704e+00, -1.9536e-04, -4.8130e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6094e-01, -1.5704e+00, -1.9740e-04, -4.8953e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5364e-01, -1.5704e+00, -1.9946e-04, -4.9776e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4837e-01, -1.5704e+00, -2.0130e-04, -5.0363e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4413e-01, -1.5704e+00, -1.9828e-04, -5.0726e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4063e-01, -1.5704e+00, -1.9844e-04, -5.1001e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3377e-01, -1.5704e+00, -1.8357e-04, -5.1679e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2909e-01, -1.5705e+00, -1.6835e-04, -5.2155e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3522e-01, -1.5705e+00, -1.5233e-04, -5.2417e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3692e-01, -1.5706e+00, -1.3411e-04, -5.2948e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3869e-01, -1.5705e+00, -1.4485e-04, -5.3168e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4328e-01, -1.5705e+00, -1.6076e-04, -5.3100e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3438e-01, -1.5705e+00, -1.5041e-04, -5.3980e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2104e-01, -1.5705e+00, -1.4232e-04, -5.4990e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1383e-01, -1.5705e+00, -1.3771e-04, -5.5343e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.815000. Loss: 0.830538. Time: 3.025145
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.820000, Val Loss: 0.597762 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2543e-01, -1.5705e+00, -1.4544e-04, -5.4195e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2429e-01, -1.5705e+00, -1.3630e-04, -5.3964e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2971e-01, -1.5706e+00, -1.2879e-04, -5.3114e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3276e-01, -1.5705e+00, -1.2963e-04, -5.2333e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4430e-01, -1.5706e+00, -1.2028e-04, -5.0742e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6221e-01, -1.5706e+00, -1.1613e-04, -4.8947e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6124e-01, -1.5706e+00, -1.0622e-04, -4.9053e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5339e-01, -1.5706e+00, -1.0632e-04, -4.9814e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4045e-01, -1.5706e+00, -1.1424e-04, -5.0795e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2901e-01, -1.5705e+00, -1.2926e-04, -5.1500e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1111e-01, -1.5705e+00, -1.3489e-04, -5.2918e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0325e-01, -1.5705e+00, -1.2929e-04, -5.3562e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9760e-01, -1.5706e+00, -1.1548e-04, -5.3833e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0607e-01, -1.5705e+00, -1.2606e-04, -5.3216e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2196e-01, -1.5705e+00, -1.3846e-04, -5.2001e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2957e-01, -1.5705e+00, -1.3498e-04, -5.1396e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4571e-01, -1.5705e+00, -1.2078e-04, -4.9315e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6702e-01, -1.5706e+00, -1.0415e-04, -4.7497e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6878e-01, -1.5706e+00, -8.0687e-05, -4.7161e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.770000. Loss: 0.865779. Time: 3.007827
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.760000, Val Loss: 0.953649 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4530e-01, -1.5706e+00, -8.0398e-05, -4.8672e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3155e-01, -1.5706e+00, -8.5686e-05, -5.0375e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1760e-01, -1.5706e+00, -8.4418e-05, -5.2473e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9583e-01, -1.5706e+00, -8.2819e-05, -5.5365e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7494e-01, -1.5706e+00, -8.5864e-05, -5.7583e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.6985e-01, -1.5706e+00, -8.4270e-05, -5.8373e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.7221e-01, -1.5706e+00, -8.2637e-05, -5.8520e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.8408e-01, -1.5706e+00, -8.9268e-05, -5.7564e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0611e-01, -1.5706e+00, -1.0396e-04, -5.5470e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3248e-01, -1.5705e+00, -1.2324e-04, -5.3838e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4646e-01, -1.5705e+00, -1.2963e-04, -5.2976e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6417e-01, -1.5706e+00, -9.9926e-05, -5.1207e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6702e-01, -1.5707e+00, -5.2775e-05, -5.0200e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7057e-01, -1.5708e+00, -1.8673e-05, -4.9836e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7213e-01, -1.5708e+00, -1.2609e-06, -4.9619e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6900e-01, -1.5708e+00,  9.1755e-06, -4.9601e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6986e-01, -1.5708e+00,  1.5646e-05, -4.9293e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6986e-01, -1.5709e+00,  2.0582e-05, -4.9571e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7285e-01, -1.5709e+00,  2.4249e-05, -4.9966e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.785000. Loss: 0.893635. Time: 3.009501
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.790000, Val Loss: 0.860010 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4314e-01, -1.5709e+00,  2.4744e-05, -5.4509e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4240e-01, -1.5709e+00,  2.3732e-05, -5.4987e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2746e-01, -1.5709e+00,  2.4956e-05, -5.6682e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1784e-01, -1.5709e+00,  2.4981e-05, -5.7860e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1614e-01, -1.5709e+00,  2.3887e-05, -5.8527e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1186e-01, -1.5709e+00,  2.2424e-05, -5.9428e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1463e-01, -1.5709e+00,  2.1040e-05, -5.9534e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2989e-01, -1.5709e+00,  2.0934e-05, -5.8057e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4227e-01, -1.5709e+00,  2.1494e-05, -5.6887e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5160e-01, -1.5709e+00,  2.2545e-05, -5.6116e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6960e-01, -1.5709e+00,  2.8659e-05, -5.4582e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8226e-01, -1.5709e+00,  3.4477e-05, -5.3419e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8614e-01, -1.5709e+00,  3.6571e-05, -5.2823e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9112e-01, -1.5709e+00,  3.2653e-05, -5.2248e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0922e-01, -1.5709e+00,  2.5957e-05, -5.0293e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0193e-01, -1.5708e+00,  2.1168e-05, -5.1068e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9810e-01, -1.5708e+00,  2.1284e-05, -5.1782e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9910e-01, -1.5708e+00,  2.1871e-05, -5.2351e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8268e-01, -1.5708e+00,  1.9507e-05, -5.3873e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.845000. Loss: 0.712848. Time: 3.019016
Validate after epoch 46 with seed 91566
Val Accuracy: 0.810000, Val Loss: 0.866817 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4171e-01, -1.5708e+00,  1.9971e-05, -5.8402e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.2371e-01, -1.5708e+00,  1.8683e-05, -6.0994e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.0289e-01, -1.5708e+00,  1.7533e-05, -6.3833e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 4.9369e-01, -1.5708e+00,  1.4940e-05, -6.4323e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.1676e-01, -1.5708e+00,  1.3686e-05, -6.0693e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8258e-01, -1.5708e+00,  1.4577e-05, -5.2727e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.2677e-01, -1.5708e+00,  1.5832e-05, -4.7523e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.6140e-01, -1.5708e+00,  2.0028e-05, -4.3706e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.8918e-01, -1.5708e+00,  2.0736e-05, -4.1071e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 7.0851e-01, -1.5708e+00,  2.0077e-05, -3.9357e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 7.2762e-01, -1.5708e+00,  1.8462e-05, -3.6909e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.9082e-01, -1.5708e+00,  1.1558e-05, -3.9498e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.6166e-01, -1.5708e+00,  7.9353e-06, -4.2083e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0734e-01, -1.5708e+00,  8.0510e-06, -4.7563e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5891e-01, -1.5708e+00,  9.6626e-06, -5.2780e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5423e-01, -1.5708e+00,  1.0492e-05, -5.3678e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7414e-01, -1.5708e+00,  1.0886e-05, -5.2100e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.1239e-01, -1.5708e+00,  8.6924e-06, -4.8236e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.3419e-01, -1.5708e+00,  6.7835e-06, -4.6016e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.780000. Loss: 1.078408. Time: 3.013173
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.790000, Val Loss: 0.754332 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.4451e-01, -1.5708e+00,  6.0231e-06, -4.5297e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.2360e-01, -1.5708e+00,  5.7051e-06, -4.7473e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0163e-01, -1.5708e+00,  5.3412e-06, -5.0162e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7672e-01, -1.5708e+00,  5.4993e-06, -5.3245e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6274e-01, -1.5708e+00,  6.1235e-06, -5.4815e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.9626e-01, -1.5708e+00,  5.0830e-06, -5.1375e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.4630e-01, -1.5708e+00,  3.9466e-06, -4.6131e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.3201e-01, -1.5708e+00,  4.3403e-06, -4.7343e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.1461e-01, -1.5708e+00,  5.0956e-06, -4.8992e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 6.0254e-01, -1.5708e+00,  4.7512e-06, -5.0017e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8573e-01, -1.5708e+00,  3.6135e-06, -5.1655e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7161e-01, -1.5708e+00,  2.5927e-06, -5.2922e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5998e-01, -1.5708e+00,  2.4783e-06, -5.4289e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5754e-01, -1.5708e+00,  2.4445e-06, -5.4842e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5538e-01, -1.5708e+00,  2.5110e-06, -5.5150e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5729e-01, -1.5708e+00,  2.7435e-06, -5.5190e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7619e-01, -1.5708e+00,  2.7522e-06, -5.3188e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8325e-01, -1.5708e+00,  2.4986e-06, -5.2328e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7016e-01, -1.5708e+00,  2.1283e-06, -5.3818e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.785000. Loss: 0.982331. Time: 3.010409
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.820000, Val Loss: 0.889387 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7211e-01, -1.5708e+00,  2.0165e-06, -5.3971e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6700e-01, -1.5708e+00,  1.8404e-06, -5.4419e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6039e-01, -1.5708e+00,  1.7287e-06, -5.5047e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4177e-01, -1.5708e+00,  1.4894e-06, -5.6791e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3426e-01, -1.5708e+00,  1.2080e-06, -5.7689e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3263e-01, -1.5708e+00,  1.3089e-06, -5.7978e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4112e-01, -1.5708e+00,  1.3104e-06, -5.7158e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5914e-01, -1.5708e+00,  1.6016e-06, -5.5401e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5349e-01, -1.5708e+00,  1.7248e-06, -5.5814e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5119e-01, -1.5708e+00,  1.4995e-06, -5.5697e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6137e-01, -1.5708e+00,  1.3794e-06, -5.4463e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7767e-01, -1.5708e+00,  1.3920e-06, -5.2736e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7395e-01, -1.5708e+00,  1.6343e-06, -5.3098e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6743e-01, -1.5708e+00,  1.9192e-06, -5.4166e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5557e-01, -1.5708e+00,  2.1424e-06, -5.5578e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4384e-01, -1.5708e+00,  1.9400e-06, -5.6866e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5134e-01, -1.5708e+00,  1.6337e-06, -5.5983e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5618e-01, -1.5708e+00,  1.4523e-06, -5.5426e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6189e-01, -1.5708e+00,  1.3230e-06, -5.4821e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.845000. Loss: 0.606677. Time: 3.012848
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.840000, Val Loss: 0.879002 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5911e-01, -1.5708e+00,  1.3785e-06, -5.5133e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4798e-01, -1.5708e+00,  1.4635e-06, -5.6346e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6015e-01, -1.5708e+00,  1.3215e-06, -5.5293e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6712e-01, -1.5708e+00,  1.0817e-06, -5.4574e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.5525e-01, -1.5708e+00,  9.5990e-07, -5.5586e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4762e-01, -1.5708e+00,  8.8503e-07, -5.6215e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3963e-01, -1.5708e+00,  8.2770e-07, -5.6932e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.3591e-01, -1.5708e+00,  7.9286e-07, -5.7233e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.4731e-01, -1.5708e+00,  7.7588e-07, -5.6625e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.6426e-01, -1.5708e+00,  7.7141e-07, -5.5357e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7504e-01, -1.5708e+00,  7.7705e-07, -5.4374e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8269e-01, -1.5708e+00,  8.3551e-07, -5.3748e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7645e-01, -1.5708e+00,  8.6834e-07, -5.4627e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7437e-01, -1.5708e+00,  9.2083e-07, -5.5318e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7436e-01, -1.5708e+00,  9.8252e-07, -5.5884e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7641e-01, -1.5708e+00,  8.8090e-07, -5.5743e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7858e-01, -1.5708e+00,  7.8737e-07, -5.5917e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.8073e-01, -1.5708e+00,  6.5590e-07, -5.6021e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 5.7892e-01, -1.5708e+00,  6.1825e-07, -5.6271e-01]],
       dtype=torch.float64, requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.855000. Loss: 0.794659. Time: 3.027000
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.770000, Val Loss: 1.115439 
Training Execution time: 06:03:47.00
Conducting Test
Test Accuracy: 0.802000, Test Loss: 0.830849 
